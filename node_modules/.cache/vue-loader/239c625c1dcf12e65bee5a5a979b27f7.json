{"remainingRequest":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\DepartUserList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\DepartUserList.vue","mtime":1568535261000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DeptBaseInfo from './modules/DeptBaseInfo'\nimport DeptUserInfo from './modules/DeptUserInfo'\nimport {queryDepartTreeList, searchByKeywords} from '@/api/api'\nimport {JeecgListMixin} from '@/mixins/JeecgListMixin'\n\nexport default {\n  name: 'DepartUserList',\n  mixins: [JeecgListMixin],\n  components: {\n    DeptBaseInfo,\n    DeptUserInfo,\n  },\n  data() {\n    return {\n      currentDeptId: '',\n      iExpandedKeys: [],\n      loading: false,\n      autoExpandParent: true,\n      currFlowId: '',\n      currFlowName: '',\n      disable: true,\n      treeData: [],\n      visible: false,\n      departTree: [],\n      rightClickSelectedKey: '',\n      hiding: true,\n      model: {},\n      dropTrigger: '',\n      depart: {},\n      disableSubmit: false,\n      checkedKeys: [],\n      selectedKeys: [],\n      autoIncr: 1,\n      currSelected: {},\n      form: this.$form.createForm(this),\n      labelCol: {\n        xs: {span: 24},\n        sm: {span: 5}\n      },\n      wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 16}\n      },\n      graphDatasource: {\n        nodes: [],\n        edges: []\n      },\n    }\n  },\n  methods: {\n    callback(key) {\n      console.log(key)\n    },\n    loadData() {\n      this.refresh();\n    },\n    loadTree() {\n      var that = this\n      that.treeData = []\n      that.departTree = []\n      queryDepartTreeList().then((res) => {\n        if (res.success) {\n          for (let i = 0; i < res.result.length; i++) {\n            let temp = res.result[i]\n            that.treeData.push(temp)\n            that.departTree.push(temp)\n            that.setThisExpandedKeys(temp)\n            // console.log(temp.id)\n          }\n          this.loading = false\n        }\n      })\n    },\n    setThisExpandedKeys(node) {\n      if (node.children && node.children.length > 0) {\n        this.iExpandedKeys.push(node.key)\n        for (let a = 0; a < node.children.length; a++) {\n          this.setThisExpandedKeys(node.children[a])\n        }\n      }\n    },\n    refresh() {\n      this.loading = true\n      this.loadTree()\n    },\n\n    onExpand(expandedKeys) {\n      // console.log('onExpand', expandedKeys)\n      // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n      // or, you can remove all expanded children keys.\n      this.iExpandedKeys = expandedKeys\n      this.autoExpandParent = false\n    },\n\n    onSearch(value) {\n      let that = this\n      if (value) {\n        searchByKeywords({keyWord: value}).then((res) => {\n          if (res.success) {\n            that.departTree = []\n            for (let i = 0; i < res.result.length; i++) {\n              let temp = res.result[i]\n              that.departTree.push(temp)\n            }\n          } else {\n            that.$message.warning(res.message)\n          }\n        })\n      } else {\n        that.loadTree()\n      }\n\n    },\n    onCheck(checkedKeys, e) {\n      let record = e.node.dataRef;\n      // console.log('onCheck', checkedKeys, e);\n      this.checkedKeys = [];\n      // if (e.checked === true) {\n      this.currentDeptId = record.id;\n      this.checkedKeys.push(record.id);\n\n      this.$refs.DeptBaseInfo.open(record);\n      this.$refs.DeptUserInfo.open(record);\n      // }\n      // else {\n      //   this.checkedKeys = [];\n      //   this.$refs.DeptBaseInfo.clearForm();\n      //   this.$refs.DeptUserInfo.clearList();\n      // }\n\n      this.hiding = false;\n      // this.checkedKeys = checkedKeys.checked\n    },\n    onSelect(selectedKeys, e) {\n      if (this.selectedKeys[0] !== selectedKeys[0]) {\n        this.selectedKeys = [selectedKeys[0]];\n      }\n      let record = e.node.dataRef;\n      this.checkedKeys.push(record.id);\n      this.$refs.DeptBaseInfo.open(record);\n      this.$refs.DeptUserInfo.onClearSelected();\n      this.$refs.DeptUserInfo.open(record);\n    },\n  },\n  created() {\n    this.currFlowId = this.$route.params.id\n    this.currFlowName = this.$route.params.name\n    // this.loadTree()\n  },\n}\n",{"version":3,"sources":["DepartUserList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"DepartUserList.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\r\n  <a-row :gutter=\"10\">\r\n    <a-col :md=\"8\" :sm=\"24\">\r\n      <a-card :bordered=\"false\">\r\n        <div style=\"background: #fff;padding-left:16px;height: 100%; margin-top: 5px\">\r\n          <a-input-search @search=\"onSearch\" style=\"width:100%;margin-top: 10px\" placeholder=\"请输入部门名称\"/>\r\n          <!-- 树-->\r\n\r\n          <template>\r\n\r\n            <!--组织机构-->\r\n            <a-directory-tree\r\n              selectable\r\n              :selectedKeys=\"selectedKeys\"\r\n              :checkStrictly=\"true\"\r\n              @select=\"onSelect\"\r\n              :dropdownStyle=\"{maxHeight:'200px',overflow:'auto'}\"\r\n              :treeData=\"departTree\"\r\n            />\r\n\r\n          </template>\r\n\r\n        </div>\r\n      </a-card>\r\n    </a-col>\r\n    <a-col :md=\"16\" :sm=\"24\">\r\n      <a-card :bordered=\"false\">\r\n        <a-tabs defaultActiveKey=\"2\" @change=\"callback\">\r\n          <a-tab-pane tab=\"基本信息\" key=\"1\" forceRender>\r\n            <Dept-Base-Info ref=\"DeptBaseInfo\"></Dept-Base-Info>\r\n          </a-tab-pane>\r\n          <a-tab-pane tab=\"用户信息\" key=\"2\">\r\n            <Dept-User-Info ref=\"DeptUserInfo\"></Dept-User-Info>\r\n          </a-tab-pane>\r\n        </a-tabs>\r\n      </a-card>\r\n    </a-col>\r\n  </a-row>\r\n</template>\r\n<script>\r\n  import DeptBaseInfo from './modules/DeptBaseInfo'\r\n  import DeptUserInfo from './modules/DeptUserInfo'\r\n  import {queryDepartTreeList, searchByKeywords} from '@/api/api'\r\n  import {JeecgListMixin} from '@/mixins/JeecgListMixin'\r\n\r\n  export default {\r\n    name: 'DepartUserList',\r\n    mixins: [JeecgListMixin],\r\n    components: {\r\n      DeptBaseInfo,\r\n      DeptUserInfo,\r\n    },\r\n    data() {\r\n      return {\r\n        currentDeptId: '',\r\n        iExpandedKeys: [],\r\n        loading: false,\r\n        autoExpandParent: true,\r\n        currFlowId: '',\r\n        currFlowName: '',\r\n        disable: true,\r\n        treeData: [],\r\n        visible: false,\r\n        departTree: [],\r\n        rightClickSelectedKey: '',\r\n        hiding: true,\r\n        model: {},\r\n        dropTrigger: '',\r\n        depart: {},\r\n        disableSubmit: false,\r\n        checkedKeys: [],\r\n        selectedKeys: [],\r\n        autoIncr: 1,\r\n        currSelected: {},\r\n        form: this.$form.createForm(this),\r\n        labelCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 5}\r\n        },\r\n        wrapperCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 16}\r\n        },\r\n        graphDatasource: {\r\n          nodes: [],\r\n          edges: []\r\n        },\r\n      }\r\n    },\r\n    methods: {\r\n      callback(key) {\r\n        console.log(key)\r\n      },\r\n      loadData() {\r\n        this.refresh();\r\n      },\r\n      loadTree() {\r\n        var that = this\r\n        that.treeData = []\r\n        that.departTree = []\r\n        queryDepartTreeList().then((res) => {\r\n          if (res.success) {\r\n            for (let i = 0; i < res.result.length; i++) {\r\n              let temp = res.result[i]\r\n              that.treeData.push(temp)\r\n              that.departTree.push(temp)\r\n              that.setThisExpandedKeys(temp)\r\n              // console.log(temp.id)\r\n            }\r\n            this.loading = false\r\n          }\r\n        })\r\n      },\r\n      setThisExpandedKeys(node) {\r\n        if (node.children && node.children.length > 0) {\r\n          this.iExpandedKeys.push(node.key)\r\n          for (let a = 0; a < node.children.length; a++) {\r\n            this.setThisExpandedKeys(node.children[a])\r\n          }\r\n        }\r\n      },\r\n      refresh() {\r\n        this.loading = true\r\n        this.loadTree()\r\n      },\r\n\r\n      onExpand(expandedKeys) {\r\n        // console.log('onExpand', expandedKeys)\r\n        // if not set autoExpandParent to false, if children expanded, parent can not collapse.\r\n        // or, you can remove all expanded children keys.\r\n        this.iExpandedKeys = expandedKeys\r\n        this.autoExpandParent = false\r\n      },\r\n\r\n      onSearch(value) {\r\n        let that = this\r\n        if (value) {\r\n          searchByKeywords({keyWord: value}).then((res) => {\r\n            if (res.success) {\r\n              that.departTree = []\r\n              for (let i = 0; i < res.result.length; i++) {\r\n                let temp = res.result[i]\r\n                that.departTree.push(temp)\r\n              }\r\n            } else {\r\n              that.$message.warning(res.message)\r\n            }\r\n          })\r\n        } else {\r\n          that.loadTree()\r\n        }\r\n\r\n      },\r\n      onCheck(checkedKeys, e) {\r\n        let record = e.node.dataRef;\r\n        // console.log('onCheck', checkedKeys, e);\r\n        this.checkedKeys = [];\r\n        // if (e.checked === true) {\r\n        this.currentDeptId = record.id;\r\n        this.checkedKeys.push(record.id);\r\n\r\n        this.$refs.DeptBaseInfo.open(record);\r\n        this.$refs.DeptUserInfo.open(record);\r\n        // }\r\n        // else {\r\n        //   this.checkedKeys = [];\r\n        //   this.$refs.DeptBaseInfo.clearForm();\r\n        //   this.$refs.DeptUserInfo.clearList();\r\n        // }\r\n\r\n        this.hiding = false;\r\n        // this.checkedKeys = checkedKeys.checked\r\n      },\r\n      onSelect(selectedKeys, e) {\r\n        if (this.selectedKeys[0] !== selectedKeys[0]) {\r\n          this.selectedKeys = [selectedKeys[0]];\r\n        }\r\n        let record = e.node.dataRef;\r\n        this.checkedKeys.push(record.id);\r\n        this.$refs.DeptBaseInfo.open(record);\r\n        this.$refs.DeptUserInfo.onClearSelected();\r\n        this.$refs.DeptUserInfo.open(record);\r\n      },\r\n    },\r\n    created() {\r\n      this.currFlowId = this.$route.params.id\r\n      this.currFlowName = this.$route.params.name\r\n      // this.loadTree()\r\n    },\r\n  }\r\n</script>\r\n<style scoped>\r\n  @import '~@assets/less/common.less'\r\n</style>"]}]}