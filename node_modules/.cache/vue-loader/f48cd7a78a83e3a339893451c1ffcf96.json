{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\system\\modules\\DictModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\system\\modules\\DictModal.vue","mtime":1575430916907},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1570779245522},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pick from 'lodash.pick'\nimport { httpAction,getAction } from '@/api/manage'\nimport { addDict, editDict, duplicateCheck } from '@/api/api'\n\nexport default {\n  name: 'DictModal',\n  data() {\n    return {\n      value: 1,\n      title: '操作',\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {\n        dictName: { rules: [{ required: true, message: '请输入字典名称!' }] },\n        dictCode: {\n          rules: [{ required: true, message: '请输入字典编码!' },\n            { validator: this.validateDictCode }]\n        }\n      }\n    }\n  },\n  created() {\n    this.initialUserList();\n  },\n  methods: {\n\n    validateDictCode(rule, value, callback) {\n      // 重复校验\n      var params = {\n        tableName: 'sys_dict',\n        fieldName: 'dict_code',\n        fieldVal: value,\n        dataId: this.model.id\n      }\n      duplicateCheck(params).then((res) => {\n        if (res.success) {\n          callback()\n        } else {\n          callback(res.message)\n        }\n      })\n    },\n    handleChange(value) {\n      this.model.status = value\n    },\n    add() {\n      this.edit({})\n    },\n    edit(record) {\n      if (record.id) {\n        this.visiblekey = true\n      } else {\n        this.visiblekey = false\n      }\n      this.form.resetFields()\n      this.model = Object.assign({}, record)\n      this.visible = true\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model, 'dictName', 'dictCode', 'description','departs'))\n      })\n    },\n    // 确定\n    handleOk() {\n      const that = this\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true\n          values.dictName = (values.dictName || '').trim()\n          values.dictCode = (values.dictCode || '').trim()\n          values.description = (values.description || '').trim()\n          let formData = Object.assign(this.model, values)\n          let obj\n          console.log(formData)\n          if (!this.model.id) {\n            obj = addDict(formData)\n          } else {\n            obj = editDict(formData)\n          }\n          obj.then((res) => {\n            if (res.success) {\n              that.$message.success(res.message)\n              that.$emit('ok')\n            } else {\n              that.$message.warning(res.message)\n            }\n          }).finally(() => {\n            that.confirmLoading = false\n            that.close()\n          })\n        }\n      })\n    },\n    // 关闭\n    handleCancel() {\n      this.close()\n    },\n    close() {\n      this.$emit('close')\n      this.visible = false\n    }\n  }\n}\n",{"version":3,"sources":["DictModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DictModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"600\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\"\r\n  >\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"字典名称\">\r\n          <a-input placeholder=\"请输入字典名称\" v-decorator=\"[ 'dictName', validatorRules.dictName]\"/>\r\n        </a-form-item>\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"字典编码\">\r\n          <a-input placeholder=\"请输入字典编码\" v-decorator=\"[ 'dictCode', validatorRules.dictCode]\"/>\r\n        </a-form-item>\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"描述\">\r\n          <a-input v-decorator=\"[ 'description']\"/>\r\n        </a-form-item>\r\n\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import pick from 'lodash.pick'\r\n  import { httpAction,getAction } from '@/api/manage'\r\n  import { addDict, editDict, duplicateCheck } from '@/api/api'\r\n\r\n  export default {\r\n    name: 'DictModal',\r\n    data() {\r\n      return {\r\n        value: 1,\r\n        title: '操作',\r\n        visible: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 }\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 }\r\n        },\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        validatorRules: {\r\n          dictName: { rules: [{ required: true, message: '请输入字典名称!' }] },\r\n          dictCode: {\r\n            rules: [{ required: true, message: '请输入字典编码!' },\r\n              { validator: this.validateDictCode }]\r\n          }\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.initialUserList();\r\n    },\r\n    methods: {\r\n\r\n      validateDictCode(rule, value, callback) {\r\n        // 重复校验\r\n        var params = {\r\n          tableName: 'sys_dict',\r\n          fieldName: 'dict_code',\r\n          fieldVal: value,\r\n          dataId: this.model.id\r\n        }\r\n        duplicateCheck(params).then((res) => {\r\n          if (res.success) {\r\n            callback()\r\n          } else {\r\n            callback(res.message)\r\n          }\r\n        })\r\n      },\r\n      handleChange(value) {\r\n        this.model.status = value\r\n      },\r\n      add() {\r\n        this.edit({})\r\n      },\r\n      edit(record) {\r\n        if (record.id) {\r\n          this.visiblekey = true\r\n        } else {\r\n          this.visiblekey = false\r\n        }\r\n        this.form.resetFields()\r\n        this.model = Object.assign({}, record)\r\n        this.visible = true\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue(pick(this.model, 'dictName', 'dictCode', 'description','departs'))\r\n        })\r\n      },\r\n      // 确定\r\n      handleOk() {\r\n        const that = this\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true\r\n            values.dictName = (values.dictName || '').trim()\r\n            values.dictCode = (values.dictCode || '').trim()\r\n            values.description = (values.description || '').trim()\r\n            let formData = Object.assign(this.model, values)\r\n            let obj\r\n            console.log(formData)\r\n            if (!this.model.id) {\r\n              obj = addDict(formData)\r\n            } else {\r\n              obj = editDict(formData)\r\n            }\r\n            obj.then((res) => {\r\n              if (res.success) {\r\n                that.$message.success(res.message)\r\n                that.$emit('ok')\r\n              } else {\r\n                that.$message.warning(res.message)\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false\r\n              that.close()\r\n            })\r\n          }\r\n        })\r\n      },\r\n      // 关闭\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n      close() {\r\n        this.$emit('close')\r\n        this.visible = false\r\n      }\r\n    }\r\n  }\r\n</script>"]}]}