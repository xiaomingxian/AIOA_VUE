{"remainingRequest":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\modules\\online\\cgform\\auto\\OnlCgformTreeList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\modules\\online\\cgform\\auto\\OnlCgformTreeList.vue","mtime":1568535258172},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883562},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858740},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883562},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696677}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { getAction,postAction,deleteAction,downFile } from '@/api/manage'\nimport { filterMultiDictText } from '@/components/dict/JDictSelectUtil'\nimport { filterObj } from '@/utils/util';\nimport JImportModal from '@/components/jeecg/JImportModal'\n\nexport default {\n  name: 'OnlCgformTreeList',\n  components: {\n    JImportModal\n  },\n  data() {\n    return {\n      code: '87b55a515d3441b6b98e48e5b35474a6',\n      description: '在线报表功能测试页面',\n      currentTableName:\"\",\n      pidField:\"\",\n      hasChildrenField:\"\",\n      textField:'',\n      loading: false,\n      // 表头\n      columns: [],\n      //数据集\n      dataSource: [],\n      // 选择器\n      selectedRowKeys: [],\n      selectionRows: [],\n      // 分页参数\n      pagination: {\n        current: 1,\n        pageSize: 10,\n        pageSizeOptions: ['10', '20', '30'],\n        showTotal: (total, range) => {\n          return range[0] + '-' + range[1] + ' 共' + total + '条'\n        },\n        showQuickJumper: true,\n        showSizeChanger: true,\n        total: 0\n      },\n\n      url: {\n        getColumns: '/online/cgform/api/getColumns/',\n        getTreeData: '/online/cgform/api/getTreeData/',\n        optPre:\"/online/cgform/api/form/\",\n        exportXls:'/online/cgform/api/exportXls/',\n        buttonAction:'/online/cgform/api/doButton',\n        startProcess: \"/process/extActProcess/startMutilProcess\",\n      },\n      isorter:{\n        column: 'create_time',\n        order: 'desc',\n      },\n      dictOptions:{\n\n      },\n\n      queryParam:{\n\n      },\n      actionColumn:{\n        title: '操作',\n        dataIndex: 'action',\n        scopedSlots: { customRender: 'action' },\n        fixed:\"right\",\n        align:\"center\",\n        width:150\n      },\n      formTemplate:\"99\",\n\n      /*自定义按钮-link*/\n      cgButtonLinkList:[],\n      /*自定义按钮-button*/\n      cgButtonList:[],\n      /*JS增强*/\n      EnhanceJS:'',\n      /*操作按钮权限*/\n      buttonSwitch:{\n        add:true,\n        update:true,\n        delete:true,\n        batch_delete:true,\n        import:true,\n        export:true\n      },\n      expandedRowKeys:[]\n\n    }\n  },\n  created() {\n    this.initAutoListConfig().then(()=>{\n      this.loadData(1)\n    }).catch(msg=>{\n      console.log(msg)\n    })\n  },\n  mounted(){\n    //this.cgButtonJsHandler('mounted')\n  },\n  watch: {\n    '$route'() {\n      // 刷新参数放到这里去触发，就可以刷新相同界面了\n      this.initAutoListConfig().then(()=>{\n        this.loadData(1)\n      }).catch(msg=>{\n        console.log(msg)\n      })\n    }\n  },\n  computed: {\n    tableProps() {\n      let _this = this\n      return {\n        // 列表项是否可选择\n        // https://vue.ant.design/components/table-cn/#rowSelection\n        rowSelection: {\n          selectedRowKeys: _this.selectedRowKeys,\n          onChange: (selectedRowKeys) => _this.selectedRowKeys = selectedRowKeys\n        }\n      }\n    }\n  },\n  methods: {\n    resetData(){\n      this.description=''\n      this.currentTableName=''\n      this.pidField=''\n      this.hasChildrenField=''\n      this.textField=''\n      this.columns = []\n      this.dataSource = []\n      this.selectedRowKeys=[]\n      this.selectionRows=[]\n    },\n    initAutoListConfig() {\n      return new Promise((resolve, reject) => {\n        if (!this.$route.params.code) {\n          reject(\"列表加载需要参数CODE为空!\")\n        } else {\n          this.resetData()\n          this.loading = true\n          this.code = this.$route.params.code\n          getAction(`${this.url.getColumns}${this.code}`)\n            .then(res => {\n              console.log(\"--onlineList-加载动态列>>\", res);\n              if(res.success){\n                this.configInfohandler(res)\n                resolve();\n              }else{\n                reject(\"onlineList-加载表配置信息失败\")\n              }\n              this.loading = false\n            })\n            .catch(err => {\n              reject(err)\n            })\n        }\n      })\n    },\n    configInfohandler(res){\n      this.dictOptions = res.result.dictOptions\n      this.formTemplate = res.result.formTemplate\n      this.description = res.result.description\n      this.currentTableName = res.result.currentTableName\n      this.pidField = res.result.pidField\n      this.hasChildrenField = res.result.hasChildrenField\n      this.textField = res.result.textField\n      //自定义按钮\n      this.initCgButtonList(res.result.cgButtonList)\n      //JS增强\n      this.initCgEnhanceJs(res.result.enhanceJs)\n      //操作按钮权限\n      this.initButtonSwitch(res.result.hideColumns)\n      let currColumns = res.result.columns\n      let textFieldIndex = -1\n      for(let a=0;a<currColumns.length;a++){\n        currColumns[a].align = 'left'\n        if(this.textField==currColumns[a].dataIndex){\n          textFieldIndex = a\n        }\n        if(currColumns[a].customRender){\n          let dictCode = currColumns[a].customRender;\n          currColumns[a].customRender=(text)=>{\n            return filterMultiDictText(this.dictOptions[dictCode], text);\n          }\n        }\n      }\n      if(textFieldIndex!=-1){\n        let textFieldColumn = currColumns.splice(textFieldIndex,1)\n        currColumns.unshift(textFieldColumn[0])\n      }\n      currColumns.push(this.actionColumn);\n      this.columns = [...currColumns]\n    },\n    //加载根节点\n    loadData(arg){\n      if(arg==1){\n        this.pagination.current=1\n      }\n      this.loading = true\n      this.expandedRowKeys=[]\n      let params = this.getQueryParams();//查询条件\n      params[this.pidField]='0'\n      console.log(\"--onlineList-查询条件-->\",params)\n      getAction(`${this.url.getTreeData}${this.code}`,params).then((res)=>{\n        console.log(\"--onlineList-列表数据\",res)\n        if(res.success){\n          let result = res.result;\n          if(Number(result.total)>0){\n            this.pagination.total = Number(result.total)\n            let dataSource = res.result.records.map(item => {\n              // 判断是否标记了带有子级\n              if (item[this.hasChildrenField] === true || item[this.hasChildrenField]=='1') {\n                let loadChild = { id: `${item.id}_loadChild`, name: 'loading...', isLoading: true }\n                item.children = [loadChild]\n              }\n              return item\n            })\n            this.dataSource = dataSource\n          }else{\n            this.pagination.total=0;\n            this.dataSource=[]\n          }\n        }else{\n          this.$message.warning(res.message)\n        }\n        this.loading = false\n      })\n    },\n    //加载叶子节点\n    handleExpand(expanded, record) {\n      // 判断是否是展开状态\n      if (expanded) {\n        this.expandedRowKeys.push(record.id)\n        if (record.children.length>0 && record.children[0].isLoading === true) {\n          let params = this.getQueryParams();//查询条件\n          params[this.pidField] = record.id\n          getAction(`${this.url.getTreeData}${this.code}`,params).then((res)=>{\n            if(res.success){\n              if(Number(res.result.total)>0){\n                let dataSource = res.result.records.map(item => {\n                  // 判断是否标记了带有子级\n                  if (item[this.hasChildrenField] === true || item[this.hasChildrenField]=='1') {\n                    let loadChild = { id: `${item.id}_loadChild`, name: 'loading...', isLoading: true }\n                    item.children = [loadChild]\n                  }\n                  return item\n                })\n                record.children = dataSource\n              }else{\n                record.children=''\n                record.hasChildrenField='0'\n              }\n            }else{\n              this.$message.warning(res.message)\n            }\n          })\n        }\n      }else{\n        let keyIndex = this.expandedRowKeys.indexOf(record.id)\n        if(keyIndex>=0){\n          this.expandedRowKeys.splice(keyIndex, 1);\n        }\n      }\n    },\n    getQueryParams() {\n      let param = Object.assign({}, this.queryParam,this.isorter);\n      param.pageNo = this.pagination.current;\n      param.pageSize = this.pagination.pageSize;\n      return filterObj(param);\n    },\n    initCgButtonList(btnList){\n      let linkArr = []\n      let buttonArr = []\n      if(btnList && btnList.length>0){\n        for(let i=0;i<btnList.length;i++){\n          let temp = btnList[i]\n          if(temp.buttonStyle=='button'){\n            buttonArr.push(temp)\n          }else if(temp.buttonStyle=='link'){\n            linkArr.push(temp)\n          }\n        }\n      }\n      this.cgButtonLinkList = [...linkArr]\n      this.cgButtonList=[...buttonArr]\n    },\n    initCgEnhanceJs(enhanceJs){\n      //console.log(\"--onlineList-js增强\",enhanceJs)\n      if(enhanceJs){\n        let Obj = eval (\"(\" + enhanceJs + \")\");\n        this.EnhanceJS = new Obj(getAction,postAction,deleteAction);\n        this.cgButtonJsHandler('created')\n      }else{\n        this.EnhanceJS = ''\n      }\n    },\n    initButtonSwitch(hideColumns){\n      if(hideColumns && hideColumns.length>0){\n        Object.keys(this.buttonSwitch).forEach(key=>{\n          if(hideColumns.indexOf(key)>=0){\n            this.buttonSwitch[key]=false\n          }\n        })\n\n      }\n    },\n    onClearSelected(){\n      this.selectedRowKeys = []\n      this.selectionRows = []\n    },\n    handleTableChange(pagination, filters, sorter){\n      //TODO 筛选\n      if (Object.keys(sorter).length>0){\n        this.isorter.column = sorter.field;\n        this.isorter.order = \"ascend\"==sorter.order?\"asc\":\"desc\"\n      }\n      this.pagination = pagination;\n      this.loadData();\n    },\n    /*-------数据格式化-begin----------*/\n    getDateNoTime(text){\n      if(!text){\n        return ''\n      }\n      let a = text;\n      if(a.length>10){\n        a = a.substring(0,10);\n      }\n      return a;\n    },\n    getImgView(text){\n      if(text && text.indexOf(\",\")>0){\n        text = text.substring(0,text.indexOf(\",\"))\n      }\n      return window._CONFIG['imgDomainURL']+\"/\"+text\n    },\n    uploadFile(text){\n      if(!text){\n        this.$message.warning(\"未知的文件\")\n        return;\n      }\n      if(text.indexOf(\",\")>0){\n        text = text.substring(0,text.indexOf(\",\"))\n      }\n      window.open(window._CONFIG['domianURL'] + \"/sys/common/download/\"+text);\n    },\n    /*-------数据格式化-end----------*/\n\n    /*-------功能按钮触发事件-begin----------*/\n    handleEdit(record){\n      this.cgButtonLinkHandler(record,\"beforeEdit\",\"js\")\n      this.$refs.modal.edit(this.formTemplate,record.id);\n    },\n    handleDetail(record){\n      this.$refs.modal.detail(this.formTemplate,record.id);\n    },\n    handleDeleteOne(record){\n      this.cgButtonLinkHandler(record,\"beforeDelete\",\"js\")\n      this.handleDelete(record.id)\n    },\n    handleDelete(id){\n      deleteAction(this.url.optPre+this.code+\"/\"+id).then((res)=>{\n        if(res.success){\n          this.$message.success(res.message)\n          this.loadData()\n        }else{\n          this.$message.warning(res.message)\n        }\n      })\n    },\n    handleAdd(){\n      this.cgButtonJsHandler('beforeAdd')\n      this.$refs.modal.add(this.formTemplate);\n    },\n    handleFormSuccess(){\n      this.loadData()\n    },\n    handleImportXls(){\n      this.$refs.importModal.show()\n    },\n    importOk(){\n      this.loadData(1)\n    },\n    getImportUrl(){\n      return '/online/cgform/api/importXls/'+this.code\n    },\n    handleExportXls(){\n      let param = this.queryParam;\n      if(this.selectedRowKeys && this.selectedRowKeys.length>0){\n        param['selections'] = this.selectedRowKeys.join(\",\")\n      }\n      console.log(\"导出参数\",param)\n      let paramsStr = JSON.stringify(filterObj(param));\n      downFile(this.url.exportXls+this.code,{paramsStr:paramsStr}).then((data)=>{\n        if (!data) {\n          this.$message.warning(\"文件下载失败\")\n          return\n        }\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n          window.navigator.msSaveBlob(new Blob([data]), this.description+'.xls')\n        }else{\n          let url = window.URL.createObjectURL(new Blob([data]))\n          let link = document.createElement('a')\n          link.style.display = 'none'\n          link.href = url\n          link.setAttribute('download', this.description+'.xls')\n          document.body.appendChild(link)\n          link.click()\n          document.body.removeChild(link); //下载完成移除元素\n          window.URL.revokeObjectURL(url); //释放掉blob对象\n        }\n      })\n    },\n    handleDelBatch(){\n      if(this.selectedRowKeys.length<=0){\n        this.$message.warning('请选择一条记录！');\n        return false;\n      }else{\n        let ids = \"\";\n        let that = this;\n        that.selectedRowKeys.forEach(function(val) {\n          ids+=val+\",\";\n        });\n        that.$confirm({\n          title:\"确认删除\",\n          content:\"是否删除选中数据?\",\n          onOk: function(){\n            that.handleDelete(ids)\n            that.onClearSelected();\n          }\n        });\n      }\n    },\n    /*-------功能按钮触发事件-begin----------*/\n\n    /*-------JS增强-begin----------*/\n    cgButtonLinkHandler(record,buttonCode,optType){\n      if(optType==\"js\"){\n        if(this.EnhanceJS[buttonCode]){\n          this.EnhanceJS[buttonCode](this,record)\n        }\n      }else if(optType==\"action\"){\n        let params = {\n          formId:this.code,\n          buttonCode:buttonCode,\n          dataId:record.id\n        }\n        console.log(\"自定义按钮link请求后台参数：\",params)\n        postAction(this.url.buttonAction,params).then(res=>{\n          if(res.success){\n            this.loadData()\n            this.$message.success(\"处理完成!\")\n          }else{\n            this.$message.warning(\"处理失败!\")\n          }\n        })\n      }\n    },\n    cgButtonJsHandler(buttonCode){\n      if(this.EnhanceJS[buttonCode]){\n        this.EnhanceJS[buttonCode](this)\n      }\n    },\n    cgButtonActionHandler(buttonCode){\n      //处理自定义button的 需要配置该button自定义sql\n      if(!this.selectedRowKeys || this.selectedRowKeys.length==0){\n        this.$message.warning(\"请先选中一条记录\")\n        return false\n      }\n      if(this.selectedRowKeys.length>1){\n        this.$message.warning(\"请只选中一条记录\")\n        return false\n      }\n      let params = {\n        formId:this.code,\n        buttonCode:buttonCode,\n        dataId:this.selectedRowKeys[0]\n      }\n      console.log(\"自定义按钮请求后台参数：\",params)\n      postAction(this.url.buttonAction,params).then(res=>{\n        if(res.success){\n          this.loadData()\n          this.$message.success(\"处理完成!\")\n        }else{\n          this.$message.warning(\"处理失败!\")\n        }\n      })\n\n    },\n    /*-------JS增强-end----------*/\n\n  }\n}\n",{"version":3,"sources":["OnlCgformTreeList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","file":"OnlCgformTreeList.vue","sourceRoot":"src/views/modules/online/cgform/auto","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\" style=\"height: 100%\">\r\n    <!-- 操作按钮区域 -->\r\n    <div class=\"table-operator\">\r\n      <a-button v-if=\"buttonSwitch.add\" @click=\"handleAdd\" type=\"primary\" icon=\"plus\">新增</a-button>\r\n      <a-button v-if=\"buttonSwitch.import\" @click=\"handleImportXls\" type=\"primary\" icon=\"upload\" style=\"margin-left:8px\">导入</a-button>\r\n      <a-button v-if=\"buttonSwitch.export\" @click=\"handleExportXls\" type=\"primary\" icon=\"download\" style=\"margin-left:8px\">导出</a-button>\r\n      <template v-if=\"cgButtonList && cgButtonList.length>0\" v-for=\"(item,index) in cgButtonList\">\r\n        <a-button\r\n          v-if=\" item.optType=='js' \"\r\n          :key=\" 'cgbtn'+index \"\r\n          @click=\"cgButtonJsHandler(item.buttonCode)\"\r\n          type=\"primary\"\r\n          :icon=\"item.buttonIcon\"\r\n          style=\"margin-left:8px\">\r\n          {{ item.buttonName }}\r\n        </a-button>\r\n        <a-button\r\n          v-else-if=\" item.optType=='action' \"\r\n          :key=\" 'cgbtn'+index \"\r\n          @click=\"cgButtonActionHandler(item.buttonCode)\"\r\n          type=\"primary\"\r\n          :icon=\"item.buttonIcon\"\r\n          style=\"margin-left:8px\">\r\n          {{ item.buttonName }}\r\n        </a-button>\r\n      </template>\r\n\r\n      <a-button\r\n        v-if=\"buttonSwitch.batch_delete\"\r\n        @click=\"handleDelBatch\"\r\n        style=\"margin-left:8px\"\r\n        v-show=\"selectedRowKeys.length > 0\"\r\n        ghost\r\n        type=\"primary\"\r\n        icon=\"delete\">批量删除</a-button>\r\n    </div>\r\n\r\n    <div>\r\n      <div class=\"ant-alert ant-alert-info\" style=\"margin-bottom: 16px;\">\r\n        <i class=\"anticon anticon-info-circle ant-alert-icon\"></i>\r\n        已选择&nbsp;<a style=\"font-weight: 600\">{{ selectedRowKeys.length }}</a>项&nbsp;&nbsp;\r\n        <a style=\"margin-left: 24px\" @click=\"onClearSelected\">清空</a>\r\n      </div>\r\n\r\n      <a-table\r\n        ref=\"cgformTreeList\"\r\n        size=\"middle\"\r\n        rowKey=\"id\"\r\n        :columns=\"columns\"\r\n        :dataSource=\"dataSource\"\r\n        :pagination=\"pagination\"\r\n        :loading=\"loading\"\r\n        @change=\"handleTableChange\"\r\n        v-bind=\"tableProps\"\r\n        @expand=\"handleExpand\"\r\n        style=\"min-height: 300px\"\r\n        :expandedRowKeys=\"expandedRowKeys\">\r\n\r\n        <template slot=\"dateSlot\" slot-scope=\"text\">\r\n          <span>{{ getDateNoTime(text) }}</span>\r\n        </template>\r\n\r\n        <template slot=\"htmlSlot\" slot-scope=\"text\">\r\n          <div v-html=\"text\"></div>\r\n        </template>\r\n\r\n        <template slot=\"imgSlot\" slot-scope=\"text\">\r\n          <span v-if=\"!text\" style=\"font-size: 12px;font-style: italic;\">无此图片</span>\r\n          <img v-else :src=\"getImgView(text)\" height=\"25px\" alt=\"图片不存在\" style=\"max-width:80px;font-size: 12px;font-style: italic;\"/>\r\n        </template>\r\n\r\n        <template slot=\"fileSlot\" slot-scope=\"text\">\r\n          <span v-if=\"!text\" style=\"font-size: 12px;font-style: italic;\">无此文件</span>\r\n          <a-button\r\n            v-else\r\n            :ghost=\"true\"\r\n            type=\"primary\"\r\n            icon=\"download\"\r\n            size=\"small\"\r\n            @click=\"uploadFile(text)\">\r\n            下载\r\n          </a-button>\r\n        </template>\r\n\r\n        <span slot=\"action\" slot-scope=\"text, record\">\r\n          <template v-if=\"buttonSwitch.update\">\r\n            <a @click=\"handleEdit(record)\">编辑</a>\r\n            <a-divider type=\"vertical\"/>\r\n          </template>\r\n          <a-dropdown>\r\n            <a class=\"ant-dropdown-link\">\r\n              更多 <a-icon type=\"down\" />\r\n            </a>\r\n            <a-menu slot=\"overlay\">\r\n              <a-menu-item >\r\n                <a @click=\"handleDetail(record)\">详情</a>\r\n              </a-menu-item>\r\n              <a-menu-item v-if=\"buttonSwitch.delete\">\r\n                <a-popconfirm title=\"确定删除吗?\" @confirm=\"() => handleDeleteOne(record)\">\r\n                  <a>删除</a>\r\n                </a-popconfirm>\r\n              </a-menu-item>\r\n              <!-- 自定义按钮 -->\r\n              <template v-if=\"cgButtonLinkList && cgButtonLinkList.length>0\" v-for=\"(btnItem,btnIndex) in cgButtonLinkList\">\r\n                <a-menu-item :key=\" 'cgbtnLink'+btnIndex \">\r\n                  <a href=\"javascript:void(0);\" @click=\"cgButtonLinkHandler(record,btnItem.buttonCode,btnItem.optType)\">\r\n                    <a-icon v-if=\"btnItem.buttonIcon\" :type=\"btnItem.buttonIcon\" />\r\n                    {{ btnItem.buttonName }}\r\n                  </a>\r\n                </a-menu-item>\r\n              </template>\r\n\r\n            </a-menu>\r\n          </a-dropdown>\r\n        </span>\r\n\r\n      </a-table>\r\n\r\n      <onl-cgform-auto-modal @success=\"handleFormSuccess\" ref=\"modal\" :code=\"code\"></onl-cgform-auto-modal>\r\n\r\n      <j-import-modal ref=\"importModal\" :url=\"getImportUrl()\" @ok=\"importOk\"></j-import-modal>\r\n    </div>\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\n\r\n  import { getAction,postAction,deleteAction,downFile } from '@/api/manage'\r\n  import { filterMultiDictText } from '@/components/dict/JDictSelectUtil'\r\n  import { filterObj } from '@/utils/util';\r\n  import JImportModal from '@/components/jeecg/JImportModal'\r\n\r\n  export default {\r\n    name: 'OnlCgformTreeList',\r\n    components: {\r\n      JImportModal\r\n    },\r\n    data() {\r\n      return {\r\n        code: '87b55a515d3441b6b98e48e5b35474a6',\r\n        description: '在线报表功能测试页面',\r\n        currentTableName:\"\",\r\n        pidField:\"\",\r\n        hasChildrenField:\"\",\r\n        textField:'',\r\n        loading: false,\r\n        // 表头\r\n        columns: [],\r\n        //数据集\r\n        dataSource: [],\r\n        // 选择器\r\n        selectedRowKeys: [],\r\n        selectionRows: [],\r\n        // 分页参数\r\n        pagination: {\r\n          current: 1,\r\n          pageSize: 10,\r\n          pageSizeOptions: ['10', '20', '30'],\r\n          showTotal: (total, range) => {\r\n            return range[0] + '-' + range[1] + ' 共' + total + '条'\r\n          },\r\n          showQuickJumper: true,\r\n          showSizeChanger: true,\r\n          total: 0\r\n        },\r\n\r\n        url: {\r\n          getColumns: '/online/cgform/api/getColumns/',\r\n          getTreeData: '/online/cgform/api/getTreeData/',\r\n          optPre:\"/online/cgform/api/form/\",\r\n          exportXls:'/online/cgform/api/exportXls/',\r\n          buttonAction:'/online/cgform/api/doButton',\r\n          startProcess: \"/process/extActProcess/startMutilProcess\",\r\n        },\r\n        isorter:{\r\n          column: 'create_time',\r\n          order: 'desc',\r\n        },\r\n        dictOptions:{\r\n\r\n        },\r\n\r\n        queryParam:{\r\n\r\n        },\r\n        actionColumn:{\r\n          title: '操作',\r\n          dataIndex: 'action',\r\n          scopedSlots: { customRender: 'action' },\r\n          fixed:\"right\",\r\n          align:\"center\",\r\n          width:150\r\n        },\r\n        formTemplate:\"99\",\r\n\r\n        /*自定义按钮-link*/\r\n        cgButtonLinkList:[],\r\n        /*自定义按钮-button*/\r\n        cgButtonList:[],\r\n        /*JS增强*/\r\n        EnhanceJS:'',\r\n        /*操作按钮权限*/\r\n        buttonSwitch:{\r\n          add:true,\r\n          update:true,\r\n          delete:true,\r\n          batch_delete:true,\r\n          import:true,\r\n          export:true\r\n        },\r\n        expandedRowKeys:[]\r\n\r\n      }\r\n    },\r\n    created() {\r\n      this.initAutoListConfig().then(()=>{\r\n        this.loadData(1)\r\n      }).catch(msg=>{\r\n        console.log(msg)\r\n      })\r\n    },\r\n    mounted(){\r\n      //this.cgButtonJsHandler('mounted')\r\n    },\r\n    watch: {\r\n      '$route'() {\r\n        // 刷新参数放到这里去触发，就可以刷新相同界面了\r\n        this.initAutoListConfig().then(()=>{\r\n          this.loadData(1)\r\n        }).catch(msg=>{\r\n          console.log(msg)\r\n        })\r\n      }\r\n    },\r\n    computed: {\r\n      tableProps() {\r\n        let _this = this\r\n        return {\r\n          // 列表项是否可选择\r\n          // https://vue.ant.design/components/table-cn/#rowSelection\r\n          rowSelection: {\r\n            selectedRowKeys: _this.selectedRowKeys,\r\n            onChange: (selectedRowKeys) => _this.selectedRowKeys = selectedRowKeys\r\n          }\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      resetData(){\r\n        this.description=''\r\n        this.currentTableName=''\r\n        this.pidField=''\r\n        this.hasChildrenField=''\r\n        this.textField=''\r\n        this.columns = []\r\n        this.dataSource = []\r\n        this.selectedRowKeys=[]\r\n        this.selectionRows=[]\r\n      },\r\n      initAutoListConfig() {\r\n        return new Promise((resolve, reject) => {\r\n          if (!this.$route.params.code) {\r\n            reject(\"列表加载需要参数CODE为空!\")\r\n          } else {\r\n            this.resetData()\r\n            this.loading = true\r\n            this.code = this.$route.params.code\r\n            getAction(`${this.url.getColumns}${this.code}`)\r\n              .then(res => {\r\n                console.log(\"--onlineList-加载动态列>>\", res);\r\n                if(res.success){\r\n                  this.configInfohandler(res)\r\n                  resolve();\r\n                }else{\r\n                  reject(\"onlineList-加载表配置信息失败\")\r\n                }\r\n                this.loading = false\r\n              })\r\n              .catch(err => {\r\n                reject(err)\r\n              })\r\n          }\r\n        })\r\n      },\r\n      configInfohandler(res){\r\n        this.dictOptions = res.result.dictOptions\r\n        this.formTemplate = res.result.formTemplate\r\n        this.description = res.result.description\r\n        this.currentTableName = res.result.currentTableName\r\n        this.pidField = res.result.pidField\r\n        this.hasChildrenField = res.result.hasChildrenField\r\n        this.textField = res.result.textField\r\n        //自定义按钮\r\n        this.initCgButtonList(res.result.cgButtonList)\r\n        //JS增强\r\n        this.initCgEnhanceJs(res.result.enhanceJs)\r\n        //操作按钮权限\r\n        this.initButtonSwitch(res.result.hideColumns)\r\n        let currColumns = res.result.columns\r\n        let textFieldIndex = -1\r\n        for(let a=0;a<currColumns.length;a++){\r\n          currColumns[a].align = 'left'\r\n          if(this.textField==currColumns[a].dataIndex){\r\n            textFieldIndex = a\r\n          }\r\n          if(currColumns[a].customRender){\r\n            let dictCode = currColumns[a].customRender;\r\n            currColumns[a].customRender=(text)=>{\r\n              return filterMultiDictText(this.dictOptions[dictCode], text);\r\n            }\r\n          }\r\n        }\r\n        if(textFieldIndex!=-1){\r\n          let textFieldColumn = currColumns.splice(textFieldIndex,1)\r\n          currColumns.unshift(textFieldColumn[0])\r\n        }\r\n        currColumns.push(this.actionColumn);\r\n        this.columns = [...currColumns]\r\n      },\r\n      //加载根节点\r\n      loadData(arg){\r\n        if(arg==1){\r\n          this.pagination.current=1\r\n        }\r\n        this.loading = true\r\n        this.expandedRowKeys=[]\r\n        let params = this.getQueryParams();//查询条件\r\n        params[this.pidField]='0'\r\n        console.log(\"--onlineList-查询条件-->\",params)\r\n        getAction(`${this.url.getTreeData}${this.code}`,params).then((res)=>{\r\n          console.log(\"--onlineList-列表数据\",res)\r\n          if(res.success){\r\n            let result = res.result;\r\n            if(Number(result.total)>0){\r\n              this.pagination.total = Number(result.total)\r\n              let dataSource = res.result.records.map(item => {\r\n                // 判断是否标记了带有子级\r\n                if (item[this.hasChildrenField] === true || item[this.hasChildrenField]=='1') {\r\n                  let loadChild = { id: `${item.id}_loadChild`, name: 'loading...', isLoading: true }\r\n                  item.children = [loadChild]\r\n                }\r\n                return item\r\n              })\r\n              this.dataSource = dataSource\r\n            }else{\r\n              this.pagination.total=0;\r\n              this.dataSource=[]\r\n            }\r\n          }else{\r\n            this.$message.warning(res.message)\r\n          }\r\n          this.loading = false\r\n        })\r\n      },\r\n      //加载叶子节点\r\n      handleExpand(expanded, record) {\r\n        // 判断是否是展开状态\r\n        if (expanded) {\r\n          this.expandedRowKeys.push(record.id)\r\n          if (record.children.length>0 && record.children[0].isLoading === true) {\r\n            let params = this.getQueryParams();//查询条件\r\n            params[this.pidField] = record.id\r\n            getAction(`${this.url.getTreeData}${this.code}`,params).then((res)=>{\r\n              if(res.success){\r\n                if(Number(res.result.total)>0){\r\n                  let dataSource = res.result.records.map(item => {\r\n                    // 判断是否标记了带有子级\r\n                    if (item[this.hasChildrenField] === true || item[this.hasChildrenField]=='1') {\r\n                      let loadChild = { id: `${item.id}_loadChild`, name: 'loading...', isLoading: true }\r\n                      item.children = [loadChild]\r\n                    }\r\n                    return item\r\n                  })\r\n                  record.children = dataSource\r\n                }else{\r\n                  record.children=''\r\n                  record.hasChildrenField='0'\r\n                }\r\n              }else{\r\n                this.$message.warning(res.message)\r\n              }\r\n            })\r\n          }\r\n        }else{\r\n          let keyIndex = this.expandedRowKeys.indexOf(record.id)\r\n          if(keyIndex>=0){\r\n            this.expandedRowKeys.splice(keyIndex, 1);\r\n          }\r\n        }\r\n      },\r\n      getQueryParams() {\r\n        let param = Object.assign({}, this.queryParam,this.isorter);\r\n        param.pageNo = this.pagination.current;\r\n        param.pageSize = this.pagination.pageSize;\r\n        return filterObj(param);\r\n      },\r\n      initCgButtonList(btnList){\r\n        let linkArr = []\r\n        let buttonArr = []\r\n        if(btnList && btnList.length>0){\r\n          for(let i=0;i<btnList.length;i++){\r\n            let temp = btnList[i]\r\n            if(temp.buttonStyle=='button'){\r\n              buttonArr.push(temp)\r\n            }else if(temp.buttonStyle=='link'){\r\n              linkArr.push(temp)\r\n            }\r\n          }\r\n        }\r\n        this.cgButtonLinkList = [...linkArr]\r\n        this.cgButtonList=[...buttonArr]\r\n      },\r\n      initCgEnhanceJs(enhanceJs){\r\n        //console.log(\"--onlineList-js增强\",enhanceJs)\r\n        if(enhanceJs){\r\n          let Obj = eval (\"(\" + enhanceJs + \")\");\r\n          this.EnhanceJS = new Obj(getAction,postAction,deleteAction);\r\n          this.cgButtonJsHandler('created')\r\n        }else{\r\n          this.EnhanceJS = ''\r\n        }\r\n      },\r\n      initButtonSwitch(hideColumns){\r\n        if(hideColumns && hideColumns.length>0){\r\n          Object.keys(this.buttonSwitch).forEach(key=>{\r\n            if(hideColumns.indexOf(key)>=0){\r\n              this.buttonSwitch[key]=false\r\n            }\r\n          })\r\n\r\n        }\r\n      },\r\n      onClearSelected(){\r\n        this.selectedRowKeys = []\r\n        this.selectionRows = []\r\n      },\r\n      handleTableChange(pagination, filters, sorter){\r\n        //TODO 筛选\r\n        if (Object.keys(sorter).length>0){\r\n          this.isorter.column = sorter.field;\r\n          this.isorter.order = \"ascend\"==sorter.order?\"asc\":\"desc\"\r\n        }\r\n        this.pagination = pagination;\r\n        this.loadData();\r\n      },\r\n      /*-------数据格式化-begin----------*/\r\n      getDateNoTime(text){\r\n        if(!text){\r\n          return ''\r\n        }\r\n        let a = text;\r\n        if(a.length>10){\r\n          a = a.substring(0,10);\r\n        }\r\n        return a;\r\n      },\r\n      getImgView(text){\r\n        if(text && text.indexOf(\",\")>0){\r\n          text = text.substring(0,text.indexOf(\",\"))\r\n        }\r\n        return window._CONFIG['imgDomainURL']+\"/\"+text\r\n      },\r\n      uploadFile(text){\r\n        if(!text){\r\n          this.$message.warning(\"未知的文件\")\r\n          return;\r\n        }\r\n        if(text.indexOf(\",\")>0){\r\n          text = text.substring(0,text.indexOf(\",\"))\r\n        }\r\n        window.open(window._CONFIG['domianURL'] + \"/sys/common/download/\"+text);\r\n      },\r\n      /*-------数据格式化-end----------*/\r\n\r\n      /*-------功能按钮触发事件-begin----------*/\r\n      handleEdit(record){\r\n        this.cgButtonLinkHandler(record,\"beforeEdit\",\"js\")\r\n        this.$refs.modal.edit(this.formTemplate,record.id);\r\n      },\r\n      handleDetail(record){\r\n        this.$refs.modal.detail(this.formTemplate,record.id);\r\n      },\r\n      handleDeleteOne(record){\r\n        this.cgButtonLinkHandler(record,\"beforeDelete\",\"js\")\r\n        this.handleDelete(record.id)\r\n      },\r\n      handleDelete(id){\r\n        deleteAction(this.url.optPre+this.code+\"/\"+id).then((res)=>{\r\n          if(res.success){\r\n            this.$message.success(res.message)\r\n            this.loadData()\r\n          }else{\r\n            this.$message.warning(res.message)\r\n          }\r\n        })\r\n      },\r\n      handleAdd(){\r\n        this.cgButtonJsHandler('beforeAdd')\r\n        this.$refs.modal.add(this.formTemplate);\r\n      },\r\n      handleFormSuccess(){\r\n        this.loadData()\r\n      },\r\n      handleImportXls(){\r\n        this.$refs.importModal.show()\r\n      },\r\n      importOk(){\r\n        this.loadData(1)\r\n      },\r\n      getImportUrl(){\r\n        return '/online/cgform/api/importXls/'+this.code\r\n      },\r\n      handleExportXls(){\r\n        let param = this.queryParam;\r\n        if(this.selectedRowKeys && this.selectedRowKeys.length>0){\r\n          param['selections'] = this.selectedRowKeys.join(\",\")\r\n        }\r\n        console.log(\"导出参数\",param)\r\n        let paramsStr = JSON.stringify(filterObj(param));\r\n        downFile(this.url.exportXls+this.code,{paramsStr:paramsStr}).then((data)=>{\r\n          if (!data) {\r\n            this.$message.warning(\"文件下载失败\")\r\n            return\r\n          }\r\n          if (typeof window.navigator.msSaveBlob !== 'undefined') {\r\n            window.navigator.msSaveBlob(new Blob([data]), this.description+'.xls')\r\n          }else{\r\n            let url = window.URL.createObjectURL(new Blob([data]))\r\n            let link = document.createElement('a')\r\n            link.style.display = 'none'\r\n            link.href = url\r\n            link.setAttribute('download', this.description+'.xls')\r\n            document.body.appendChild(link)\r\n            link.click()\r\n            document.body.removeChild(link); //下载完成移除元素\r\n            window.URL.revokeObjectURL(url); //释放掉blob对象\r\n          }\r\n        })\r\n      },\r\n      handleDelBatch(){\r\n        if(this.selectedRowKeys.length<=0){\r\n          this.$message.warning('请选择一条记录！');\r\n          return false;\r\n        }else{\r\n          let ids = \"\";\r\n          let that = this;\r\n          that.selectedRowKeys.forEach(function(val) {\r\n            ids+=val+\",\";\r\n          });\r\n          that.$confirm({\r\n            title:\"确认删除\",\r\n            content:\"是否删除选中数据?\",\r\n            onOk: function(){\r\n              that.handleDelete(ids)\r\n              that.onClearSelected();\r\n            }\r\n          });\r\n        }\r\n      },\r\n      /*-------功能按钮触发事件-begin----------*/\r\n\r\n      /*-------JS增强-begin----------*/\r\n      cgButtonLinkHandler(record,buttonCode,optType){\r\n        if(optType==\"js\"){\r\n          if(this.EnhanceJS[buttonCode]){\r\n            this.EnhanceJS[buttonCode](this,record)\r\n          }\r\n        }else if(optType==\"action\"){\r\n          let params = {\r\n            formId:this.code,\r\n            buttonCode:buttonCode,\r\n            dataId:record.id\r\n          }\r\n          console.log(\"自定义按钮link请求后台参数：\",params)\r\n          postAction(this.url.buttonAction,params).then(res=>{\r\n            if(res.success){\r\n              this.loadData()\r\n              this.$message.success(\"处理完成!\")\r\n            }else{\r\n              this.$message.warning(\"处理失败!\")\r\n            }\r\n          })\r\n        }\r\n      },\r\n      cgButtonJsHandler(buttonCode){\r\n        if(this.EnhanceJS[buttonCode]){\r\n          this.EnhanceJS[buttonCode](this)\r\n        }\r\n      },\r\n      cgButtonActionHandler(buttonCode){\r\n        //处理自定义button的 需要配置该button自定义sql\r\n        if(!this.selectedRowKeys || this.selectedRowKeys.length==0){\r\n          this.$message.warning(\"请先选中一条记录\")\r\n          return false\r\n        }\r\n        if(this.selectedRowKeys.length>1){\r\n          this.$message.warning(\"请只选中一条记录\")\r\n          return false\r\n        }\r\n        let params = {\r\n          formId:this.code,\r\n          buttonCode:buttonCode,\r\n          dataId:this.selectedRowKeys[0]\r\n        }\r\n        console.log(\"自定义按钮请求后台参数：\",params)\r\n        postAction(this.url.buttonAction,params).then(res=>{\r\n          if(res.success){\r\n            this.loadData()\r\n            this.$message.success(\"处理完成!\")\r\n          }else{\r\n            this.$message.warning(\"处理失败!\")\r\n          }\r\n        })\r\n\r\n      },\r\n      /*-------JS增强-end----------*/\r\n\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n  .ant-card-body .table-operator{\r\n    margin-bottom: 18px;\r\n  }\r\n  .ant-table-tbody .ant-table-row td{\r\n    padding-top:15px;\r\n    padding-bottom:15px;\r\n  }\r\n  .anty-row-operator button{margin: 0 5px}\r\n  .ant-btn-danger{background-color: #ffffff}\r\n\r\n  .anty-img-wrap{height:25px;position: relative;}\r\n  .anty-img-wrap > img{max-height:100%;}\r\n  .ant-modal-cust-warp{height: 100%}\r\n  .ant-modal-cust-warp .ant-modal-body{height:calc(100% - 110px) !important;overflow-y: auto}\r\n  .ant-modal-cust-warp .ant-modal-content{height:90% !important;overflow-y: hidden}\r\n</style>"]}]}