{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\buttons\\btn1.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\buttons\\btn1.vue","mtime":1572252280755},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1570779245522},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nimport {httpAction} from '@/api/manage'\nimport Vue from 'vue'\nimport axios from 'axios'\nimport {ACCESS_TOKEN} from \"../../../store/mutation-types\";\nimport {JeecgListMixin} from '@/mixins/JeecgListMixin'\n\n\nexport default {\n  name: \"vtn1\",\n  mixins: [JeecgListMixin],\n  components: {},\n  data() {\n    return {\n      isRadio: false,\n      dataSource: [],\n      columns: [\n        {\n          title: '用户姓名',\n          align: \"center\",\n          dataIndex: 'username'\n        }, {\n          title: '所在部门',\n          align: \"center\",\n          dataIndex: 'departs'\n        }\n      ]\n      ,\n      options: [\"同意\", \"不同意\"],\n      comment: '',\n      isNextTask: false,\n      isCommentDo: false,\n      isGongWen: false,\n      isDownloadAll: false,\n      isBack: false,\n      nextTasks: [],\n      nextUsers: [],\n      confirmLoading: false,\n      taskId: '',\n      comId: 'nextTask',\n      title: \"操作\",\n      visible: false,\n      url: {\n        list:'111',\n        nextFormUrl: window._CONFIG['domianURL'] + '/wf/task/nextForm',\n        doTaskUsers: window._CONFIG['domianURL'] + '/sys/user/getMsgByRoleName',\n        backUrl: window._CONFIG['domianURL'] + '/wf/task/backDone'\n      },\n    }\n  },\n  created() {\n  },\n  methods: {\n    showTask(record) {\n\n      this.selectedRowKeys = []\n\n      let that = this\n\n      this.taskId = record.id\n      axios.get(this.url.nextFormUrl, {\n        params: {\n          taskId: this.taskId\n        },\n        headers: {\n          'X-Access-Token': Vue.ls.get(ACCESS_TOKEN)\n        }\n      }).then(function (response) {\n        if (response.data.success) {\n          that.nextTasks = response.data.result\n        } else {\n          that.$message.error(response.data.message)\n        }\n      })\n      this.visible = true\n    },\n    doTaskUsers(v) {\n\n      this.selectedRowKeys = []\n\n      if (v.isMultiInstance) {\n        this.isRadio = false\n      } else {\n        this.isRadio = true\n      }\n\n      var roleName = ''\n      if ((v.candidates).indexOf(\"'\") >= 0) {\n        roleName = (v.candidates).substring(1, (v.candidates).length - 1)\n      }\n\n      let that = this\n      axios.get(this.url.doTaskUsers, {\n        params: {\n          roleName: roleName\n        },\n        headers: {\n          'X-Access-Token': Vue.ls.get(ACCESS_TOKEN)\n        }\n      }).then(function (response) {\n        if (response.data.success) {\n          that.nextUsers = response.data.result\n          that.dataSource = response.data.result\n        } else {\n          that.$message.error(response.data.message)\n        }\n      })\n\n      this.showAndClose('isNextTask')\n    },\n    commentDo() {\n      //去后台查 快捷意见\n\n\n      this.showAndClose('isCommentDo')\n    },\n    gongWen() {\n    },\n    save() {\n      this.close()\n    },\n    back() {\n      //查询可退回节点\n\n    },\n    downloadAll() {\n    },\n    close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleCancel() {\n      this.close()\n    },\n    showAndClose(name) {\n      var list = ['isNextTask', 'isCommentDo', 'isGongWen', 'isDownloadAll', 'isBack']\n      for (var i = 0; i < list.length; i++) {\n        var v = list[i]\n        if (v == name) {\n          this[name] = true\n        } else {\n          this[v] = false\n        }\n      }\n    },\n    optionSelect(option) {\n      this.comment += option\n      console.log(option)\n    }, clearOptions() {\n      this.comment = ''\n    },\n    fineshedByHand(){\n\n    }\n  }\n}\n",{"version":3,"sources":["btn1.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"btn1.vue","sourceRoot":"src/views/buttons","sourcesContent":["<template>\r\n\r\n<a-button>aaaa</a-button>\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n  import {httpAction} from '@/api/manage'\r\n  import Vue from 'vue'\r\n  import axios from 'axios'\r\n  import {ACCESS_TOKEN} from \"../../../store/mutation-types\";\r\n  import {JeecgListMixin} from '@/mixins/JeecgListMixin'\r\n\r\n\r\n  export default {\r\n    name: \"vtn1\",\r\n    mixins: [JeecgListMixin],\r\n    components: {},\r\n    data() {\r\n      return {\r\n        isRadio: false,\r\n        dataSource: [],\r\n        columns: [\r\n          {\r\n            title: '用户姓名',\r\n            align: \"center\",\r\n            dataIndex: 'username'\r\n          }, {\r\n            title: '所在部门',\r\n            align: \"center\",\r\n            dataIndex: 'departs'\r\n          }\r\n        ]\r\n        ,\r\n        options: [\"同意\", \"不同意\"],\r\n        comment: '',\r\n        isNextTask: false,\r\n        isCommentDo: false,\r\n        isGongWen: false,\r\n        isDownloadAll: false,\r\n        isBack: false,\r\n        nextTasks: [],\r\n        nextUsers: [],\r\n        confirmLoading: false,\r\n        taskId: '',\r\n        comId: 'nextTask',\r\n        title: \"操作\",\r\n        visible: false,\r\n        url: {\r\n          list:'111',\r\n          nextFormUrl: window._CONFIG['domianURL'] + '/wf/task/nextForm',\r\n          doTaskUsers: window._CONFIG['domianURL'] + '/sys/user/getMsgByRoleName',\r\n          backUrl: window._CONFIG['domianURL'] + '/wf/task/backDone'\r\n        },\r\n      }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n      showTask(record) {\r\n\r\n        this.selectedRowKeys = []\r\n\r\n        let that = this\r\n\r\n        this.taskId = record.id\r\n        axios.get(this.url.nextFormUrl, {\r\n          params: {\r\n            taskId: this.taskId\r\n          },\r\n          headers: {\r\n            'X-Access-Token': Vue.ls.get(ACCESS_TOKEN)\r\n          }\r\n        }).then(function (response) {\r\n          if (response.data.success) {\r\n            that.nextTasks = response.data.result\r\n          } else {\r\n            that.$message.error(response.data.message)\r\n          }\r\n        })\r\n        this.visible = true\r\n      },\r\n      doTaskUsers(v) {\r\n\r\n        this.selectedRowKeys = []\r\n\r\n        if (v.isMultiInstance) {\r\n          this.isRadio = false\r\n        } else {\r\n          this.isRadio = true\r\n        }\r\n\r\n        var roleName = ''\r\n        if ((v.candidates).indexOf(\"'\") >= 0) {\r\n          roleName = (v.candidates).substring(1, (v.candidates).length - 1)\r\n        }\r\n\r\n        let that = this\r\n        axios.get(this.url.doTaskUsers, {\r\n          params: {\r\n            roleName: roleName\r\n          },\r\n          headers: {\r\n            'X-Access-Token': Vue.ls.get(ACCESS_TOKEN)\r\n          }\r\n        }).then(function (response) {\r\n          if (response.data.success) {\r\n            that.nextUsers = response.data.result\r\n            that.dataSource = response.data.result\r\n          } else {\r\n            that.$message.error(response.data.message)\r\n          }\r\n        })\r\n\r\n        this.showAndClose('isNextTask')\r\n      },\r\n      commentDo() {\r\n        //去后台查 快捷意见\r\n\r\n\r\n        this.showAndClose('isCommentDo')\r\n      },\r\n      gongWen() {\r\n      },\r\n      save() {\r\n        this.close()\r\n      },\r\n      back() {\r\n        //查询可退回节点\r\n\r\n      },\r\n      downloadAll() {\r\n      },\r\n      close() {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n      showAndClose(name) {\r\n        var list = ['isNextTask', 'isCommentDo', 'isGongWen', 'isDownloadAll', 'isBack']\r\n        for (var i = 0; i < list.length; i++) {\r\n          var v = list[i]\r\n          if (v == name) {\r\n            this[name] = true\r\n          } else {\r\n            this[v] = false\r\n          }\r\n        }\r\n      },\r\n      optionSelect(option) {\r\n        this.comment += option\r\n        console.log(option)\r\n      }, clearOptions() {\r\n        this.comment = ''\r\n      },\r\n      fineshedByHand(){\r\n\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .ant-menu:not(.ant-menu-horizontal) .ant-menu-item-selected {\r\n    /*background-color: white;*/\r\n  }\r\n\r\n</style>"]}]}