{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\buttons\\CatOpinionListModal.vue?vue&type=style&index=0&id=4fd70ceb&scoped=true&lang=less&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\buttons\\CatOpinionListModal.vue","mtime":1576655828026},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\css-loader\\index.js","mtime":1570780111199},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1570779225817},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\postcss-loader\\src\\index.js","mtime":1570780438513},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\less-loader\\dist\\cjs.js","mtime":1570780454546},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.title {\n  width: 100%;\n  height: 40px;\n  background: #2eabff;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  /*letter-spacing: 20px;*/\n  margin-top: 10px;\n\n  span {\n    margin-left: 20px;\n  }\n}\n\n",{"version":3,"sources":["CatOpinionListModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"CatOpinionListModal.vue","sourceRoot":"src/views/buttons","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"1000\"\r\n    :visible=\"visible\"\r\n    @ok=\"handleOk\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n    <div v-for=\"(item,index) in dataSource\">\r\n      <p class=\"title\"><span>{{item.name}}</span></p>\r\n      <a-table ref=\"table\"\r\n               size=\"middle\"\r\n               bordered\r\n               :columns=\"columns\"\r\n               :dataSource=\"item.oa\"\r\n               :pagination=\"false\"\r\n      >\r\n      </a-table>\r\n    </div>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import {httpAction} from '@/api/manage'\r\n  import {getAction} from '@/api/manage'\r\n\r\n  export default {\r\n    name: \"UpdatePaperTitle\",\r\n    data() {\r\n      return {\r\n        title: \"操作\",\r\n        visible: false,\r\n        model: {},\r\n        dataSource: [],\r\n        index: [],\r\n        length: [],\r\n        columns: [\r\n          {\r\n            title: '部门',\r\n            width: 100,\r\n            align: \"center\",\r\n            dataIndex: 'sdeptName',\r\n            customRender: (value, row, index) => {\r\n              index = row.iid\r\n              const obj = {\r\n                children: value,\r\n                attrs: {}\r\n              };\r\n              let merge = [];\r\n              for (let i = 0; i < this.index.length; i += this.length[i]) {\r\n                merge.push(this.index[i]);\r\n              }\r\n              for (let i = 0; i < merge.length; i++) {\r\n                if (index === merge[i]) {\r\n                  obj.attrs.rowSpan = this.length[merge[i]];\r\n                }\r\n\r\n                for (let j = 1; j < this.length[merge[i]]; j++) {\r\n                  if (index === this.index[merge[i] + this.length[merge[i]] - j]) {\r\n                    obj.attrs.rowSpan = 0;\r\n                  }\r\n                }\r\n              }\r\n              return obj\r\n            }\r\n          },\r\n          {\r\n            title: '姓名',\r\n            align: \"center\",\r\n            width: 130,\r\n            dataIndex: 'sname'\r\n          },\r\n          {\r\n            title: '意见',\r\n            align: \"center\",\r\n            width: 150,\r\n            dataIndex: 'sopinion',\r\n          }\r\n        ],\r\n        labelCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 5},\r\n        },\r\n        wrapperCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 16},\r\n        },\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        validatorRules: {},\r\n        url: {\r\n          opinion: \"/oaBus/oaBusdataOpinion/getOpinionList\"\r\n        },\r\n      }\r\n    },\r\n    created() {\r\n\r\n    },\r\n    methods: {\r\n      show(record) {\r\n        console.log(record)\r\n        this.visible = true;\r\n        this.getOpinionList(record);\r\n      },\r\n      getOpinionList(record) {\r\n        let url = this.url.opinion;\r\n        getAction(url, {table:record.opinionTable, iBusdataId:record.i_id, sTaskdefKey:record.sTaskdefKey}).then((res) => {\r\n          this.dataSource = res.result;\r\n\r\n          var map = {}\r\n          let collation = this.dataSource\r\n          //type\r\n          for (let i in collation) {\r\n            let optionType = collation[i]\r\n            //type-data\r\n            for (let oaIndex in optionType.oa) {\r\n              let key = optionType.name + '-' + optionType.oa[oaIndex].sdeptName\r\n              if (map[key] == undefined) {\r\n                map[key] = []\r\n                map[key].push(optionType.oa[oaIndex])\r\n              } else {\r\n                map[key].push(optionType.oa[oaIndex])\r\n              }\r\n            }\r\n          }\r\n          // console.log('-------->>>>',JSON.stringify(map))\r\n          let opinionData = JSON.parse(JSON.stringify(map));\r\n          for (let i = 0; i < this.dataSource.length; i++) {\r\n            for (let j = 0; j < this.dataSource[i].oa.length; j++) {\r\n              this.index.push(this.dataSource[i].oa[j].iid);\r\n              this.length.push(opinionData[this.dataSource[i].oa[j].opinionName + '-' + this.dataSource[i].oa[j].sdeptName].length);\r\n            }\r\n\r\n          }\r\n        })\r\n      },\r\n      close() {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      },\r\n      handleOk() {\r\n        const that = this;\r\n        that.close();\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  .title {\r\n    width: 100%;\r\n    height: 40px;\r\n    background: #2eabff;\r\n    color: #ffffff;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    /*letter-spacing: 20px;*/\r\n    margin-top: 10px;\r\n\r\n    span {\r\n      margin-left: 20px;\r\n    }\r\n  }\r\n\r\n</style>"]}]}