{"remainingRequest":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\jeecg\\modules\\JEditableTable\\ThreeLinkage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\jeecg\\modules\\JEditableTable\\ThreeLinkage.vue","mtime":1568535244000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { FormTypes } from '@/utils/JEditableTableUtil'\nimport JEditableTable from '@/components/jeecg/JEditableTable'\n\nexport default {\n  name: 'ThreeLinkage',\n  components: { JEditableTable },\n  data() {\n    return {\n      columns: [\n        {\n          title: '省/直辖市/自治区',\n          key: 's1',\n          type: FormTypes.select,\n          width: '240px',\n          options: [],\n          placeholder: '请选择${title}'\n        },\n        {\n          title: '市',\n          key: 's2',\n          type: FormTypes.select,\n          width: '240px',\n          options: [],\n          placeholder: '请选择${title}'\n        },\n        {\n          title: '县/区',\n          key: 's3',\n          type: FormTypes.select,\n          width: '240px',\n          options: [],\n          placeholder: '请选择${title}'\n        }\n      ],\n      dataSource: [],\n\n      mockData: [\n        { label: '北京市', value: '110000', parent: null },\n        { label: '天津市', value: '120000', parent: null },\n        { label: '河北省', value: '130000', parent: null },\n        { label: '上海市', value: '310000', parent: null },\n\n        { label: '北京市', value: '110100', parent: '110000' },\n        { label: '天津市市', value: '120100', parent: '120000' },\n        { label: '石家庄市', value: '130100', parent: '130000' },\n        { label: '唐山市', value: '130200', parent: '130000' },\n        { label: '秦皇岛市', value: '130300', parent: '130000' },\n        { label: '上海市', value: '310100', parent: '310000' },\n\n        { label: '东城区', value: '110101', parent: '110100' },\n        { label: '西城区', value: '110102', parent: '110100' },\n        { label: '朝阳区', value: '110105', parent: '110100' },\n        { label: '和平区', value: '120101', parent: '120000' },\n        { label: '河东区', value: '120102', parent: '120000' },\n        { label: '河西区', value: '120103', parent: '120000' },\n        { label: '黄浦区', value: '310101', parent: '310100' },\n        { label: '徐汇区', value: '310104', parent: '310100' },\n        { label: '长宁区', value: '310105', parent: '310100' },\n        { label: '长安区', value: '130102', parent: '130100' },\n        { label: '桥西区', value: '130104', parent: '130100' },\n        { label: '新华区', value: '130105', parent: '130100' },\n        { label: '路南区', value: '130202', parent: '130200' },\n        { label: '路北区', value: '130203', parent: '130200' },\n        { label: '古冶区', value: '130204', parent: '130200' },\n        { label: '海港区', value: '130302', parent: '130300' },\n        { label: '山海关区', value: '130303', parent: '130300' },\n        { label: '北戴河区', value: '130304', parent: '130300' },\n      ]\n    }\n  },\n  mounted() {\n    // 初始化数据\n    this.columns[0].options = this.request(null)\n  },\n  methods: {\n\n    request(parentId) {\n      return this.mockData.filter(i => i.parent === parentId)\n    },\n\n    /** 当选项被改变时，联动其他组件 */\n    handleValueChange(event) {\n      const { type, row, column, value, target } = event\n\n      if (type === FormTypes.select) {\n\n        // 第一列\n        if (column.key === 's1') {\n          // 设置第二列的 options\n          this.columns[1].options = this.request(value)\n          // 清空后两列的数据\n          target.setValues([{\n            rowKey: row.id,\n            values: { s2: '', s3: '' }\n          }])\n          this.columns[2].options = []\n        } else\n        // 第二列\n        if (column.key === 's2') {\n          this.columns[2].options = this.request(value)\n          target.setValues([{\n            rowKey: row.id,\n            values: { s3: '' }\n          }])\n        }\n      }\n\n    }\n\n  }\n}\n",{"version":3,"sources":["ThreeLinkage.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAafile":"ThreeLinkage.vue","sourceRoot":"src/views/jeecg/modules/JEditableTable","sourcesContent":["<template>\r\n  <j-editable-table\r\n    :columns=\"columns\"\r\n    :dataSource=\"dataSource\"\r\n    :rowNumber=\"true\"\r\n    :actionButton=\"true\"\r\n    :rowSelection=\"true\"\r\n    :maxHeight=\"400\"\r\n    @valueChange=\"handleValueChange\"\r\n  />\r\n</template>\r\n\r\n<script>\r\n  import { FormTypes } from '@/utils/JEditableTableUtil'\r\n  import JEditableTable from '@/components/jeecg/JEditableTable'\r\n\r\n  export default {\r\n    name: 'ThreeLinkage',\r\n    components: { JEditableTable },\r\n    data() {\r\n      return {\r\n        columns: [\r\n          {\r\n            title: '省/直辖市/自治区',\r\n            key: 's1',\r\n            type: FormTypes.select,\r\n            width: '240px',\r\n            options: [],\r\n            placeholder: '请选择${title}'\r\n          },\r\n          {\r\n            title: '市',\r\n            key: 's2',\r\n            type: FormTypes.select,\r\n            width: '240px',\r\n            options: [],\r\n            placeholder: '请选择${title}'\r\n          },\r\n          {\r\n            title: '县/区',\r\n            key: 's3',\r\n            type: FormTypes.select,\r\n            width: '240px',\r\n            options: [],\r\n            placeholder: '请选择${title}'\r\n          }\r\n        ],\r\n        dataSource: [],\r\n\r\n        mockData: [\r\n          { label: '北京市', value: '110000', parent: null },\r\n          { label: '天津市', value: '120000', parent: null },\r\n          { label: '河北省', value: '130000', parent: null },\r\n          { label: '上海市', value: '310000', parent: null },\r\n\r\n          { label: '北京市', value: '110100', parent: '110000' },\r\n          { label: '天津市市', value: '120100', parent: '120000' },\r\n          { label: '石家庄市', value: '130100', parent: '130000' },\r\n          { label: '唐山市', value: '130200', parent: '130000' },\r\n          { label: '秦皇岛市', value: '130300', parent: '130000' },\r\n          { label: '上海市', value: '310100', parent: '310000' },\r\n\r\n          { label: '东城区', value: '110101', parent: '110100' },\r\n          { label: '西城区', value: '110102', parent: '110100' },\r\n          { label: '朝阳区', value: '110105', parent: '110100' },\r\n          { label: '和平区', value: '120101', parent: '120000' },\r\n          { label: '河东区', value: '120102', parent: '120000' },\r\n          { label: '河西区', value: '120103', parent: '120000' },\r\n          { label: '黄浦区', value: '310101', parent: '310100' },\r\n          { label: '徐汇区', value: '310104', parent: '310100' },\r\n          { label: '长宁区', value: '310105', parent: '310100' },\r\n          { label: '长安区', value: '130102', parent: '130100' },\r\n          { label: '桥西区', value: '130104', parent: '130100' },\r\n          { label: '新华区', value: '130105', parent: '130100' },\r\n          { label: '路南区', value: '130202', parent: '130200' },\r\n          { label: '路北区', value: '130203', parent: '130200' },\r\n          { label: '古冶区', value: '130204', parent: '130200' },\r\n          { label: '海港区', value: '130302', parent: '130300' },\r\n          { label: '山海关区', value: '130303', parent: '130300' },\r\n          { label: '北戴河区', value: '130304', parent: '130300' },\r\n        ]\r\n      }\r\n    },\r\n    mounted() {\r\n      // 初始化数据\r\n      this.columns[0].options = this.request(null)\r\n    },\r\n    methods: {\r\n\r\n      request(parentId) {\r\n        return this.mockData.filter(i => i.parent === parentId)\r\n      },\r\n\r\n      /** 当选项被改变时，联动其他组件 */\r\n      handleValueChange(event) {\r\n        const { type, row, column, value, target } = event\r\n\r\n        if (type === FormTypes.select) {\r\n\r\n          // 第一列\r\n          if (column.key === 's1') {\r\n            // 设置第二列的 options\r\n            this.columns[1].options = this.request(value)\r\n            // 清空后两列的数据\r\n            target.setValues([{\r\n              rowKey: row.id,\r\n              values: { s2: '', s3: '' }\r\n            }])\r\n            this.columns[2].options = []\r\n          } else\r\n          // 第二列\r\n          if (column.key === 's2') {\r\n            this.columns[2].options = this.request(value)\r\n            target.setValues([{\r\n              rowKey: row.id,\r\n              values: { s3: '' }\r\n            }])\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}