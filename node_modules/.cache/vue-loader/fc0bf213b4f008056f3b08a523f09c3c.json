{"remainingRequest":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\account\\settings\\Custom.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\account\\settings\\Custom.vue","mtime":1568535232000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696000}],"contextDependencies":[],"result":["\nimport { colorList } from '@/components/tools/setting'\nimport ASwitch from 'ant-design-vue/es/switch'\nimport AList from \"ant-design-vue/es/list\"\nimport AListItem from \"ant-design-vue/es/list/Item\"\nimport { mixin } from '@/utils/mixin.js'\n\nconst Meta = AListItem.Meta\n\nexport default {\n  components: {\n    AListItem,\n    AList,\n    ASwitch,\n    Meta\n  },\n  mixins: [mixin],\n  data () {\n    return {\n    }\n  },\n  filters: {\n    themeFilter(theme) {\n      const themeMap = {\n        'dark': '暗色',\n        'light': '白色'\n      }\n      return themeMap[theme]\n    },\n  },\n  methods: {\n    colorFilter(color) {\n      const c = colorList.filter(o => o.color === color)[0]\n      return c && c.key\n    },\n\n    onChange (checked) {\n      if (checked) {\n        this.$store.dispatch('ToggleTheme',  'dark')\n      } else {\n        this.$store.dispatch('ToggleTheme',  'light')\n      }\n    }\n  },\n  render () {\n    return (\n      <AList itemLayout=\"horizontal\">\n        <AListItem>\n          <Meta>\n            <a slot=\"title\">风格配色</a>\n            <span slot=\"description\">\n              整体风格配色设置\n            </span>\n          </Meta>\n          <div slot=\"actions\">\n            <ASwitch checkedChildren=\"暗色\" unCheckedChildren=\"白色\" defaultChecked={this.navTheme === 'dark' && true || false} onChange={this.onChange} />\n          </div>\n        </AListItem>\n        <AListItem>\n          <Meta>\n            <a slot=\"title\">主题色</a>\n            <span slot=\"description\">\n              页面风格配色： <a domPropsInnerHTML={ this.colorFilter(this.primaryColor) }/>\n            </span>\n          </Meta>\n        </AListItem>\n      </AList>\n    )\n  }\n}\n",{"version":3,"sources":["Custom.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Custom.vue","sourceRoot":"src/views/account/settings","sourcesContent":["<script>\r\n  import { colorList } from '@/components/tools/setting'\r\n  import ASwitch from 'ant-design-vue/es/switch'\r\n  import AList from \"ant-design-vue/es/list\"\r\n  import AListItem from \"ant-design-vue/es/list/Item\"\r\n  import { mixin } from '@/utils/mixin.js'\r\n\r\n  const Meta = AListItem.Meta\r\n\r\n  export default {\r\n    components: {\r\n      AListItem,\r\n      AList,\r\n      ASwitch,\r\n      Meta\r\n    },\r\n    mixins: [mixin],\r\n    data () {\r\n      return {\r\n      }\r\n    },\r\n    filters: {\r\n      themeFilter(theme) {\r\n        const themeMap = {\r\n          'dark': '暗色',\r\n          'light': '白色'\r\n        }\r\n        return themeMap[theme]\r\n      },\r\n    },\r\n    methods: {\r\n      colorFilter(color) {\r\n        const c = colorList.filter(o => o.color === color)[0]\r\n        return c && c.key\r\n      },\r\n\r\n      onChange (checked) {\r\n        if (checked) {\r\n          this.$store.dispatch('ToggleTheme',  'dark')\r\n        } else {\r\n          this.$store.dispatch('ToggleTheme',  'light')\r\n        }\r\n      }\r\n    },\r\n    render () {\r\n      return (\r\n        <AList itemLayout=\"horizontal\">\r\n          <AListItem>\r\n            <Meta>\r\n              <a slot=\"title\">风格配色</a>\r\n              <span slot=\"description\">\r\n                整体风格配色设置\r\n              </span>\r\n            </Meta>\r\n            <div slot=\"actions\">\r\n              <ASwitch checkedChildren=\"暗色\" unCheckedChildren=\"白色\" defaultChecked={this.navTheme === 'dark' && true || false} onChange={this.onChange} />\r\n            </div>\r\n          </AListItem>\r\n          <AListItem>\r\n            <Meta>\r\n              <a slot=\"title\">主题色</a>\r\n              <span slot=\"description\">\r\n                页面风格配色： <a domPropsInnerHTML={ this.colorFilter(this.primaryColor) }/>\r\n              </span>\r\n            </Meta>\r\n          </AListItem>\r\n        </AList>\r\n      )\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}