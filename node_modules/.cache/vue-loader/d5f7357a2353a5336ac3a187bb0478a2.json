{"remainingRequest":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\menu\\Contextmenu.vue?vue&type=style&index=0&id=113a23ce&lang=less&scoped=true&","dependencies":[{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\menu\\Contextmenu.vue","mtime":1568535209000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\css-loader\\index.js","mtime":1568345719000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1568345696000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\postcss-loader\\src\\index.js","mtime":1568345891000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\less-loader\\dist\\cjs.js","mtime":1568345929000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.contextmenu{\n  position: fixed;\n  z-index: 1;\n  border: 1px solid #9e9e9e;\n  border-radius: 4px;\n  box-shadow: 2px 2px 10px #aaaaaa !important;\n}\n",{"version":3,"sources":["Contextmenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Contextmenu.vue","sourceRoot":"src/components/menu","sourcesContent":["<template>\r\n  <a-menu :style=\"style\" class=\"contextmenu\" v-show=\"visible\" @click=\"handleClick\" :selectedKeys=\"selectedKeys\">\r\n    <a-menu-item :key=\"item.key\" v-for=\"item in itemList\">\r\n      <a-icon role=\"menuitemicon\" v-if=\"item.icon\" :type=\"item.icon\" />{{ item.text }}\r\n    </a-menu-item>\r\n  </a-menu>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Contextmenu',\r\n  props: {\r\n    visible: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n    itemList: {\r\n      type: Array,\r\n      required: true,\r\n      default: () => []\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      left: 0,\r\n      top: 0,\r\n      target: null,\r\n      selectedKeys: []\r\n    }\r\n  },\r\n  computed: {\r\n    style () {\r\n      return {\r\n        left: this.left + 'px',\r\n        top: this.top + 'px'\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    window.addEventListener('mousedown', e => this.closeMenu(e))\r\n    window.addEventListener('contextmenu', e => this.setPosition(e))\r\n  },\r\n  methods: {\r\n    closeMenu (e) {\r\n      if (['menuitemicon', 'menuitem'].indexOf(e.target.getAttribute('role')) < 0) {\r\n        this.$emit('update:visible', false)\r\n      }\r\n    },\r\n    setPosition (e) {\r\n      this.left = e.clientX\r\n      this.top = e.clientY\r\n      this.target = e.target\r\n    },\r\n    handleClick ({key}) {\r\n      this.$emit('select', key, this.target)\r\n      this.$emit('update:visible', false)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .contextmenu{\r\n    position: fixed;\r\n    z-index: 1;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n    box-shadow: 2px 2px 10px #aaaaaa !important;\r\n  }\r\n</style>\r\n"]}]}