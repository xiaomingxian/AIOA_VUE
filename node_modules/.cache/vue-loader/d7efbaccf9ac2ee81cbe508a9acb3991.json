{"remainingRequest":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecg\\JImportModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecg\\JImportModal.vue","mtime":1568535202000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { postAction } from '@/api/manage'\nexport default {\n  name: 'JImportModal',\n  props:{\n    url:{\n      type: String,\n      default: '',\n      required: false\n    }\n  },\n  data(){\n    return {\n      visible:false,\n      uploading:false,\n      fileList:[],\n      uploadAction:''\n    }\n  },\n  watch: {\n    url (val) {\n      if(val){\n       this.uploadAction = window._CONFIG['domianURL']+val\n      }\n    }\n  },\n  created () {\n    this.uploadAction = window._CONFIG['domianURL']+this.url\n  },\n\n  methods:{\n    handleClose(){\n      this.visible=false\n    },\n    show(){\n      this.fileList = []\n      this.uploading = false\n      this.visible = true\n    },\n    handleRemove(file) {\n      const index = this.fileList.indexOf(file);\n      const newFileList = this.fileList.slice();\n      newFileList.splice(index, 1);\n      this.fileList = newFileList\n    },\n    beforeUpload(file) {\n      this.fileList = [...this.fileList, file]\n      return false;\n    },\n    handleImport() {\n      const { fileList } = this;\n      const formData = new FormData();\n      fileList.forEach((file) => {\n        formData.append('files[]', file);\n      });\n      this.uploading = true\n      postAction(this.uploadAction, formData).then((res) => {\n        this.uploading = false\n        if(res.success){\n          this.$message.success(res.message)\n          this.visible=false\n          this.$emit('ok')\n        }else{\n          this.$message.warning(res.message)\n        }\n      })\n    }\n\n  }\n}\n",{"version":3,"sources":["JImportModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"JImportModal.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\r\n  <a-modal\r\n    title=\"导入EXCEL\"\r\n    :width=\"600\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"uploading\"\r\n    @cancel=\"handleClose\">\r\n\r\n    <a-upload\r\n      name=\"file\"\r\n      :multiple=\"true\"\r\n      accept=\".xls,.xlsx\"\r\n      :fileList=\"fileList\"\r\n      :remove=\"handleRemove\"\r\n      :beforeUpload=\"beforeUpload\">\r\n      <a-button>\r\n        <a-icon type=\"upload\" />\r\n        选择导入文件\r\n      </a-button>\r\n    </a-upload>\r\n\r\n    <template slot=\"footer\">\r\n      <a-button @click=\"handleClose\">关闭</a-button>\r\n      <a-button\r\n        type=\"primary\"\r\n        @click=\"handleImport\"\r\n        :disabled=\"fileList.length === 0\"\r\n        :loading=\"uploading\">\r\n        {{ uploading ? '上传中...' : '开始上传' }}\r\n      </a-button>\r\n    </template>\r\n\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import { postAction } from '@/api/manage'\r\n  export default {\r\n    name: 'JImportModal',\r\n    props:{\r\n      url:{\r\n        type: String,\r\n        default: '',\r\n        required: false\r\n      }\r\n    },\r\n    data(){\r\n      return {\r\n        visible:false,\r\n        uploading:false,\r\n        fileList:[],\r\n        uploadAction:''\r\n      }\r\n    },\r\n    watch: {\r\n      url (val) {\r\n        if(val){\r\n         this.uploadAction = window._CONFIG['domianURL']+val\r\n        }\r\n      }\r\n    },\r\n    created () {\r\n      this.uploadAction = window._CONFIG['domianURL']+this.url\r\n    },\r\n\r\n    methods:{\r\n      handleClose(){\r\n        this.visible=false\r\n      },\r\n      show(){\r\n        this.fileList = []\r\n        this.uploading = false\r\n        this.visible = true\r\n      },\r\n      handleRemove(file) {\r\n        const index = this.fileList.indexOf(file);\r\n        const newFileList = this.fileList.slice();\r\n        newFileList.splice(index, 1);\r\n        this.fileList = newFileList\r\n      },\r\n      beforeUpload(file) {\r\n        this.fileList = [...this.fileList, file]\r\n        return false;\r\n      },\r\n      handleImport() {\r\n        const { fileList } = this;\r\n        const formData = new FormData();\r\n        fileList.forEach((file) => {\r\n          formData.append('files[]', file);\r\n        });\r\n        this.uploading = true\r\n        postAction(this.uploadAction, formData).then((res) => {\r\n          this.uploading = false\r\n          if(res.success){\r\n            this.$message.success(res.message)\r\n            this.visible=false\r\n            this.$emit('ok')\r\n          }else{\r\n            this.$message.warning(res.message)\r\n          }\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}