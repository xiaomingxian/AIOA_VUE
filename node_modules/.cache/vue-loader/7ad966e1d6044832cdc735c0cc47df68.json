{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\template\\modules\\DocNumSetModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\template\\modules\\DocNumSetModal.vue","mtime":1577184410664},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1570779245522},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {httpAction} from '@/api/manage'\nimport pick from 'lodash.pick'\nimport {getAction} from '@/api/manage'\n// 引入搜索部门弹出框的组件\nimport {ACCESS_TOKEN} from \"@/store/mutation-types\"\nimport {addUser, editUser, queryUserRole, queryall} from '@/api/api'\nimport {disabledAuthFilter} from \"@/utils/authFilter\"\nimport {duplicateCheck} from '@/api/api'\nimport SelectDepartWindow from \"../../system/modules/SelectDepartWindow\";\n\nexport default {\n  name: \"DocNumSetModal\",\n  components: {\n    SelectDepartWindow\n  },\n  data() {\n    return {\n      ids: '',\n      title: \"操作\",\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {span: 24},\n        sm: {span: 5},\n      },\n      wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 16},\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {},\n      url: {\n        add: \"/papertitle/docNumSet/add\",\n        edit: \"/papertitle/docNumSet/edit\",\n        userWithDepart: \"/papertitle/docNumSet/getDocDepartsList\",\n        userId: \"/sys/user/generateUserId\"\n      },\n      selectedModel: null,\n      selectedFunction: null,\n      allowClear: false,\n      modelData: [],\n      functionList: [],\n      functionData: [],\n      upData: [],\n      downData: [],\n      officeData: [],\n      //部门控件\n      departDisabled: false, //是否是我的部门调用该页面\n      roleDisabled: false, //是否是角色维护调用该页面\n      modalWidth: 800,\n      drawerWidth: 700,\n      modaltoggleFlag: true,\n      confirmDirty: false,\n      selectedDepartKeys: [], //保存用户选择部门id\n      checkedDepartKeys: [],\n      checkedDepartNames: [], // 保存部门的名称 =>title\n      checkedDepartNameString: \"\", // 保存部门的名称 =>title\n      userId: \"\", //保存用户id\n      disableSubmit: false,\n      userDepartModel: {userId: '', departIdList: []}, // 保存SysUserDepart的用户部门中间表数据需要的对象\n    }\n  },\n  created() {\n    this.getBusModelList();\n    this.getTemplateUp();\n    this.getTemplateDown();\n    this.getTemplateOffice();\n    const token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\"X-Access-Token\": token}\n  },\n\n  methods: {\n    add() {\n      this.edit({});\n    },\n    edit(record) {\n      this.selectedModel = record.ibusModelId;\n      //获取子集\n      let url = \"/papertitle/docNumSet/busFunctionList?ibusModelId=\" + this.selectedModel;\n      getAction(url).then((res) => {\n        // console.log(res);\n        this.functionList = res.result;\n      })\n      this.form.resetFields();\n      this.userId = record.iid;\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model, 'iid', 'ibusModelId', 'ibusFunctionId', 'iorder', 'sname', 'sdocRule', 'idocNum', 'iutemplateId', 'idtemplateId', 'iatemplateId', 'sremarks', 'screateBy', 'supdateBy'))\n      });\n      // 调用查询用户对应的部门信息的方法\n      this.checkedDepartKeys = [];\n      this.loadCheckDeparts();\n    },\n    //下拉选列表-所属模块\n    getBusModelList() {\n      let url = \"/papertitle/docNumSet/busModelList\";\n      getAction(url).then((res) => {\n        console.log(res.result);\n        this.modelData = res.result;\n      })\n    },\n    getModalVal(value) {\n      // console.log(value);\n      let url = \"/papertitle/docNumSet/busFunctionList?ibusModelId=\" + value;\n      getAction(url).then((res) => {\n        this.functionList = res.result;\n        this.form.setFieldsValue({\n          ibusFunctionId: ''\n        })\n      })\n    },\n    //下拉选列表-上报\n    getTemplateUp() {\n      let url = \"/papertitle/oaTemplate/templateList?type=1\";\n      getAction(url).then((res) => {\n        this.upData = res.result;\n      })\n    },\n    //下拉选列表-下发\n    getTemplateDown() {\n      let url = \"/papertitle/oaTemplate/templateList?type=2\";\n      getAction(url).then((res) => {\n        this.downData = res.result;\n      })\n    },\n    //下拉选列表-办公单\n    getTemplateOffice() {\n      let url = \"/papertitle/oaTemplate/templateList?type=3\";\n      getAction(url).then((res) => {\n        this.officeData = res.result;\n      })\n    },\n    loadCheckDeparts() {\n      let that = this;\n      if (!that.userId) {\n        return\n      }\n      getAction(that.url.userWithDepart, {userId: that.userId}).then((res) => {\n        that.checkedDepartNames = [];\n        if (res.success) {\n          for (let i = 0; i < res.result.length; i++) {\n            that.checkedDepartNames.push(res.result[i].title);\n            this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\n            that.checkedDepartKeys.push(res.result[i].key);\n          }\n          that.userDepartModel.departIdList = that.checkedDepartKeys\n        } else {\n          console.log(res.message);\n        }\n      })\n    },\n    // 搜索用户对应的部门API\n    onSearch() {\n      this.$refs.SelectDepartWindow.add(this.checkedDepartKeys, this.userId);\n    },\n    // 获取用户对应部门弹出框提交给返回的数据\n    modalFormOk(formData) {\n      this.checkedDepartNames = [];\n      this.selectedDepartKeys = [];\n      this.checkedDepartNameString = '';\n      this.userId = formData.userId;\n      this.userDepartModel.userId = formData.userId;\n      for (let i = 0; i < formData.departIdList.length; i++) {\n        this.selectedDepartKeys.push(formData.departIdList[i].key);\n        this.checkedDepartNames.push(formData.departIdList[i].title);\n        this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\n      }\n      this.userDepartModel.departIdList = this.selectedDepartKeys;\n      this.checkedDepartKeys = this.selectedDepartKeys  //更新当前的选择keys\n      // console.log(\"=====>\" + this.checkedDepartKeys);\n    },\n    refresh() {\n      this.selectedDepartKeys = [];\n      this.checkedDepartKeys = [];\n      this.checkedDepartNames = [];\n      this.checkedDepartNameString = \"\";\n      this.userId = \"\"\n    },\n    close() {\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false;\n      this.userDepartModel = {userId: '', departIdList: []};\n      this.checkedDepartNames = [];\n      this.checkedDepartNameString = '';\n      this.checkedDepartKeys = [];\n      this.selectedDepartKeys = [];\n    },\n    handleOk() {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let httpurl = '';\n          let method = '';\n          if (!this.model.iid) {\n            httpurl += this.url.add;\n            method = 'post';\n          } else {\n            httpurl += this.url.edit;\n            method = 'put';\n          }\n          let formData = Object.assign(this.model, values);\n          formData.ibusModelId = this.selectedModel;\n          formData.ibusFunctionId = this.selectedFunction;\n          formData.selecteddeparts = this.userDepartModel.departIdList.length > 0 ? this.userDepartModel.departIdList.join(\",\") : '';\n          httpAction(httpurl, formData, method).then((res) => {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          })\n\n        }\n      })\n    },\n    handleCancel() {\n      this.close()\n    },\n\n\n  }\n}\n",{"version":3,"sources":["DocNumSetModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA","file":"DocNumSetModal.vue","sourceRoot":"src/views/template/modules","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"所属模块\">\r\n          <a-select v-model=\"selectedModel\" @change=\"getModalVal\">\r\n            <a-select-option v-for=\"(item,index) in modelData\" :key=\"index\" :value=\"item.iid\">{{item.sname}}\r\n            </a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"所属业务\">\r\n          <!--:defaultValue=1 -->\r\n          <a-select v-if=\"functionList\" v-model=\"selectedFunction\" placeholder=\"\" v-decorator=\"[ 'ibusFunctionId', {}]\"\r\n                    ref=\"sss\" id=\"selop\">\r\n            <a-select-option v-for=\"(item,index) in functionList\" :key=\"index\" :value=\"item.iid\">{{item.sname}}\r\n            </a-select-option>\r\n          </a-select>\r\n          <a-input v-else placeholder=\"暂无匹配业务\"></a-input>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"序号\">\r\n          <a-input-number v-decorator=\"[ 'iorder', {}]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"文号名称\">\r\n          <a-input placeholder=\"\" v-decorator=\"['sname', {}]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"文号规则\">\r\n          <a-input placeholder=\"\" v-decorator=\"['sdocRule', {}]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"当前文号\">\r\n          <a-input-number placeholder=\"\" v-decorator=\"['idocNum', {}]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"上报模版\">\r\n          <a-select v-decorator=\"[ 'iutemplateId', {}]\">\r\n            <a-select-option v-for=\"(item,index) in upData\" :key=\"index\" :value=\"item.iid\">{{item.sname}}\r\n            </a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"下发模版\">\r\n          <a-select v-decorator=\"[ 'idtemplateId', {}]\">\r\n            <a-select-option v-for=\"(item,index) in downData\" :key=\"index\" :value=\"item.iid\">{{item.sname}}\r\n            </a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"办文单模板\">\r\n          <a-select v-decorator=\"[ 'iatemplateId', {}]\">\r\n            <a-select-option v-for=\"(item,index) in officeData\" :key=\"index\" :value=\"item.iid\">{{item.sname}}\r\n            </a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"备注\">\r\n          <a-textarea placeholder=\"\" v-decorator=\"['sremarks',{}]\"/>\r\n        </a-form-item>\r\n        <!--部门分配-->\r\n        <a-form-item label=\"部门分配\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" v-show=\"!departDisabled\">\r\n          <a-input-search\r\n            placeholder=\"点击右侧按钮选择部门\"\r\n            v-model=\"checkedDepartNameString\"\r\n            disabled\r\n            @search=\"onSearch\">\r\n            <a-button slot=\"enterButton\" icon=\"search\">选择</a-button>\r\n          </a-input-search>\r\n        </a-form-item>\r\n        <a-input type=\"hidden\" placeholder=\"\" v-decorator=\"['selecteddeparts']\"/>\r\n\r\n      </a-form>\r\n\r\n    </a-spin>\r\n    <select-depart-window ref=\"SelectDepartWindow\" @ok=\"modalFormOk\"></select-depart-window>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import {httpAction} from '@/api/manage'\r\n  import pick from 'lodash.pick'\r\n  import {getAction} from '@/api/manage'\r\n  // 引入搜索部门弹出框的组件\r\n  import {ACCESS_TOKEN} from \"@/store/mutation-types\"\r\n  import {addUser, editUser, queryUserRole, queryall} from '@/api/api'\r\n  import {disabledAuthFilter} from \"@/utils/authFilter\"\r\n  import {duplicateCheck} from '@/api/api'\r\n  import SelectDepartWindow from \"../../system/modules/SelectDepartWindow\";\r\n\r\n  export default {\r\n    name: \"DocNumSetModal\",\r\n    components: {\r\n      SelectDepartWindow\r\n    },\r\n    data() {\r\n      return {\r\n        ids: '',\r\n        title: \"操作\",\r\n        visible: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 5},\r\n        },\r\n        wrapperCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 16},\r\n        },\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        validatorRules: {},\r\n        url: {\r\n          add: \"/papertitle/docNumSet/add\",\r\n          edit: \"/papertitle/docNumSet/edit\",\r\n          userWithDepart: \"/papertitle/docNumSet/getDocDepartsList\",\r\n          userId: \"/sys/user/generateUserId\"\r\n        },\r\n        selectedModel: null,\r\n        selectedFunction: null,\r\n        allowClear: false,\r\n        modelData: [],\r\n        functionList: [],\r\n        functionData: [],\r\n        upData: [],\r\n        downData: [],\r\n        officeData: [],\r\n        //部门控件\r\n        departDisabled: false, //是否是我的部门调用该页面\r\n        roleDisabled: false, //是否是角色维护调用该页面\r\n        modalWidth: 800,\r\n        drawerWidth: 700,\r\n        modaltoggleFlag: true,\r\n        confirmDirty: false,\r\n        selectedDepartKeys: [], //保存用户选择部门id\r\n        checkedDepartKeys: [],\r\n        checkedDepartNames: [], // 保存部门的名称 =>title\r\n        checkedDepartNameString: \"\", // 保存部门的名称 =>title\r\n        userId: \"\", //保存用户id\r\n        disableSubmit: false,\r\n        userDepartModel: {userId: '', departIdList: []}, // 保存SysUserDepart的用户部门中间表数据需要的对象\r\n      }\r\n    },\r\n    created() {\r\n      this.getBusModelList();\r\n      this.getTemplateUp();\r\n      this.getTemplateDown();\r\n      this.getTemplateOffice();\r\n      const token = Vue.ls.get(ACCESS_TOKEN);\r\n      this.headers = {\"X-Access-Token\": token}\r\n    },\r\n\r\n    methods: {\r\n      add() {\r\n        this.edit({});\r\n      },\r\n      edit(record) {\r\n        this.selectedModel = record.ibusModelId;\r\n        //获取子集\r\n        let url = \"/papertitle/docNumSet/busFunctionList?ibusModelId=\" + this.selectedModel;\r\n        getAction(url).then((res) => {\r\n          // console.log(res);\r\n          this.functionList = res.result;\r\n        })\r\n        this.form.resetFields();\r\n        this.userId = record.iid;\r\n        this.model = Object.assign({}, record);\r\n        this.visible = true;\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue(pick(this.model, 'iid', 'ibusModelId', 'ibusFunctionId', 'iorder', 'sname', 'sdocRule', 'idocNum', 'iutemplateId', 'idtemplateId', 'iatemplateId', 'sremarks', 'screateBy', 'supdateBy'))\r\n        });\r\n        // 调用查询用户对应的部门信息的方法\r\n        this.checkedDepartKeys = [];\r\n        this.loadCheckDeparts();\r\n      },\r\n      //下拉选列表-所属模块\r\n      getBusModelList() {\r\n        let url = \"/papertitle/docNumSet/busModelList\";\r\n        getAction(url).then((res) => {\r\n          console.log(res.result);\r\n          this.modelData = res.result;\r\n        })\r\n      },\r\n      getModalVal(value) {\r\n        // console.log(value);\r\n        let url = \"/papertitle/docNumSet/busFunctionList?ibusModelId=\" + value;\r\n        getAction(url).then((res) => {\r\n          this.functionList = res.result;\r\n          this.form.setFieldsValue({\r\n            ibusFunctionId: ''\r\n          })\r\n        })\r\n      },\r\n      //下拉选列表-上报\r\n      getTemplateUp() {\r\n        let url = \"/papertitle/oaTemplate/templateList?type=1\";\r\n        getAction(url).then((res) => {\r\n          this.upData = res.result;\r\n        })\r\n      },\r\n      //下拉选列表-下发\r\n      getTemplateDown() {\r\n        let url = \"/papertitle/oaTemplate/templateList?type=2\";\r\n        getAction(url).then((res) => {\r\n          this.downData = res.result;\r\n        })\r\n      },\r\n      //下拉选列表-办公单\r\n      getTemplateOffice() {\r\n        let url = \"/papertitle/oaTemplate/templateList?type=3\";\r\n        getAction(url).then((res) => {\r\n          this.officeData = res.result;\r\n        })\r\n      },\r\n      loadCheckDeparts() {\r\n        let that = this;\r\n        if (!that.userId) {\r\n          return\r\n        }\r\n        getAction(that.url.userWithDepart, {userId: that.userId}).then((res) => {\r\n          that.checkedDepartNames = [];\r\n          if (res.success) {\r\n            for (let i = 0; i < res.result.length; i++) {\r\n              that.checkedDepartNames.push(res.result[i].title);\r\n              this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\r\n              that.checkedDepartKeys.push(res.result[i].key);\r\n            }\r\n            that.userDepartModel.departIdList = that.checkedDepartKeys\r\n          } else {\r\n            console.log(res.message);\r\n          }\r\n        })\r\n      },\r\n      // 搜索用户对应的部门API\r\n      onSearch() {\r\n        this.$refs.SelectDepartWindow.add(this.checkedDepartKeys, this.userId);\r\n      },\r\n      // 获取用户对应部门弹出框提交给返回的数据\r\n      modalFormOk(formData) {\r\n        this.checkedDepartNames = [];\r\n        this.selectedDepartKeys = [];\r\n        this.checkedDepartNameString = '';\r\n        this.userId = formData.userId;\r\n        this.userDepartModel.userId = formData.userId;\r\n        for (let i = 0; i < formData.departIdList.length; i++) {\r\n          this.selectedDepartKeys.push(formData.departIdList[i].key);\r\n          this.checkedDepartNames.push(formData.departIdList[i].title);\r\n          this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\r\n        }\r\n        this.userDepartModel.departIdList = this.selectedDepartKeys;\r\n        this.checkedDepartKeys = this.selectedDepartKeys  //更新当前的选择keys\r\n        // console.log(\"=====>\" + this.checkedDepartKeys);\r\n      },\r\n      refresh() {\r\n        this.selectedDepartKeys = [];\r\n        this.checkedDepartKeys = [];\r\n        this.checkedDepartNames = [];\r\n        this.checkedDepartNameString = \"\";\r\n        this.userId = \"\"\r\n      },\r\n      close() {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n        this.disableSubmit = false;\r\n        this.userDepartModel = {userId: '', departIdList: []};\r\n        this.checkedDepartNames = [];\r\n        this.checkedDepartNameString = '';\r\n        this.checkedDepartKeys = [];\r\n        this.selectedDepartKeys = [];\r\n      },\r\n      handleOk() {\r\n        const that = this;\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true;\r\n            let httpurl = '';\r\n            let method = '';\r\n            if (!this.model.iid) {\r\n              httpurl += this.url.add;\r\n              method = 'post';\r\n            } else {\r\n              httpurl += this.url.edit;\r\n              method = 'put';\r\n            }\r\n            let formData = Object.assign(this.model, values);\r\n            formData.ibusModelId = this.selectedModel;\r\n            formData.ibusFunctionId = this.selectedFunction;\r\n            formData.selecteddeparts = this.userDepartModel.departIdList.length > 0 ? this.userDepartModel.departIdList.join(\",\") : '';\r\n            httpAction(httpurl, formData, method).then((res) => {\r\n              if (res.success) {\r\n                that.$message.success(res.message);\r\n                that.$emit('ok');\r\n              } else {\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n              that.close();\r\n            })\r\n\r\n          }\r\n        })\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"]}]}