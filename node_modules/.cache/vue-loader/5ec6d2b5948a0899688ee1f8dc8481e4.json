{"remainingRequest":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecg\\JDate.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecg\\JDate.vue","mtime":1568535200000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment'\nexport default {\n  name: 'JDate',\n  props: {\n    placeholder:{\n      type: String,\n      default: '',\n      required: false\n    },\n    value:{\n      type: String,\n      required: false\n    },\n    dateFormat:{\n      type: String,\n      default: 'YYYY-MM-DD',\n      required: false\n    },\n    //此属性可以被废弃了\n    triggerChange:{\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    readOnly:{\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    disabled:{\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    showTime:{\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    getCalendarContainer: {\n      type: Function,\n      default: () => document.body\n    }\n  },\n  data () {\n    let dateStr = this.value;\n    return {\n      decorator:\"\",\n      momVal:!dateStr?null:moment(dateStr,this.dateFormat)\n    }\n  },\n  watch: {\n    value (val) {\n      if(!val){\n        this.momVal = null\n      }else{\n        this.momVal = moment(val,this.dateFormat)\n      }\n    }\n  },\n  methods: {\n    moment,\n    handleDateChange(mom,dateStr){\n      this.$emit('change', dateStr);\n    }\n  },\n  //2.2新增 在组件内定义 指定父组件调用时候的传值属性和事件类型 这个牛逼\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n}\n",{"version":3,"sources":["JDate.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JDate.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\r\n  <a-date-picker\r\n    :disabled=\"disabled || readOnly\"\r\n    :placeholder=\"placeholder\"\r\n    @change=\"handleDateChange\"\r\n    :value=\"momVal\"\r\n    :showTime=\"showTime\"\r\n    :format=\"dateFormat\"\r\n    :getCalendarContainer=\"getCalendarContainer\"\r\n  />\r\n</template>\r\n<script>\r\n  import moment from 'moment'\r\n  export default {\r\n    name: 'JDate',\r\n    props: {\r\n      placeholder:{\r\n        type: String,\r\n        default: '',\r\n        required: false\r\n      },\r\n      value:{\r\n        type: String,\r\n        required: false\r\n      },\r\n      dateFormat:{\r\n        type: String,\r\n        default: 'YYYY-MM-DD',\r\n        required: false\r\n      },\r\n      //此属性可以被废弃了\r\n      triggerChange:{\r\n        type: Boolean,\r\n        required: false,\r\n        default: false\r\n      },\r\n      readOnly:{\r\n        type: Boolean,\r\n        required: false,\r\n        default: false\r\n      },\r\n      disabled:{\r\n        type: Boolean,\r\n        required: false,\r\n        default: false\r\n      },\r\n      showTime:{\r\n        type: Boolean,\r\n        required: false,\r\n        default: false\r\n      },\r\n      getCalendarContainer: {\r\n        type: Function,\r\n        default: () => document.body\r\n      }\r\n    },\r\n    data () {\r\n      let dateStr = this.value;\r\n      return {\r\n        decorator:\"\",\r\n        momVal:!dateStr?null:moment(dateStr,this.dateFormat)\r\n      }\r\n    },\r\n    watch: {\r\n      value (val) {\r\n        if(!val){\r\n          this.momVal = null\r\n        }else{\r\n          this.momVal = moment(val,this.dateFormat)\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      moment,\r\n      handleDateChange(mom,dateStr){\r\n        this.$emit('change', dateStr);\r\n      }\r\n    },\r\n    //2.2新增 在组件内定义 指定父组件调用时候的传值属性和事件类型 这个牛逼\r\n    model: {\r\n      prop: 'value',\r\n      event: 'change'\r\n    }\r\n  }\r\n</script>\r\n"]}]}