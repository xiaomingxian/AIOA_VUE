{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\buttons\\ShowReadModal.vue?vue&type=style&index=0&id=20035262&scoped=true&lang=less&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\buttons\\ShowReadModal.vue","mtime":1577184410178},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\css-loader\\index.js","mtime":1570780111199},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1570779225817},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\postcss-loader\\src\\index.js","mtime":1570780438513},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\less-loader\\dist\\cjs.js","mtime":1570780454546},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.title {\n  width: 100%;\n  height: 40px;\n  background: #2eabff;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  /*letter-spacing: 20px;*/\n  margin-top: 10px;\n\n  span {\n    margin-left: 20px;\n  }\n}\n\n",{"version":3,"sources":["ShowReadModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ShowReadModal.vue","sourceRoot":"src/views/buttons","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"1000\"\r\n    :visible=\"visible\"\r\n    @ok=\"handleOk\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n    <div v-for=\"(item,index) in dataSource\" :key=\"index\">\r\n      <p class=\"title\" @click=\"Clicks(index)\"><span>{{deptName[index]}}</span><a-icon :ref=\"tables[index].down\"  type=\"down\" style=\"position: absolute;right: 5%;display: none;\" /><a-icon :ref=\"tables[index].up\"  type=\"up\" style=\"position: absolute;right: 5%;display: block;\" /></p>\r\n      <a-table :ref=\"tables[index].table\"\r\n               size=\"middle\"\r\n               bordered\r\n               :columns=\"columnss\"\r\n               :dataSource=\"dataSource[index]\"\r\n               :pagination=\"false\"\r\n      >\r\n      </a-table>\r\n    </div>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import {getAction,postAction} from '@/api/manage'\r\n  import moment from 'moment'\r\n  import { JeecgListMixin } from '@/mixins/JeecgListMixin'\r\n\r\n  export default {\r\n    name: \"showreadmodal\",\r\n    data() {\r\n\r\n      return {\r\n        tableName:'',\r\n        busFunctionId:0,\r\n        busDataId:0,\r\n        columnss:[\r\n          {\r\n            title: '用户',\r\n            align: \"center\",\r\n            dataIndex: 'userName',\r\n            width:'50%'\r\n          },\r\n\r\n          {\r\n            title: '已读情况',\r\n            align: \"center\",\r\n            dataIndex: 'isRead',\r\n            width:'50%',\r\n            customRender: function (readCase) {\r\n              if (readCase == '1') {\r\n                return \"已阅读\";\r\n              } else if (readCase == \"0\") {\r\n                return \"未查看\";\r\n              } else {\r\n                return text;\r\n              }\r\n            }\r\n            // width:'20%'\r\n          },\r\n\r\n        ],\r\n        isShow:true,\r\n        tables:[],\r\n        dataSource: [],\r\n        dataSources: [],\r\n        deptName:[],\r\n        message:'',\r\n        index:[],\r\n        length:[],\r\n        title: \"已读情况查看\",\r\n        visible: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 5},\r\n        },\r\n        wrapperCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 16},\r\n        },\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        validatorRules: {\r\n\r\n        },\r\n      }\r\n    },\r\n    created() {\r\n\r\n    },\r\n\r\n    create(){\r\n    },\r\n\r\n    methods: {\r\n      moment,\r\n      showHead(tableName,busFunctionId,busDataId) {\r\n        this.visible = true;\r\n        this.tableName = tableName;\r\n        this.busFunctionId = busFunctionId;\r\n        this.busDataId = busDataId;\r\n        this.getReadUserList();\r\n      },\r\n      close() {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      },\r\n      handleOk(){\r\n        this.close()\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n\r\n      handleTableChange(pagination) {\r\n        let currentClick = pagination.current;\r\n        this.getReadUserList(currentClick);\r\n      },\r\n\r\n      getReadUserList(currentClick=1) {\r\n        this.dataSource= [];\r\n        let url = \"/oaBus/oaBusdata/getReadCase\";\r\n        getAction(url, {urlParam:1,sBusdataTable:this.tableName,iBusFunctionId:this.busFunctionId,iBusdataId:this.busDataId,pageNo:currentClick}).then((res) => {\r\n\r\n          this.dataSources = res.result.records;\r\n          var map = {}\r\n          let collation = res.result.records\r\n         for (let i in collation){\r\n           let  key = collation[i].deptName;\r\n           if (map[key] == undefined) {\r\n             map[key] = []\r\n             collation[i][\"key\"]=i\r\n             map[key].push(collation[i])\r\n           }else {\r\n             collation[i][\"key\"]=i\r\n             map[key].push(collation[i])\r\n\r\n           }\r\n         }\r\n\r\n\r\n         let opinionData = JSON.parse(JSON.stringify(map));\r\n\r\n              for (var i in  opinionData){\r\n                for (let j in opinionData[i]){\r\n                  this.index.push(parseInt(opinionData[i][j].key));\r\n              this.length.push(opinionData[i].length);\r\n\r\n            }\r\n          }\r\n\r\n          for (let i = 0; i < this.dataSources.length;i += this.length[i]) {\r\n\r\n            this.dataSource.push(opinionData[this.dataSources[i].deptName]);\r\n            this.deptName.push(this.dataSources[i].deptName);\r\n          }\r\n\r\n          for(let i = 0; i < this.dataSource.length;i++){\r\n            this.tables.push({\r\n              table:'tables'+i,\r\n              down:'downs'+i,\r\n              up:'up'+i\r\n            })\r\n          }\r\n\r\n        });\r\n\r\n\r\n\r\n      },\r\n\r\n      Clicks(index){\r\n        if(this.isShow == true){\r\n          this.isShow = false;\r\n          this.$refs[this.tables[index].table][0].$el.style.display = 'none';\r\n          this.$refs[this.tables[index].down][0].style.display = 'block';\r\n          this.$refs[this.tables[index].up][0].style.display = 'none';\r\n        }else {\r\n          this.isShow = true;\r\n          this.$refs[this.tables[index].table][0].$el.style.display = 'block';\r\n          this.$refs[this.tables[index].down][0].style.display = 'none';\r\n          this.$refs[this.tables[index].up][0].style.display = 'block';\r\n        }\r\n        // console.log(this.$refs[this.tables[index].down])\r\n      },\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n\r\n  .title {\r\n    width: 100%;\r\n    height: 40px;\r\n    background: #2eabff;\r\n    color: #ffffff;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    /*letter-spacing: 20px;*/\r\n    margin-top: 10px;\r\n\r\n    span {\r\n      margin-left: 20px;\r\n    }\r\n  }\r\n\r\n</style>"]}]}