{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\workflow\\modules\\proc\\OaProcButtonCatModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\workflow\\modules\\proc\\OaProcButtonCatModal.vue","mtime":1579508874608},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1570779245522},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import OaProcButtonNewModal from './OaProcButtonNewModal'\n  import { httpAction } from '@/api/manage'\n  import pick from 'lodash.pick'\n  import moment from \"moment\"\n  import { JeecgListMixin } from '@/mixins/JeecgListMixin'\n  import {getAction} from '@/api/manage.js'\n\n  export default {\n    name: \"OaProcButtonModal\",\n    mixins:[JeecgListMixin],\n    components: {\n      OaProcButtonNewModal,\n    },\n    data () {\n      return {\n        data:[],\n        title:\"操作\",\n        visible: false,\n        model: {},\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n        ipagination: {\n          current: 1,\n          pageSize: 10,\n          pageSizeOptions: ['10', '20', '30'],\n          showTotal: (total, range) => {\n            return range[0] + \"-\" + range[1] + \" 共\" + total + \"条\"\n          },\n          showQuickJumper: true,\n          showSizeChanger: true,\n          total: 0\n        },\n        buttonList:'',\n        TaskLinkId:'',\n        sbtnName:'',\n        buttonId:\"\",\n        heBingcolumn:'',\n        HBcolumn:1,\n        confirmLoading: false,\n        form: this.$form.createForm(this),\n        validatorRules:{\n        iId:{rules: [{ required: true, message: '请输入主键id!' }]},\n        },\n        description: '发布类按钮描述管理页面',\n        // 表头\n        columns: [\n          // {\n          //   title: '主键id',\n          //   align:\"center\",\n          //   dataIndex: 'iid'\n          // },\n          // {\n          //   title: '流程按钮关联ID',\n          //   align:\"center\",\n          //   dataIndex: 'iprocButtonId'\n          // },\n          {\n            title: '顺序号',\n            align: \"center\",\n            dataIndex: 'iorder'\n          },\n          {\n            title: '任务环节名称',\n            align: \"center\",\n            dataIndex: 'taskDefKey',\n            customRender:(text,row,index)=>{\n              const obj = {\n                children: text,\n                attrs: {}\n              };\n              if(text==this.heBingcolumn){\n                  this.HBcolumn+=1;\n              }else {\n                this.HBcolumn=1;\n              }\n              obj.attrs.rowSpan =this.HBcolumn;\n              for (let i = 0; i < this.TaskLink.length ; i++) {\n                // console.log(\"**********************************\");\n                // console.log(text);\n                // console.log(this.buttonList[i].iid);\n                if (text==this.TaskLink[i].id) {\n                  return this.TaskLink[i].name;\n                  obj.children=this.TaskLink[i].name\n                  return obj;\n                }\n              }\n              //保存上一条数据\n              this.heBingcolumn=text;\n            }\n          },\n          {\n            title: '按钮名称',\n            align: \"center\",\n            dataIndex: 'ibuttonId',\n            customRender:(text,row,index)=>{\n              for (let i = 0; i < this.buttonList.length ; i++) {\n                // console.log(\"**********************************\");\n                // console.log(text);\n                // console.log(this.buttonList[i].iid);\n                if (text==this.buttonList[i].iid) {\n                  return this.buttonList[i].sbtnName;\n                }\n              }\n            }\n          },\n          {\n            title: '不控制',\n            align: \"center\",\n            dataIndex: 'ipermitType',\n            customRender:(text,row,index)=>{\n              if (text==1 || text==\"1\") {\n                return \"控制\";\n              }else if (text==0 || text==\"0\"){\n                return \"不控制\";\n              }else {\n                return \"---\";\n              }\n            }\n          },\n          {\n            title: '拟稿人',\n            align: \"center\",\n            dataIndex: 'iisCreater',\n            customRender:(text,row,index)=>{\n              if (text==1 || text==\"1\") {\n                return \"是\";\n              }else if (text==0 || text==\"0\"){\n                return \"否\";\n              }else {\n                return \"---\";\n              }\n            }\n          },\n          {\n            title: '已办用户',\n            align: \"center\",\n            dataIndex: 'iisLastsender',\n            customRender:(text,row,index)=>{\n              if (text==1 || text==\"1\") {\n                return \"是\";\n              }else if (text==0 || text==\"0\"){\n                return \"否\";\n              }else {\n                return \"---\";\n              }\n            }\n          },\n          {\n            title: '处理人',\n            align: \"center\",\n            dataIndex: 'iisTransactors',\n            customRender:(text,row,index)=>{\n              if (text==1 || text==\"1\") {\n                return \"是\";\n              }else if (text==0 || text==\"0\"){\n                return \"否\";\n              }else {\n                return \"---\";\n              }\n            }\n          },\n          {\n            title: '读者',\n            align: \"center\",\n            dataIndex: 'iisReader',\n            customRender:(text,row,index)=>{\n              if (text==1 || text==\"1\") {\n                return \"是\";\n              }else if (text==0 || text==\"0\"){\n                return \"否\";\n              }else {\n                return \"---\";\n              }\n            }\n          },\n          {\n            title: '操作',\n            dataIndex: 'action',\n            align: \"center\",\n            scopedSlots: {customRender: 'action'},\n          }\n        ],\n        url: {\n          list: \"/oabuttonset/oaButtonSet/list\",\n          findById:\"/oabuttonset/oaButtonSet/findById\",\n          delete: \"/oabuttonset/oaButtonSet/delete\",\n          deleteBatch: \"/oabuttonset/oaButtonSet/deleteBatch\",\n          exportXlsUrl: \"oabuttonset/oaButtonSet/exportXls\",\n          importExcelUrl: \"oabuttonset/oaButtonSet/importExcel\",\n          add: \"/oaprocbutton/oaProcButton/add\",\n          edit: \"/oaprocbutton/oaProcButton/edit\",\n          buttonList: \"/oabutton/oaButton/buttonList\",\n          TaskLink:\"/wf/process/actsList\"\n        },\n\n      }\n    },\n    created () {\n    },\n    methods: {\n      //点击删除按钮 前校验\n      beforeConfirm(iid){\n        // console.log(this.btnSetModel)\n        if (iid==null){\n          this.$message.warning(\"当前信息不存在\");\n        }else {\n          let url='oabuttonset/oaButtonSet/verButtonSetDelete';\n          getAction(url,{id:iid}).then(res=>{\n            if (res.success){\n              // this.$message.success(res.message);\n              //调用弹框\n              this.showConfirm(iid);\n            } else {\n              this.handleDelete(iid);\n            }\n          });\n        }\n      },\n      //弹框\n      showConfirm(iid){\n        let that=this;\n        this.$confirm({\n          title:'您的某些业务已经使用了这套按钮!!!',\n          content:'删除将影响业务办理,你确定还要删除吗?',\n          onOk(){\n            that.handleDelete(iid);\n          },\n          onCancel(){\n          }\n        })\n      },\n      add (record,TaskLinkId) {\n        console.log(\"gagagagagagaga0-----------\");\n        console.log(record);\n        this.TaskLinkId=TaskLinkId;\n        //---------------任务环节列表---------------\n        getAction(this.url.TaskLink,{processDefinitionId:TaskLinkId}).then(res=>{\n          this.TaskLink = res.result;\n        });\n        this.sbtnName=\"\";\n        // this.$nextTick()\n        //按钮列表\n        getAction(this.url.buttonList).then(res => {\n          this.buttonList = res.result ;\n        });\n        this.form.resetFields();\n        this.model = Object.assign({}, record);\n        this.visible = true;\n        this.$nextTick(() => {\n          this.form.setFieldsValue(pick(this.model,'iid','procdefKey','sbuttonSetName'))\n\t\t  //时间格式化\n        });\n\n      },\n      handleEdit1:function () {\n        this.$refs.modalForm.edit(this.model,this.TaskLinkId);\n        this.$refs.modalForm.loadData(this.model.iid)\n        this.$refs.modalForm.title = \"新编辑\";\n        this.$refs.modalForm.disableSubmit = false;\n      },\n      handleEditDone:function (record) {\n        this.$refs.modalForm.editBefore(this.model,this.TaskLinkId,record);\n        this.$refs.modalForm.loadData(this.model.iid)\n        this.$refs.modalForm.title = \"新编辑\";\n        this.$refs.modalForm.disableSubmit = false;\n      },\n      close () {\n        this.$emit('close');\n        this.visible = false;\n      },\n      handleOk () {\n        this.close()\n      },\n      handleCancel () {\n        this.close()\n      },\n      handleTableChange(page) {\n        this.ipagination.current = page.current;\n        this.ipagination.pageSize = page.pageSize;\n        this.loadData();\n      },\n      searchQuery(){\n        for (let i = 0; i < this.buttonList.length ; i++) {\n          if (this.sbtnName==this.buttonList[i].sbtnName) {\n            this.buttonId=this.buttonList[i].iid;\n          }\n        }\n        this.loadData();\n        this.buttonId=\"\";\n      },\n      loadData(){\n        //alert(iid);\n        // this.columns = [];\n        // this.data = [];\n        getAction(this.url.findById,{id:this.model.iid,buttonId:this.buttonId,pageNo:this.ipagination.current,pageSize:this.ipagination.pageSize}).then(res=>{\n          // console.log(\"#############################\");\n         // console.log(res);\n          this.data = res.result.records;\n          this.ipagination.total = res.result.total;\n        })\n      }\n\n\n    }\n  }\n",{"version":3,"sources":["OaProcButtonCatModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA","file":"OaProcButtonCatModal.vue","sourceRoot":"src/views/workflow/modules/proc","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n\r\n    <!-- 查询区域 -->\r\n    <div class=\"table-page-search-wrapper\">\r\n      <a-form layout=\"inline\">\r\n        <a-row :gutter=\"24\">\r\n\r\n          <!--<a-col :md=\"6\" :sm=\"8\">-->\r\n          <!--<a-form-item label=\"主键id\">-->\r\n          <!--<a-input placeholder=\"请输入主键id\" v-model=\"queryParam.iId\"></a-input>-->\r\n          <!--</a-form-item>-->\r\n          <!--</a-col>-->\r\n          <!--<a-col :md=\"6\" :sm=\"8\">-->\r\n          <!--<a-form-item label=\"流程定义KEY\">-->\r\n          <!--<a-input placeholder=\"请输入流程定义KEY\" v-model=\"queryParam.procDefKey\"></a-input>-->\r\n          <!--</a-form-item>-->\r\n          <!--</a-col>-->\r\n          <!--<template v-if=\"toggleSearchStatus\">-->\r\n          <a-col :md=\"12\" :sm=\"8\">\r\n            <a-form-item label=\"按钮名称\">\r\n              <a-input placeholder=\"请输入按钮名称\" v-model=\"sbtnName\"></a-input>\r\n            </a-form-item>\r\n          </a-col>\r\n          <!--</template>-->\r\n          <a-col :md=\"6\" :sm=\"8\">\r\n            <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\r\n              <a-button type=\"primary\" @click=\"searchQuery\" icon=\"search\">查询</a-button>\r\n              <!--<a-button type=\"primary\" @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px\">重置</a-button>-->\r\n              <!--<a @click=\"handleToggleSearch\" style=\"margin-left: 8px\">-->\r\n              <!--{{ toggleSearchStatus ? '收起' : '展开' }}-->\r\n              <!--<a-icon :type=\"toggleSearchStatus ? 'up' : 'down'\"/>-->\r\n              <!--</a>-->\r\n            </span>\r\n          </a-col>\r\n\r\n        </a-row>\r\n      </a-form>\r\n    </div>\r\n\r\n    <a-spin :spinning=\"confirmLoading\" style=\"height: 360px;overflow: auto\">\r\n      <a-form :form=\"form\">\r\n        <a-button  type=\"primary\"  icon=\"plus\" style=\"margin-bottom: 5px\" @click=\"handleEdit1()\">新建</a-button>\r\n        <a-divider type=\"vertical\"/>\r\n       <!-- <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"主键id\">\r\n          <a-input-number v-decorator=\"[ 'iid', validatorRules.iId ]\" />\r\n        </a-form-item>-->\r\n       <!-- <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"流程定义KEY\">\r\n          <a-input placeholder=\"请输入流程定义KEY\" v-decorator=\"['procdefKey', {}]\" />\r\n        </a-form-item>-->\r\n        <!--<a-form-item-->\r\n          <!--:labelCol=\"labelCol\"-->\r\n          <!--:wrapperCol=\"wrapperCol\"-->\r\n          <!--label=\"流程按钮配置名称（概要说明此套配置特点）\">-->\r\n          <!--<a-input placeholder=\"请输入流程按钮配置名称（概要说明此套配置特点）\" v-decorator=\"['sbuttonSetName', {}]\" />-->\r\n        <!--</a-form-item>-->\r\n        <!-- table区域-begin -->\r\n        <div>\r\n\r\n          <a-table\r\n            ref=\"table\"\r\n            size=\"middle\"\r\n            bordered\r\n            rowKey=\"id\"\r\n            :columns=\"columns\"\r\n            :dataSource=\"data\"\r\n            :pagination=\"ipagination\"\r\n            :loading=\"loading\"\r\n            @change=\"handleTableChange\">\r\n            <!--:rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange}\"-->\r\n        <span slot=\"action\" slot-scope=\"text, record\">\r\n          <a @click=\"handleEditDone(record)\">编辑</a>\r\n          <a-divider type=\"vertical\" />\r\n          <!--<a-dropdown>-->\r\n            <!--<a class=\"ant-dropdown-link\">更多 <a-icon type=\"down\" /></a>-->\r\n            <!--<a-menu slot=\"overlay\">-->\r\n              <!--<a-menu-item>-->\r\n                <!--<a-popconfirm title=\"确定删除吗?\" @confirm=\"() => handleDelete(record.iid)\">-->\r\n                  <!--<a>删除</a>-->\r\n                <!--</a-popconfirm>-->\r\n          <a @click=\"beforeConfirm(record.iid)\">删除</a>\r\n              <!--</a-menu-item>-->\r\n            <!--</a-menu>-->\r\n          <!--</a-dropdown>-->\r\n        </span>\r\n\r\n          </a-table>\r\n        </div>\r\n        <!-- table区域-end -->\r\n        <oa-proc-button-new-modal ref=\"modalForm\" @ok=\"modalFormOk()\"></oa-proc-button-new-modal>\r\n\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import OaProcButtonNewModal from './OaProcButtonNewModal'\r\n  import { httpAction } from '@/api/manage'\r\n  import pick from 'lodash.pick'\r\n  import moment from \"moment\"\r\n  import { JeecgListMixin } from '@/mixins/JeecgListMixin'\r\n  import {getAction} from '@/api/manage.js'\r\n\r\n  export default {\r\n    name: \"OaProcButtonModal\",\r\n    mixins:[JeecgListMixin],\r\n    components: {\r\n      OaProcButtonNewModal,\r\n    },\r\n    data () {\r\n      return {\r\n        data:[],\r\n        title:\"操作\",\r\n        visible: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n        ipagination: {\r\n          current: 1,\r\n          pageSize: 10,\r\n          pageSizeOptions: ['10', '20', '30'],\r\n          showTotal: (total, range) => {\r\n            return range[0] + \"-\" + range[1] + \" 共\" + total + \"条\"\r\n          },\r\n          showQuickJumper: true,\r\n          showSizeChanger: true,\r\n          total: 0\r\n        },\r\n        buttonList:'',\r\n        TaskLinkId:'',\r\n        sbtnName:'',\r\n        buttonId:\"\",\r\n        heBingcolumn:'',\r\n        HBcolumn:1,\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        validatorRules:{\r\n        iId:{rules: [{ required: true, message: '请输入主键id!' }]},\r\n        },\r\n        description: '发布类按钮描述管理页面',\r\n        // 表头\r\n        columns: [\r\n          // {\r\n          //   title: '主键id',\r\n          //   align:\"center\",\r\n          //   dataIndex: 'iid'\r\n          // },\r\n          // {\r\n          //   title: '流程按钮关联ID',\r\n          //   align:\"center\",\r\n          //   dataIndex: 'iprocButtonId'\r\n          // },\r\n          {\r\n            title: '顺序号',\r\n            align: \"center\",\r\n            dataIndex: 'iorder'\r\n          },\r\n          {\r\n            title: '任务环节名称',\r\n            align: \"center\",\r\n            dataIndex: 'taskDefKey',\r\n            customRender:(text,row,index)=>{\r\n              const obj = {\r\n                children: text,\r\n                attrs: {}\r\n              };\r\n              if(text==this.heBingcolumn){\r\n                  this.HBcolumn+=1;\r\n              }else {\r\n                this.HBcolumn=1;\r\n              }\r\n              obj.attrs.rowSpan =this.HBcolumn;\r\n              for (let i = 0; i < this.TaskLink.length ; i++) {\r\n                // console.log(\"**********************************\");\r\n                // console.log(text);\r\n                // console.log(this.buttonList[i].iid);\r\n                if (text==this.TaskLink[i].id) {\r\n                  return this.TaskLink[i].name;\r\n                  obj.children=this.TaskLink[i].name\r\n                  return obj;\r\n                }\r\n              }\r\n              //保存上一条数据\r\n              this.heBingcolumn=text;\r\n            }\r\n          },\r\n          {\r\n            title: '按钮名称',\r\n            align: \"center\",\r\n            dataIndex: 'ibuttonId',\r\n            customRender:(text,row,index)=>{\r\n              for (let i = 0; i < this.buttonList.length ; i++) {\r\n                // console.log(\"**********************************\");\r\n                // console.log(text);\r\n                // console.log(this.buttonList[i].iid);\r\n                if (text==this.buttonList[i].iid) {\r\n                  return this.buttonList[i].sbtnName;\r\n                }\r\n              }\r\n            }\r\n          },\r\n          {\r\n            title: '不控制',\r\n            align: \"center\",\r\n            dataIndex: 'ipermitType',\r\n            customRender:(text,row,index)=>{\r\n              if (text==1 || text==\"1\") {\r\n                return \"控制\";\r\n              }else if (text==0 || text==\"0\"){\r\n                return \"不控制\";\r\n              }else {\r\n                return \"---\";\r\n              }\r\n            }\r\n          },\r\n          {\r\n            title: '拟稿人',\r\n            align: \"center\",\r\n            dataIndex: 'iisCreater',\r\n            customRender:(text,row,index)=>{\r\n              if (text==1 || text==\"1\") {\r\n                return \"是\";\r\n              }else if (text==0 || text==\"0\"){\r\n                return \"否\";\r\n              }else {\r\n                return \"---\";\r\n              }\r\n            }\r\n          },\r\n          {\r\n            title: '已办用户',\r\n            align: \"center\",\r\n            dataIndex: 'iisLastsender',\r\n            customRender:(text,row,index)=>{\r\n              if (text==1 || text==\"1\") {\r\n                return \"是\";\r\n              }else if (text==0 || text==\"0\"){\r\n                return \"否\";\r\n              }else {\r\n                return \"---\";\r\n              }\r\n            }\r\n          },\r\n          {\r\n            title: '处理人',\r\n            align: \"center\",\r\n            dataIndex: 'iisTransactors',\r\n            customRender:(text,row,index)=>{\r\n              if (text==1 || text==\"1\") {\r\n                return \"是\";\r\n              }else if (text==0 || text==\"0\"){\r\n                return \"否\";\r\n              }else {\r\n                return \"---\";\r\n              }\r\n            }\r\n          },\r\n          {\r\n            title: '读者',\r\n            align: \"center\",\r\n            dataIndex: 'iisReader',\r\n            customRender:(text,row,index)=>{\r\n              if (text==1 || text==\"1\") {\r\n                return \"是\";\r\n              }else if (text==0 || text==\"0\"){\r\n                return \"否\";\r\n              }else {\r\n                return \"---\";\r\n              }\r\n            }\r\n          },\r\n          {\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            align: \"center\",\r\n            scopedSlots: {customRender: 'action'},\r\n          }\r\n        ],\r\n        url: {\r\n          list: \"/oabuttonset/oaButtonSet/list\",\r\n          findById:\"/oabuttonset/oaButtonSet/findById\",\r\n          delete: \"/oabuttonset/oaButtonSet/delete\",\r\n          deleteBatch: \"/oabuttonset/oaButtonSet/deleteBatch\",\r\n          exportXlsUrl: \"oabuttonset/oaButtonSet/exportXls\",\r\n          importExcelUrl: \"oabuttonset/oaButtonSet/importExcel\",\r\n          add: \"/oaprocbutton/oaProcButton/add\",\r\n          edit: \"/oaprocbutton/oaProcButton/edit\",\r\n          buttonList: \"/oabutton/oaButton/buttonList\",\r\n          TaskLink:\"/wf/process/actsList\"\r\n        },\r\n\r\n      }\r\n    },\r\n    created () {\r\n    },\r\n    methods: {\r\n      //点击删除按钮 前校验\r\n      beforeConfirm(iid){\r\n        // console.log(this.btnSetModel)\r\n        if (iid==null){\r\n          this.$message.warning(\"当前信息不存在\");\r\n        }else {\r\n          let url='oabuttonset/oaButtonSet/verButtonSetDelete';\r\n          getAction(url,{id:iid}).then(res=>{\r\n            if (res.success){\r\n              // this.$message.success(res.message);\r\n              //调用弹框\r\n              this.showConfirm(iid);\r\n            } else {\r\n              this.handleDelete(iid);\r\n            }\r\n          });\r\n        }\r\n      },\r\n      //弹框\r\n      showConfirm(iid){\r\n        let that=this;\r\n        this.$confirm({\r\n          title:'您的某些业务已经使用了这套按钮!!!',\r\n          content:'删除将影响业务办理,你确定还要删除吗?',\r\n          onOk(){\r\n            that.handleDelete(iid);\r\n          },\r\n          onCancel(){\r\n          }\r\n        })\r\n      },\r\n      add (record,TaskLinkId) {\r\n        console.log(\"gagagagagagaga0-----------\");\r\n        console.log(record);\r\n        this.TaskLinkId=TaskLinkId;\r\n        //---------------任务环节列表---------------\r\n        getAction(this.url.TaskLink,{processDefinitionId:TaskLinkId}).then(res=>{\r\n          this.TaskLink = res.result;\r\n        });\r\n        this.sbtnName=\"\";\r\n        // this.$nextTick()\r\n        //按钮列表\r\n        getAction(this.url.buttonList).then(res => {\r\n          this.buttonList = res.result ;\r\n        });\r\n        this.form.resetFields();\r\n        this.model = Object.assign({}, record);\r\n        this.visible = true;\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue(pick(this.model,'iid','procdefKey','sbuttonSetName'))\r\n\t\t  //时间格式化\r\n        });\r\n\r\n      },\r\n      handleEdit1:function () {\r\n        this.$refs.modalForm.edit(this.model,this.TaskLinkId);\r\n        this.$refs.modalForm.loadData(this.model.iid)\r\n        this.$refs.modalForm.title = \"新编辑\";\r\n        this.$refs.modalForm.disableSubmit = false;\r\n      },\r\n      handleEditDone:function (record) {\r\n        this.$refs.modalForm.editBefore(this.model,this.TaskLinkId,record);\r\n        this.$refs.modalForm.loadData(this.model.iid)\r\n        this.$refs.modalForm.title = \"新编辑\";\r\n        this.$refs.modalForm.disableSubmit = false;\r\n      },\r\n      close () {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      },\r\n      handleOk () {\r\n        this.close()\r\n      },\r\n      handleCancel () {\r\n        this.close()\r\n      },\r\n      handleTableChange(page) {\r\n        this.ipagination.current = page.current;\r\n        this.ipagination.pageSize = page.pageSize;\r\n        this.loadData();\r\n      },\r\n      searchQuery(){\r\n        for (let i = 0; i < this.buttonList.length ; i++) {\r\n          if (this.sbtnName==this.buttonList[i].sbtnName) {\r\n            this.buttonId=this.buttonList[i].iid;\r\n          }\r\n        }\r\n        this.loadData();\r\n        this.buttonId=\"\";\r\n      },\r\n      loadData(){\r\n        //alert(iid);\r\n        // this.columns = [];\r\n        // this.data = [];\r\n        getAction(this.url.findById,{id:this.model.iid,buttonId:this.buttonId,pageNo:this.ipagination.current,pageSize:this.ipagination.pageSize}).then(res=>{\r\n          // console.log(\"#############################\");\r\n         // console.log(res);\r\n          this.data = res.result.records;\r\n          this.ipagination.total = res.result.total;\r\n        })\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"]}]}