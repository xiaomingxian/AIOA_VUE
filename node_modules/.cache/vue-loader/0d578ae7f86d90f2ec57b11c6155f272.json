{"remainingRequest":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\QuartzJobModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\QuartzJobModal.vue","mtime":1568535266095},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883562},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858740},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883562},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696677}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { httpAction } from '@/api/manage'\nimport JCron from \"@/components/jeecg/JCron.vue\";\nimport pick from 'lodash.pick'\nimport moment from \"moment\"\n\nexport default {\n  name: \"QuartzJobModal\",\n  components: {\n    JCron\n  },\n  data () {\n    return {\n      title:\"操作\",\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n      cron: {\n        label: '',\n        value: ''\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {\n        cron: {\n          rules: [{\n            required: true, message: '请输入cron表达式!'\n          }]\n        }\n      },\n      url: {\n        add: \"/sys/quartzJob/add\",\n        edit: \"/sys/quartzJob/edit\",\n      },\n    }\n  },\n  created () {\n  },\n  methods: {\n    add () {\n      this.edit({});\n    },\n    edit (record) {\n      this.model = Object.assign({},record);\n      console.log(this.model)\n      this.visible = true;\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model,'jobClassName','cronExpression','parameter','description','status'));\n      });\n\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk () {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        console.log('values',values)\n        if (!err) {\n          // if (typeof values.cronExpression == \"undefined\" || Object.keys(values.cronExpression).length==0 ) {\n          //   this.$message.warning('请输入cron表达式!');\n          //   return false;\n          // }\n\n          that.confirmLoading = true;\n          let httpurl = '';\n          let method = '';\n          if(!this.model.id){\n            httpurl+=this.url.add;\n            method = 'post';\n          }else{\n            httpurl+=this.url.edit;\n            method = 'put';\n          }\n          let formData = Object.assign(this.model, values);\n          //时间格式化\n\n          console.log('提交参数',formData)\n          httpAction(httpurl,formData,method).then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              that.$emit('ok');\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          })\n\n        }\n      })\n    },\n    handleCancel () {\n      this.close()\n    },\n    setCorn(data){\n      console.log('data)',data);\n      this.$nextTick(() => {\n        this.model.cronExpression = data;\n      })\n\n      // console.log(Object.keys(data).length==0);\n      // if (Object.keys(data).length==0) {\n      //   this.$message.warning('请输入cron表达式!');\n      // }\n    },\n    validateCron(rule, value, callback){\n      if(!value){\n        callback()\n      }else if (Object.keys(value).length==0) {\n        callback(\"请输入cron表达式!\");\n      }\n    },\n\n  }\n}\n",{"version":3,"sources":["QuartzJobModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"QuartzJobModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    okText=\"保存并安排任务\"\r\n    cancelText=\"关闭\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"任务类名\"\r\n          hasFeedback >\r\n          <a-input placeholder=\"请输入任务类名\" v-decorator=\"['jobClassName', {rules: [{ required: true, message: '请输入任务类名!' }]}]\" />\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"cron表达式\">\r\n<!--                    <a-input placeholder=\"请输入cron表达式\" v-decorator=\"['cronExpression', {'initialValue':'0/1 * * * * ?',rules: [{ required: true, message: '请输入任务类名!' }]}]\" />-->\r\n<!--                    <a target=\"_blank\" href=\"http://cron.qqe2.com/\">-->\r\n<!--                      <a-icon type=\"share-alt\" />-->\r\n<!--                      在线cron表达式生成-->\r\n<!--                    </a>-->\r\n          <j-cron ref=\"innerVueCron\" v-decorator=\"['cronExpression', {'initialValue':'0/1 * * * * ?',rules: [{ required: true, message: '请输入cron表达式!' }]}]\"  @change=\"setCorn\"></j-cron>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"参数\"\r\n          hasFeedback >\r\n          <a-input placeholder=\"请输入参数\" v-decorator=\"['parameter', {}]\" />\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"描述\"\r\n          hasFeedback >\r\n          <a-input placeholder=\"请输入描述\" v-decorator=\"['description', {}]\" />\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"状态\">\r\n          <a-radio-group buttonStyle=\"solid\" v-decorator=\"[ 'status', {'initialValue':0}]\">\r\n            <a-radio-button :value=\"0\">正常</a-radio-button>\r\n            <a-radio-button :value=\"-1\">停止</a-radio-button>\r\n          </a-radio-group>\r\n        </a-form-item>\r\n\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import { httpAction } from '@/api/manage'\r\n  import JCron from \"@/components/jeecg/JCron.vue\";\r\n  import pick from 'lodash.pick'\r\n  import moment from \"moment\"\r\n\r\n  export default {\r\n    name: \"QuartzJobModal\",\r\n    components: {\r\n      JCron\r\n    },\r\n    data () {\r\n      return {\r\n        title:\"操作\",\r\n        visible: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n        cron: {\r\n          label: '',\r\n          value: ''\r\n        },\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        validatorRules: {\r\n          cron: {\r\n            rules: [{\r\n              required: true, message: '请输入cron表达式!'\r\n            }]\r\n          }\r\n        },\r\n        url: {\r\n          add: \"/sys/quartzJob/add\",\r\n          edit: \"/sys/quartzJob/edit\",\r\n        },\r\n      }\r\n    },\r\n    created () {\r\n    },\r\n    methods: {\r\n      add () {\r\n        this.edit({});\r\n      },\r\n      edit (record) {\r\n        this.model = Object.assign({},record);\r\n        console.log(this.model)\r\n        this.visible = true;\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue(pick(this.model,'jobClassName','cronExpression','parameter','description','status'));\r\n        });\r\n\r\n      },\r\n      close () {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      },\r\n      handleOk () {\r\n        const that = this;\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          console.log('values',values)\r\n          if (!err) {\r\n            // if (typeof values.cronExpression == \"undefined\" || Object.keys(values.cronExpression).length==0 ) {\r\n            //   this.$message.warning('请输入cron表达式!');\r\n            //   return false;\r\n            // }\r\n\r\n            that.confirmLoading = true;\r\n            let httpurl = '';\r\n            let method = '';\r\n            if(!this.model.id){\r\n              httpurl+=this.url.add;\r\n              method = 'post';\r\n            }else{\r\n              httpurl+=this.url.edit;\r\n              method = 'put';\r\n            }\r\n            let formData = Object.assign(this.model, values);\r\n            //时间格式化\r\n\r\n            console.log('提交参数',formData)\r\n            httpAction(httpurl,formData,method).then((res)=>{\r\n              if(res.success){\r\n                that.$message.success(res.message);\r\n                that.$emit('ok');\r\n              }else{\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n              that.close();\r\n            })\r\n\r\n          }\r\n        })\r\n      },\r\n      handleCancel () {\r\n        this.close()\r\n      },\r\n      setCorn(data){\r\n        console.log('data)',data);\r\n        this.$nextTick(() => {\r\n          this.model.cronExpression = data;\r\n        })\r\n\r\n        // console.log(Object.keys(data).length==0);\r\n        // if (Object.keys(data).length==0) {\r\n        //   this.$message.warning('请输入cron表达式!');\r\n        // }\r\n      },\r\n      validateCron(rule, value, callback){\r\n        if(!value){\r\n          callback()\r\n        }else if (Object.keys(value).length==0) {\r\n          callback(\"请输入cron表达式!\");\r\n        }\r\n      },\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}