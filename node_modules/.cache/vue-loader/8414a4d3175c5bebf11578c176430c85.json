{"remainingRequest":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\SysAnnouncementModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\SysAnnouncementModal.vue","mtime":1568535267275},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883562},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858740},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883562},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696677}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { httpAction } from '@/api/manage'\nimport pick from 'lodash.pick'\nimport { getAction } from '@/api/manage'\nimport JDate from '@/components/jeecg/JDate'\nimport JEditor from '@/components/jeecg/JEditor'\nimport SelectUserListModal from \"./SelectUserListModal\";\nimport moment from 'moment'\n\nexport default {\n  components: { JEditor, JDate, SelectUserListModal},\n  name: \"SysAnnouncementModal\",\n  data () {\n    return {\n      title:\"操作\",\n      visible: false,\n      disableSubmit:false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules:{\n        title:{rules: [{ required: true, message: '请输入标题!' }]},\n        msgCategory:{rules: [{ required: true, message: '请选择消息类型!' }]},\n        msgType:{rules: [{ required: true, message: '请选择通告对象类型!' }]},\n        endTime:{rules:[{validator: this.endTimeValidate}]},\n        startTime:{rules:[{validator: this.startTimeValidate}]}\n      },\n      url: {\n        queryByIds: \"/sys/user/queryByIds\",\n        add: \"/sys/annountCement/add\",\n        edit: \"/sys/annountCement/edit\",\n      },\n      userType:false,\n      userIds:[],\n      selectedUser:[],\n      disabled:false,\n      msgContent:\"\",\n    }\n  },\n  created () {\n  },\n  methods: {\n    add () {\n      this.edit({});\n    },\n    edit (record) {\n      this.form.resetFields();\n      this.model = {}\n      this.disable = false;\n      this.visible = true;\n      this.getUser(record);\n    },\n    getUser(record){\n      this.model = Object.assign({}, record);\n      // 指定用户\n      if(record&&record.msgType === \"USER\"){\n        this.userType =  true;\n        this.userIds = record.userIds;\n        getAction(this.url.queryByIds,{userIds:this.userIds}).then((res)=>{\n          if(res.success){\n            for(var i=0;i<res.result.length;i++){\n              this.selectedUser.push(res.result[i].realname);\n            }\n            this.$refs.UserListModal.edit(res.result,this.userIds);\n          }\n        });\n      }\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model,'endTime','startTime','titile','msgContent','sender','priority','msgCategory','msgType','sendStatus','delFlag'))\n      });\n    },\n    close () {\n      this.$emit('close');\n      this.selectedUser = [];\n      this.visible = false;\n    },\n    handleOk () {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let httpurl = '';\n          let method = '';\n          if(!this.model.id){\n            httpurl+=this.url.add;\n            method = 'post';\n          }else{\n            httpurl+=this.url.edit;\n             method = 'put';\n          }\n          let formData = Object.assign(this.model, values);\n          if(this.userType){\n            formData.userIds =  this.userIds;\n          }\n          console.log(formData)\n          httpAction(httpurl,formData,method).then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              that.$emit('ok');\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          })\n\n\n\n        }\n      })\n    },\n    handleCancel () {\n      this.visible = false;\n      this.$emit('close');\n      this.resetUser();\n    },\n    resetUser (){\n      this.userType =  false;\n      this.userIds = [];\n      this.selectedUser = [];\n      this.disabled = false;\n      this.$refs.UserListModal.edit(null,null);\n    },\n    selectUserIds() {\n      this.$refs.UserListModal.add(this.selectedUser,this.userIds);\n    },\n    chooseMsgType(value) {\n      if(\"USER\" == value) {\n        this.userType = true;\n      } else {\n        this.userType = false;\n        this.selectedUser = [];\n        this.userIds = [];\n      }\n    },\n    // 子modal回调\n    choseUser:function(userList){\n      this.selectedUser = [];\n      this.userIds = [];\n      for(var i=0;i<userList.length;i++){\n        this.selectedUser.push(userList[i].realname);\n        this.userIds += userList[i].id+\",\"\n      }\n    },\n    startTimeValidate(rule,value,callback){\n      let endTime = this.form.getFieldValue(\"endTime\")\n      if(!value || !endTime){\n        callback()\n      }else if(moment(value).isBefore(endTime)){\n        callback()\n      }else{\n        callback(\"开始时间需小于结束时间\")\n      }\n    },\n    endTimeValidate(rule,value,callback){\n      let startTime = this.form.getFieldValue(\"startTime\")\n      if(!value || !startTime){\n        callback()\n      }else if(moment(startTime).isBefore(value)){\n        callback()\n      }else{\n        callback(\"结束时间需大于开始时间\")\n      }\n    }\n\n  }\n}\n",{"version":3,"sources":["SysAnnouncementModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"SysAnnouncementModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    :okButtonProps=\"{ props: {disabled: disabled} }\"\r\n    cancelText=\"关闭\">\r\n    \r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n      \r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"标题\">\r\n          <a-input placeholder=\"请输入标题\" v-decorator=\"['titile', validatorRules.title]\" :readOnly=\"disableSubmit\" />\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"消息类型\">\r\n          <a-select\r\n            v-decorator=\"[ 'msgCategory', validatorRules.msgCategory]\"\r\n            placeholder=\"请选择消息类型\"\r\n            :disabled=\"disableSubmit\">\r\n            <a-select-option value=\"1\">通知公告</a-select-option>\r\n            <a-select-option value=\"2\">系统消息</a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"内容\">\r\n          <j-editor v-decorator=\"[ 'msgContent', {} ]\" triggerChange></j-editor>\r\n        </a-form-item>\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"开始时间\">\r\n          <j-date v-decorator=\"[ 'startTime', validatorRules.startTime]\" placeholder=\"请选择开始时间\" showTime dateFormat=\"YYYY-MM-DD HH:mm:ss\"></j-date>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"结束时间\">\r\n          <j-date v-decorator=\"[ 'endTime', validatorRules.endTime]\" placeholder=\"请选择结束时间\" showTime dateFormat=\"YYYY-MM-DD HH:mm:ss\"></j-date>\r\n        </a-form-item>\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"优先级\">\r\n          <a-select\r\n            v-decorator=\"[ 'priority', {}]\"\r\n            placeholder=\"请选择优先级\"\r\n            :disabled=\"disableSubmit\">\r\n            <a-select-option value=\"L\">低</a-select-option>\r\n            <a-select-option value=\"M\">中</a-select-option>\r\n            <a-select-option value=\"H\">高</a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"通告对象类型\">\r\n          <a-select\r\n            v-decorator=\"[ 'msgType', validatorRules.msgType]\"\r\n            placeholder=\"请选择通告对象类型\"\r\n            :disabled=\"disableSubmit\"\r\n            @change=\"chooseMsgType\">\r\n            <a-select-option value=\"USER\">指定用户</a-select-option>\r\n            <a-select-option value=\"ALL\">全体用户</a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"指定用户\"\r\n          v-if=\"userType\">\r\n          <a-select\r\n            mode=\"multiple\"\r\n            style=\"width: 100%\"\r\n            placeholder=\"请选择用户\"\r\n            v-model=\"selectedUser\"\r\n            @dropdownVisibleChange=\"selectUserIds\">\r\n          </a-select>\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-spin>\r\n    <select-user-list-modal ref=\"UserListModal\" @choseUser=\"choseUser\"></select-user-list-modal>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import { httpAction } from '@/api/manage'\r\n  import pick from 'lodash.pick'\r\n  import { getAction } from '@/api/manage'\r\n  import JDate from '@/components/jeecg/JDate'\r\n  import JEditor from '@/components/jeecg/JEditor'\r\n  import SelectUserListModal from \"./SelectUserListModal\";\r\n  import moment from 'moment'\r\n\r\n  export default {\r\n    components: { JEditor, JDate, SelectUserListModal},\r\n    name: \"SysAnnouncementModal\",\r\n    data () {\r\n      return {\r\n        title:\"操作\",\r\n        visible: false,\r\n        disableSubmit:false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        validatorRules:{\r\n          title:{rules: [{ required: true, message: '请输入标题!' }]},\r\n          msgCategory:{rules: [{ required: true, message: '请选择消息类型!' }]},\r\n          msgType:{rules: [{ required: true, message: '请选择通告对象类型!' }]},\r\n          endTime:{rules:[{validator: this.endTimeValidate}]},\r\n          startTime:{rules:[{validator: this.startTimeValidate}]}\r\n        },\r\n        url: {\r\n          queryByIds: \"/sys/user/queryByIds\",\r\n          add: \"/sys/annountCement/add\",\r\n          edit: \"/sys/annountCement/edit\",\r\n        },\r\n        userType:false,\r\n        userIds:[],\r\n        selectedUser:[],\r\n        disabled:false,\r\n        msgContent:\"\",\r\n      }\r\n    },\r\n    created () {\r\n    },\r\n    methods: {\r\n      add () {\r\n        this.edit({});\r\n      },\r\n      edit (record) {\r\n        this.form.resetFields();\r\n        this.model = {}\r\n        this.disable = false;\r\n        this.visible = true;\r\n        this.getUser(record);\r\n      },\r\n      getUser(record){\r\n        this.model = Object.assign({}, record);\r\n        // 指定用户\r\n        if(record&&record.msgType === \"USER\"){\r\n          this.userType =  true;\r\n          this.userIds = record.userIds;\r\n          getAction(this.url.queryByIds,{userIds:this.userIds}).then((res)=>{\r\n            if(res.success){\r\n              for(var i=0;i<res.result.length;i++){\r\n                this.selectedUser.push(res.result[i].realname);\r\n              }\r\n              this.$refs.UserListModal.edit(res.result,this.userIds);\r\n            }\r\n          });\r\n        }\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue(pick(this.model,'endTime','startTime','titile','msgContent','sender','priority','msgCategory','msgType','sendStatus','delFlag'))\r\n        });\r\n      },\r\n      close () {\r\n        this.$emit('close');\r\n        this.selectedUser = [];\r\n        this.visible = false;\r\n      },\r\n      handleOk () {\r\n        const that = this;\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true;\r\n            let httpurl = '';\r\n            let method = '';\r\n            if(!this.model.id){\r\n              httpurl+=this.url.add;\r\n              method = 'post';\r\n            }else{\r\n              httpurl+=this.url.edit;\r\n               method = 'put';\r\n            }\r\n            let formData = Object.assign(this.model, values);\r\n            if(this.userType){\r\n              formData.userIds =  this.userIds;\r\n            }\r\n            console.log(formData)\r\n            httpAction(httpurl,formData,method).then((res)=>{\r\n              if(res.success){\r\n                that.$message.success(res.message);\r\n                that.$emit('ok');\r\n              }else{\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n              that.close();\r\n            })\r\n\r\n\r\n\r\n          }\r\n        })\r\n      },\r\n      handleCancel () {\r\n        this.visible = false;\r\n        this.$emit('close');\r\n        this.resetUser();\r\n      },\r\n      resetUser (){\r\n        this.userType =  false;\r\n        this.userIds = [];\r\n        this.selectedUser = [];\r\n        this.disabled = false;\r\n        this.$refs.UserListModal.edit(null,null);\r\n      },\r\n      selectUserIds() {\r\n        this.$refs.UserListModal.add(this.selectedUser,this.userIds);\r\n      },\r\n      chooseMsgType(value) {\r\n        if(\"USER\" == value) {\r\n          this.userType = true;\r\n        } else {\r\n          this.userType = false;\r\n          this.selectedUser = [];\r\n          this.userIds = [];\r\n        }\r\n      },\r\n      // 子modal回调\r\n      choseUser:function(userList){\r\n        this.selectedUser = [];\r\n        this.userIds = [];\r\n        for(var i=0;i<userList.length;i++){\r\n          this.selectedUser.push(userList[i].realname);\r\n          this.userIds += userList[i].id+\",\"\r\n        }\r\n      },\r\n      startTimeValidate(rule,value,callback){\r\n        let endTime = this.form.getFieldValue(\"endTime\")\r\n        if(!value || !endTime){\r\n          callback()\r\n        }else if(moment(value).isBefore(endTime)){\r\n          callback()\r\n        }else{\r\n          callback(\"开始时间需小于结束时间\")\r\n        }\r\n      },\r\n      endTimeValidate(rule,value,callback){\r\n        let startTime = this.form.getFieldValue(\"startTime\")\r\n        if(!value || !startTime){\r\n          callback()\r\n        }else if(moment(startTime).isBefore(value)){\r\n          callback()\r\n        }else{\r\n          callback(\"结束时间需大于开始时间\")\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}