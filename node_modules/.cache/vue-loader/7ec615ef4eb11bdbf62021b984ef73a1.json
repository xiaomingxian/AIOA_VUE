{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\buttons\\CreateUserOpinionModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\buttons\\CreateUserOpinionModal.vue","mtime":1574730167002},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1570779245522},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { httpAction } from '@/api/manage'\nimport pick from 'lodash.pick'\nimport { getAction } from '@/api/manage'\n  export default {\n      name: \"CreateUserOpinionModal\",\n    data () {\n      return {\n        title:\"操作\",\n        visible: false,\n        model: {},\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n        confirmLoading: false,\n        form: this.$form.createForm(this),\n        validatorRules:{\n        },\n        url: {\n          add: \"/sys_user_opinion/sysUserOpinion/add\"\n        },\n\n      }\n    },\n    created () {\n    },\n    methods: {\n      show() {\n        this.form.resetFields();\n        this.model = Object.assign({}, {});\n        this.visible = true;\n        this.$nextTick(() => {\n          this.form.setFieldsValue(pick(this.model,'iOrder','sContent'))\n        });\n      },\n      handleOk() {\n        const that = this;\n        // 触发表单验证\n        this.form.validateFields((err, values) => {\n          if (!err) {\n            that.confirmLoading = true;\n            let httpurl = '';\n            let method = 'post'\n            httpurl += this.url.add;\n            let formData = Object.assign(this.model, values);\n            console.log(formData)\n            httpAction(httpurl, formData,method).then((res) => {\n              if (res.success) {\n                that.$message.success(res.message);\n                that.$emit('ok');\n              } else {\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n              that.close();\n            })\n\n          }\n        })\n      },\n\n      close () {\n        this.$emit('close');\n        this.visible = false;\n      },\n\n      handleCancel () {\n        this.close()\n      },\n\n\n    }\n  }\n",{"version":3,"sources":["CreateUserOpinionModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA","file":"CreateUserOpinionModal.vue","sourceRoot":"src/views/buttons","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    @ok=\"handleOk\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"意见内容\">\r\n          <a-input  v-decorator=\"['scontent',{}]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"序号\">\r\n          <a-input v-decorator=\"['iorder',{}]\"/>\r\n        </a-form-item>\r\n\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import { httpAction } from '@/api/manage'\r\n  import pick from 'lodash.pick'\r\n  import { getAction } from '@/api/manage'\r\n    export default {\r\n        name: \"CreateUserOpinionModal\",\r\n      data () {\r\n        return {\r\n          title:\"操作\",\r\n          visible: false,\r\n          model: {},\r\n          labelCol: {\r\n            xs: { span: 24 },\r\n            sm: { span: 5 },\r\n          },\r\n          wrapperCol: {\r\n            xs: { span: 24 },\r\n            sm: { span: 16 },\r\n          },\r\n          confirmLoading: false,\r\n          form: this.$form.createForm(this),\r\n          validatorRules:{\r\n          },\r\n          url: {\r\n            add: \"/sys_user_opinion/sysUserOpinion/add\"\r\n          },\r\n\r\n        }\r\n      },\r\n      created () {\r\n      },\r\n      methods: {\r\n        show() {\r\n          this.form.resetFields();\r\n          this.model = Object.assign({}, {});\r\n          this.visible = true;\r\n          this.$nextTick(() => {\r\n            this.form.setFieldsValue(pick(this.model,'iOrder','sContent'))\r\n          });\r\n        },\r\n        handleOk() {\r\n          const that = this;\r\n          // 触发表单验证\r\n          this.form.validateFields((err, values) => {\r\n            if (!err) {\r\n              that.confirmLoading = true;\r\n              let httpurl = '';\r\n              let method = 'post'\r\n              httpurl += this.url.add;\r\n              let formData = Object.assign(this.model, values);\r\n              console.log(formData)\r\n              httpAction(httpurl, formData,method).then((res) => {\r\n                if (res.success) {\r\n                  that.$message.success(res.message);\r\n                  that.$emit('ok');\r\n                } else {\r\n                  that.$message.warning(res.message);\r\n                }\r\n              }).finally(() => {\r\n                that.confirmLoading = false;\r\n                that.close();\r\n              })\r\n\r\n            }\r\n          })\r\n        },\r\n\r\n        close () {\r\n          this.$emit('close');\r\n          this.visible = false;\r\n        },\r\n\r\n        handleCancel () {\r\n          this.close()\r\n        },\r\n\r\n\r\n      }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}