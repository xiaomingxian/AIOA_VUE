{"remainingRequest":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\tools\\UserPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\tools\\UserPassword.vue","mtime":1568535219332},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883562},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858740},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883562},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696677}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { putAction } from '@/api/manage'\n\nexport default {\n  name: \"UserPassword\",\n  data () {\n    return {\n      title:\"修改密码\",\n      modalWidth:800,\n      visible: false,\n      confirmLoading: false,\n      validatorRules:{\n        oldpassword:{\n          rules: [{\n            required: true, message: '请输入旧密码!',\n          }],\n        },\n        password:{\n          rules: [{\n            required: true, message: '请输入新密码!',\n          }, {\n            validator: this.validateToNextPassword,\n          }],\n        },\n        confirmpassword:{\n          rules: [{\n            required: true, message: '请确认新密码!',\n          }, {\n            validator: this.compareToFirstPassword,\n          }],\n        }\n      },\n      confirmDirty:false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n\n      form:this.$form.createForm(this),\n      url: \"sys/user/updatePassword\",\n      username:\"\",\n    }\n  },\n  methods: {\n    show(uname){\n      if(!uname){\n        this.$message.warning(\"当前系统无登陆用户!\");\n        return\n      }else{\n        this.username = uname\n        this.form.resetFields();\n        this.visible = true;\n      }\n    },\n    handleCancel () {\n      this.close()\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false;\n      this.selectedRole = [];\n    },\n    handleOk () {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let params = Object.assign({username:this.username},values)\n          console.log(\"修改密码提交数据\",params)\n          putAction(this.url,params).then((res)=>{\n            if(res.success){\n              console.log(res)\n              that.$message.success(res.message);\n              that.close();\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n          })\n        }\n      })\n    },\n    validateToNextPassword  (rule, value, callback) {\n      const form = this.form;\n      if (value && this.confirmDirty) {\n        form.validateFields(['confirm'], { force: true })\n      }\n      callback();\n    },\n    compareToFirstPassword  (rule, value, callback) {\n      const form = this.form;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入的密码不一样！');\n      } else {\n        callback()\n      }\n    },\n    handleConfirmBlur  (e) {\n      const value = e.target.value\n      this.confirmDirty = this.confirmDirty || !!value\n    }\n\n  }\n}\n",{"version":3,"sources":["UserPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"UserPassword.vue","sourceRoot":"src/components/tools","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"modalWidth\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\"\r\n  >\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"旧密码\">\r\n          <a-input type=\"password\" placeholder=\"请输入旧密码\" v-decorator=\"[ 'oldpassword', validatorRules.oldpassword]\" />\r\n        </a-form-item>\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"新密码\">\r\n          <a-input type=\"password\" placeholder=\"请输入新密码\" v-decorator=\"[ 'password', validatorRules.password]\" />\r\n        </a-form-item>\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"确认新密码\">\r\n          <a-input type=\"password\" @blur=\"handleConfirmBlur\" placeholder=\"请确认新密码\" v-decorator=\"[ 'confirmpassword', validatorRules.confirmpassword]\"/>\r\n        </a-form-item>\r\n\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n\r\n  import { putAction } from '@/api/manage'\r\n\r\n  export default {\r\n    name: \"UserPassword\",\r\n    data () {\r\n      return {\r\n        title:\"修改密码\",\r\n        modalWidth:800,\r\n        visible: false,\r\n        confirmLoading: false,\r\n        validatorRules:{\r\n          oldpassword:{\r\n            rules: [{\r\n              required: true, message: '请输入旧密码!',\r\n            }],\r\n          },\r\n          password:{\r\n            rules: [{\r\n              required: true, message: '请输入新密码!',\r\n            }, {\r\n              validator: this.validateToNextPassword,\r\n            }],\r\n          },\r\n          confirmpassword:{\r\n            rules: [{\r\n              required: true, message: '请确认新密码!',\r\n            }, {\r\n              validator: this.compareToFirstPassword,\r\n            }],\r\n          }\r\n        },\r\n        confirmDirty:false,\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n\r\n        form:this.$form.createForm(this),\r\n        url: \"sys/user/updatePassword\",\r\n        username:\"\",\r\n      }\r\n    },\r\n    methods: {\r\n      show(uname){\r\n        if(!uname){\r\n          this.$message.warning(\"当前系统无登陆用户!\");\r\n          return\r\n        }else{\r\n          this.username = uname\r\n          this.form.resetFields();\r\n          this.visible = true;\r\n        }\r\n      },\r\n      handleCancel () {\r\n        this.close()\r\n      },\r\n      close () {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n        this.disableSubmit = false;\r\n        this.selectedRole = [];\r\n      },\r\n      handleOk () {\r\n        const that = this;\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true;\r\n            let params = Object.assign({username:this.username},values)\r\n            console.log(\"修改密码提交数据\",params)\r\n            putAction(this.url,params).then((res)=>{\r\n              if(res.success){\r\n                console.log(res)\r\n                that.$message.success(res.message);\r\n                that.close();\r\n              }else{\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n            })\r\n          }\r\n        })\r\n      },\r\n      validateToNextPassword  (rule, value, callback) {\r\n        const form = this.form;\r\n        if (value && this.confirmDirty) {\r\n          form.validateFields(['confirm'], { force: true })\r\n        }\r\n        callback();\r\n      },\r\n      compareToFirstPassword  (rule, value, callback) {\r\n        const form = this.form;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n          callback('两次输入的密码不一样！');\r\n        } else {\r\n          callback()\r\n        }\r\n      },\r\n      handleConfirmBlur  (e) {\r\n        const value = e.target.value\r\n        this.confirmDirty = this.confirmDirty || !!value\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n\r\n"]}]}