{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\oaBus\\modules\\BusFunctionPermitModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\oaBus\\modules\\BusFunctionPermitModal.vue","mtime":1578204447552},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1570779245522},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {httpAction} from '@/api/manage'\nimport {getAction} from '@/api/manage'\nimport pick from 'lodash.pick'\n// 引入搜索部门弹出框的组件\nimport departWindow from '../../system/modules/DepartWindow'\nimport {ACCESS_TOKEN} from \"@/store/mutation-types\"\nimport {addUser, editUser, queryUserRole, queryall} from '@/api/api'\nimport {disabledAuthFilter} from \"@/utils/authFilter\"\nimport {duplicateCheck} from '@/api/api'\nimport JSelectUserByDep from '@/components/jeecgbiz/JSelectUserByDep'\n\nimport Vue from 'vue'\n\n\nexport default {\n  name: \"BusFunctionPermitModal\",\n  components: {\n    departWindow,\n    JSelectUserByDep\n  },\n  data() {\n    return {\n      isno:[\n        {typename:'所有人',value:'0'},\n        {typename:'角色',value:'1'},\n        {typename:'部门',value:'2'},\n        {typename:'人员',value:'3'},\n      ],\n      // 范围类型\n      spermitType:0,\n      selectvalue:1,  //是否选中\n      itypeName:'',// 角色或人员或部门的名字\n      userRealName:'',\n      title: \"操作\",\n      visible: false,\n      model: {\n        itypeId:'',//角色或人员或部门的id\n        iid:'',\n        ibusId:''\n      },\n      labelCol: {\n        xs: {span: 24},\n        sm: {span: 5},\n      },\n      wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 16},\n      },\n      selectData: [],\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {\n        iId: {rules: [{required: true, message: '请输入主键id!'}]},\n      },\n      selectedModel: null,\n      selectedFunction: null,\n      typeModel: null,\n      roleList: [],\n      selectedRole: '',\n      selectedUser: '',\n      userList: [],\n      selectedDepart: [],\n      modelData: [],\n      functionList: [],\n      functionData: [],\n      //部门控件\n      departDisabled: false, //是否是我的部门调用该页面\n      roleDisabled: false, //是否是角色维护调用该页面\n      modalWidth: 800,\n      drawerWidth: 700,\n      modaltoggleFlag: true,\n      confirmDirty: false,\n      selectedDepartKeys: [], //保存用户选择部门id\n      checkedDepartKeys: [],\n      checkedDepartNames: [], // 保存部门的名称 =>title\n      checkedDepartNameString: \"\", // 保存部门的名称 =>title\n      userId: \"\", //保存用户id\n      disableSubmit: false,\n      userDepartModel: {userId: '', departIdList: []}, // 保存SysUserDepart的用户部门中间表数据需要的对象\n\n      url: {\n        add: \"/oaBus/busFunctionPermit/add\",\n        edit: \"/oaBus/busFunctionPermit/edit\",\n      },\n\n      //用来判断弹框是用来新增或是编辑两种状态\n      isadd:false\n    }\n  },\n  created() {\n    this.initialRoleList();\n    this.initialUserList();\n    const token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\"X-Access-Token\": token}\n  },\n  watch: {\n    typeModel: 'initialRoleList',\n    typeModel: 'initialUserList',\n  },\n  methods: {\n\n    senUserId(ids) {\n      this.model.itypeId = ids.toString();\n    },\n    // 获取范围类型\n    getTypeVal(e){\n      this.spermitType = e;\n      if(e=='1'){\n        this.selectedRole = '';\n      }else if (e=='3'){\n        this.userRealName = '';\n      }\n    },\n    //接收 父级传来的参数\n    add1(ibusId,sname,data) {\n      this.isadd = true;\n      this.model.ibusId = ibusId;\n      //判断类型为非零时  不可选所有人\n      if(data.length != 0){\n        data.forEach((item)=>{\n          if(item.spermitType!=0){\n            this.isno= [\n              // {typename:'所有人',value:'0'},\n              {typename:'角色',value:'1'},\n              {typename:'部门',value:'2'},\n              {typename:'人员',value:'3'}\n            ]\n          }else{\n            this.isno= [\n              {typename:'所有人',value:'0'},\n              {typename:'角色',value:'1'},\n              {typename:'部门',value:'2'},\n              {typename:'人员',value:'3'}\n            ]\n          }\n        })\n      }else{\n        this.isno= [\n          {typename:'所有人',value:'0'},\n          {typename:'角色',value:'1'},\n          {typename:'部门',value:'2'},\n          {typename:'人员',value:'3'}\n        ]\n      }\n      this.visible = true\n      this.title=sname;\n      this.form.resetFields();\n      //this.model = Object.assign({}, record2);\n\n    },\n    //获取部门自组建返回的对象\n    sendPartsList(partsLists){\n      // this.checkedDepartcalendarNameString\n      console.log(partsLists);\n      let itypeIdLists = '';\n      let itypeNanesLists = '';\n      if(Array.isArray(partsLists)){\n        // this.checkedDepartNameString\n        let itypeIdLists = '';\n        let itypeNanesLists = '';\n        partsLists.map((part)=>{\n          itypeNanesLists+=part.title+'  ';\n          itypeIdLists+=part.value+',';\n        });\n        this.model.itypeId =itypeIdLists;\n        this.checkedDepartNameString = itypeNanesLists;\n      }else{\n        this.model.itypeId =partsLists.value;\n        this.checkedDepartNameString = partsLists.title;\n\n      }\n    },\n    //初始换数据渲染\n    edit1(record,isedit) {\n\n      if(isedit){\n        this.isno= [\n          {typename:'所有人',value:'0'},\n          {typename:'角色',value:'1'},\n          {typename:'部门',value:'2'},\n          {typename:'人员',value:'3'}\n        ]\n      }\n      this.isadd = false;\n      console.log(record);\n      this.spermitType = record.spermitType;\n      this.title=record.sname;\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.selectvalue = Number(this.model.sdisplay);\n      //范围类型\n      this.$nextTick(() => {\n        this.typeModel = this.model.spermitType;\n        if( this.typeModel=='1'){\n          setTimeout(()=>{\n            this.selectedRole = this.model.itypeName;\n            console.log(this.selectedRole)\n          },1000)\n        }else if(this.typeModel=='3'){\n          this.userRealName = this.model.itypeName;\n\n        }else if(this.typeModel=='2'){\n          this.checkedDepartNameString = this.model.itypeName;\n          console.log(this.model.itypeId);\n\n        }\n\n\n      });\n    },\n    initialRoleList: function () {\n      let url = \"/oaBus/busFunctionPermit/findRoleByCode\";\n      getAction(url).then((res) => {\n        //console.log(res.result);\n        this.roleList = res.result;\n      })\n    },\n    initialUserList: function () {\n\n      let url = \"/oaBus/busFunctionPermit/userList\";\n      getAction(url).then((res) => {\n        //console.log(res.result);\n        this.userList = res.result;\n      })\n    },\n    loadCheckDeparts() {\n      let that = this;\n      if (!that.userId) {\n        return\n      }\n      getAction(that.url.userWithDepart, {userId: that.userId}).then((res) => {\n        that.checkedDepartNames = [];\n        if (res.success) {\n          for (let i = 0; i < res.result.length; i++) {\n            that.checkedDepartNames.push(res.result[i].title);\n            this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\n            that.checkedDepartKeys.push(res.result[i].key);\n          }\n          that.userDepartModel.departIdList = that.checkedDepartKeys\n        } else {\n          console.log(res.message);\n        }\n      })\n    },\n    // 搜索用户对应的部门API\n    onSearch() {\n      // console.log(this.checkedDepartKeys);\n      this.$refs.departWindow.add(this.model.itypeId, this.isadd);\n\n    },\n    // 获取用户对应部门弹出框提交给返回的数据\n    modalFormOk(formData) {\n      this.checkedDepartNames = [];\n      this.selectedDepartKeys = [];\n      this.checkedDepartNameString = '';\n      this.userId = formData.userId;\n      this.userDepartModel.userId = formData.userId;\n      for (let i = 0; i < formData.departIdList.length; i++) {\n        this.selectedDepartKeys.push(formData.departIdList[i].key);\n        this.checkedDepartNames.push(formData.departIdList[i].title);\n        this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\n      }\n      this.userDepartModel.departIdList = this.selectedDepartKeys;\n\n      this.checkedDepartKeys = this.selectedDepartKeys  //更新当前的选择keys\n      console.log(\"=====>\" + this.checkedDepartKeys);\n    },\n    refresh() {\n      this.selectedDepartKeys = [];\n      this.checkedDepartKeys = [];\n      this.checkedDepartNames = [];\n      this.checkedDepartNameString = \"\";\n      this.userId = \"\"\n    },\n    close() {\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false;\n      this.userDepartModel = {userId: '', departIdList: []};\n      this.checkedDepartNames = [];\n      this.checkedDepartNameString = '';\n      this.checkedDepartKeys = [];\n      this.selectedDepartKeys = [];\n    },\n    //获取人员下拉框 所选用户id\n\n\n\n    //获取用户点击的是否单选\n    getisnot(e){\n      console.log(e);\n      this.selectvalue = e.target.value;\n\n    },\n    handleOk() {\n      if(!this.typeModel){\n        this.$message.error('请选择一个类型！');\n        return;\n      }else{\n        if(this.typeModel=='1'&&this.selectedRole==''){\n          this.$message.error('请选择一个角色！');\n          return;\n\n        } if(this.typeModel=='2'&&this.checkedDepartNameString==''){\n          this.$message.error('请选择一个部门！');\n          return;\n        } if(this.typeModel=='3'&&this.userRealName==''){\n          this.$message.error('请选择一个人员！');\n          return;\n        }\n      }\n\n      this.typeModel = null;\n      const that = this;\n\n      //提交对象    this.userDepartModel.departIdList= this.selectedDepartKeys.substring(0,this.selectedDepartKeys.length-1);\n      let formData = {\n        'iid':this.model.iid,\n        'ibusId':this.model.ibusId,\n        'spermitType':this.spermitType,\n        'itypeId':this.model.itypeId,\n        'sdisplay':JSON.stringify(this.selectvalue)\n\n      }\n      console.log(formData)\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let httpurl = '';\n          let method = '';\n          if (this.isadd) {\n            httpurl += this.url.add;\n            method = 'post';\n            formData.iid = '';\n\n          } else {\n            httpurl += this.url.edit;\n            method = 'put';\n          }\n          httpAction(httpurl, formData, method).then((res) => {\n            if (res.success) {\n              that.$message.success(res.message);\n              //告诉父级组件我已关闭  关闭后刷新父级列表\n              that.$emit('submit',true);\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            //提交后清空记录\n            this.typeModel = '';\n            this.selectedRole = '';\n            this.userRealName = '';\n           // this.selectvalue = '';\n            //关闭中间角色 人员选框\n            this.spermitType = 0;\n            this.selectvalue = 1;\n            that.close();\n          })\n\n\n        }\n      })\n    },\n    handleCancel() {\n      this.typeModel = null;\n      this.selectedRole = '';\n      this.userRealName = '';\n      this.spermitType = 0;\n      this.selectvalue = 1;\n      this.close()\n    }\n\n  }\n}\n",{"version":3,"sources":["BusFunctionPermitModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"BusFunctionPermitModal.vue","sourceRoot":"src/views/oaBus/modules","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n\r\n      <!--  <a-form-item\r\n        :labelCol=\"labelCol\"resetFields\r\n        :wrapperCol=\"wrapperCol\"\r\n        label=\"业务功能id\">\r\n        <a-input placeholder=\"\" v-decorator=\"['ibusId', {}]\" />\r\n      </a-form-item>-->\r\n        <!-- v-model=\"iid\"-->\r\n\r\n      <a-form-item\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\"\r\n        label=\"权限类型\">\r\n        <a-select style=\"width: 200px;\" v-model=\"typeModel\"\r\n                  @change=\"getTypeVal\"\r\n                  placeholder=\"权限类型\"\r\n                  :disabled=\"disableSubmit\"\r\n        >\r\n\r\n          <a-select-option   v-for=\"(item,index) in isno\" :value=\"item.value\">{{item.typename}}</a-select-option>\r\n\r\n        </a-select>\r\n      </a-form-item>\r\n        <a-form-item\r\n          v-if=\"spermitType==1\"\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"角色\">\r\n          <a-select style=\"width: 200px;\" v-model=\"selectedRole\" @change=\"getPeople\" >\r\n            <a-select-option v-for=\"(role,roleindex) in roleList\" :key=\"roleindex\" :value=\"role.id\">\r\n              {{ role.roleName }}\r\n            </a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        <!--部门分配-->\r\n        <div v-else-if=\"spermitType==2\">\r\n          <a-form-item  label=\"部门分配\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\"\r\n                       v-show=\"!departDisabled\" v-decorator=\"[ 'itypeId', {}]\">\r\n            <a-input-search\r\n              placeholder=\"点击右侧按钮选择部门\"\r\n              v-model=\"checkedDepartNameString\"\r\n              disabled\r\n              @search=\"onSearch\">\r\n              <a-button slot=\"enterButton\" icon=\"search\">选择</a-button>\r\n            </a-input-search>\r\n          </a-form-item>\r\n          <a-input type=\"hidden\" placeholder=\"\" v-decorator=\"['selecteddeparts']\"/>\r\n        </div>\r\n\r\n    <!--    <a-form-item\r\n          v-else-if=\"spermitType==3\"\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"人员\">\r\n          <a-select style=\"width: 200px;\" v-model=\"selectedUser\" @change=\"getPeople\" v-decorator=\"[ 'itypeId', {}]\">\r\n            <a-select-option v-for=\"(user,userindex) in userList\" :key=\"userindex\" :value=\"user.id\">\r\n              {{ user.username }}\r\n            </a-select-option>\r\n          </a-select>\r\n        </a-form-item>-->\r\n      <a-form-item\r\n        v-else-if=\"spermitType==3\"\r\n        :labelCol=\"labelCol\"\r\n        :wrapperCol=\"wrapperCol\"\r\n        label=\"人员\">\r\n        <j-select-user-by-dep v-decorator=\"[ 'itypeId', {}]\"  @senUserId=\"senUserId\" v-model=\"userRealName\" @getUD2=\"getUD2\" ></j-select-user-by-dep>\r\n      </a-form-item>\r\n      <a-form-item\r\n        v-else=\"spermitType==0\">\r\n      </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"是否可见\">\r\n          <a-radio-group v-model=\"selectvalue\" @change=\"getisnot\">\r\n            <a-radio :value=\"1\" default-checked=\"true\">是</a-radio>\r\n            <a-radio :value=\"0\">否</a-radio>\r\n          </a-radio-group>\r\n        </a-form-item>\r\n\r\n    </a-spin>\r\n    <depart-window ref=\"departWindow\" @sendPartsList=\"sendPartsList\" @ok=\"modalFormOk\"></depart-window>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import {httpAction} from '@/api/manage'\r\n  import {getAction} from '@/api/manage'\r\n  import pick from 'lodash.pick'\r\n  // 引入搜索部门弹出框的组件\r\n  import departWindow from '../../system/modules/DepartWindow'\r\n  import {ACCESS_TOKEN} from \"@/store/mutation-types\"\r\n  import {addUser, editUser, queryUserRole, queryall} from '@/api/api'\r\n  import {disabledAuthFilter} from \"@/utils/authFilter\"\r\n  import {duplicateCheck} from '@/api/api'\r\n  import JSelectUserByDep from '@/components/jeecgbiz/JSelectUserByDep'\r\n\r\n  import Vue from 'vue'\r\n\r\n\r\n  export default {\r\n    name: \"BusFunctionPermitModal\",\r\n    components: {\r\n      departWindow,\r\n      JSelectUserByDep\r\n    },\r\n    data() {\r\n      return {\r\n        isno:[\r\n          {typename:'所有人',value:'0'},\r\n          {typename:'角色',value:'1'},\r\n          {typename:'部门',value:'2'},\r\n          {typename:'人员',value:'3'},\r\n        ],\r\n        // 范围类型\r\n        spermitType:0,\r\n        selectvalue:1,  //是否选中\r\n        itypeName:'',// 角色或人员或部门的名字\r\n        userRealName:'',\r\n        title: \"操作\",\r\n        visible: false,\r\n        model: {\r\n          itypeId:'',//角色或人员或部门的id\r\n          iid:'',\r\n          ibusId:''\r\n        },\r\n        labelCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 5},\r\n        },\r\n        wrapperCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 16},\r\n        },\r\n        selectData: [],\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        validatorRules: {\r\n          iId: {rules: [{required: true, message: '请输入主键id!'}]},\r\n        },\r\n        selectedModel: null,\r\n        selectedFunction: null,\r\n        typeModel: null,\r\n        roleList: [],\r\n        selectedRole: '',\r\n        selectedUser: '',\r\n        userList: [],\r\n        selectedDepart: [],\r\n        modelData: [],\r\n        functionList: [],\r\n        functionData: [],\r\n        //部门控件\r\n        departDisabled: false, //是否是我的部门调用该页面\r\n        roleDisabled: false, //是否是角色维护调用该页面\r\n        modalWidth: 800,\r\n        drawerWidth: 700,\r\n        modaltoggleFlag: true,\r\n        confirmDirty: false,\r\n        selectedDepartKeys: [], //保存用户选择部门id\r\n        checkedDepartKeys: [],\r\n        checkedDepartNames: [], // 保存部门的名称 =>title\r\n        checkedDepartNameString: \"\", // 保存部门的名称 =>title\r\n        userId: \"\", //保存用户id\r\n        disableSubmit: false,\r\n        userDepartModel: {userId: '', departIdList: []}, // 保存SysUserDepart的用户部门中间表数据需要的对象\r\n\r\n        url: {\r\n          add: \"/oaBus/busFunctionPermit/add\",\r\n          edit: \"/oaBus/busFunctionPermit/edit\",\r\n        },\r\n\r\n        //用来判断弹框是用来新增或是编辑两种状态\r\n        isadd:false\r\n      }\r\n    },\r\n    created() {\r\n      this.initialRoleList();\r\n      this.initialUserList();\r\n      const token = Vue.ls.get(ACCESS_TOKEN);\r\n      this.headers = {\"X-Access-Token\": token}\r\n    },\r\n    watch: {\r\n      typeModel: 'initialRoleList',\r\n      typeModel: 'initialUserList',\r\n    },\r\n    methods: {\r\n\r\n      senUserId(ids) {\r\n        this.model.itypeId = ids.toString();\r\n      },\r\n      // 获取范围类型\r\n      getTypeVal(e){\r\n        this.spermitType = e;\r\n        if(e=='1'){\r\n          this.selectedRole = '';\r\n        }else if (e=='3'){\r\n          this.userRealName = '';\r\n        }\r\n      },\r\n      //接收 父级传来的参数\r\n      add1(ibusId,sname,data) {\r\n        this.isadd = true;\r\n        this.model.ibusId = ibusId;\r\n        //判断类型为非零时  不可选所有人\r\n        if(data.length != 0){\r\n          data.forEach((item)=>{\r\n            if(item.spermitType!=0){\r\n              this.isno= [\r\n                // {typename:'所有人',value:'0'},\r\n                {typename:'角色',value:'1'},\r\n                {typename:'部门',value:'2'},\r\n                {typename:'人员',value:'3'}\r\n              ]\r\n            }else{\r\n              this.isno= [\r\n                {typename:'所有人',value:'0'},\r\n                {typename:'角色',value:'1'},\r\n                {typename:'部门',value:'2'},\r\n                {typename:'人员',value:'3'}\r\n              ]\r\n            }\r\n          })\r\n        }else{\r\n          this.isno= [\r\n            {typename:'所有人',value:'0'},\r\n            {typename:'角色',value:'1'},\r\n            {typename:'部门',value:'2'},\r\n            {typename:'人员',value:'3'}\r\n          ]\r\n        }\r\n        this.visible = true\r\n        this.title=sname;\r\n        this.form.resetFields();\r\n        //this.model = Object.assign({}, record2);\r\n\r\n      },\r\n      //获取部门自组建返回的对象\r\n      sendPartsList(partsLists){\r\n        // this.checkedDepartcalendarNameString\r\n        console.log(partsLists);\r\n        let itypeIdLists = '';\r\n        let itypeNanesLists = '';\r\n        if(Array.isArray(partsLists)){\r\n          // this.checkedDepartNameString\r\n          let itypeIdLists = '';\r\n          let itypeNanesLists = '';\r\n          partsLists.map((part)=>{\r\n            itypeNanesLists+=part.title+'  ';\r\n            itypeIdLists+=part.value+',';\r\n          });\r\n          this.model.itypeId =itypeIdLists;\r\n          this.checkedDepartNameString = itypeNanesLists;\r\n        }else{\r\n          this.model.itypeId =partsLists.value;\r\n          this.checkedDepartNameString = partsLists.title;\r\n\r\n        }\r\n      },\r\n      //初始换数据渲染\r\n      edit1(record,isedit) {\r\n\r\n        if(isedit){\r\n          this.isno= [\r\n            {typename:'所有人',value:'0'},\r\n            {typename:'角色',value:'1'},\r\n            {typename:'部门',value:'2'},\r\n            {typename:'人员',value:'3'}\r\n          ]\r\n        }\r\n        this.isadd = false;\r\n        console.log(record);\r\n        this.spermitType = record.spermitType;\r\n        this.title=record.sname;\r\n        this.form.resetFields();\r\n        this.model = Object.assign({}, record);\r\n        this.visible = true;\r\n        this.selectvalue = Number(this.model.sdisplay);\r\n        //范围类型\r\n        this.$nextTick(() => {\r\n          this.typeModel = this.model.spermitType;\r\n          if( this.typeModel=='1'){\r\n            setTimeout(()=>{\r\n              this.selectedRole = this.model.itypeName;\r\n              console.log(this.selectedRole)\r\n            },1000)\r\n          }else if(this.typeModel=='3'){\r\n            this.userRealName = this.model.itypeName;\r\n\r\n          }else if(this.typeModel=='2'){\r\n            this.checkedDepartNameString = this.model.itypeName;\r\n            console.log(this.model.itypeId);\r\n\r\n          }\r\n\r\n\r\n        });\r\n      },\r\n      initialRoleList: function () {\r\n        let url = \"/oaBus/busFunctionPermit/findRoleByCode\";\r\n        getAction(url).then((res) => {\r\n          //console.log(res.result);\r\n          this.roleList = res.result;\r\n        })\r\n      },\r\n      initialUserList: function () {\r\n\r\n        let url = \"/oaBus/busFunctionPermit/userList\";\r\n        getAction(url).then((res) => {\r\n          //console.log(res.result);\r\n          this.userList = res.result;\r\n        })\r\n      },\r\n      loadCheckDeparts() {\r\n        let that = this;\r\n        if (!that.userId) {\r\n          return\r\n        }\r\n        getAction(that.url.userWithDepart, {userId: that.userId}).then((res) => {\r\n          that.checkedDepartNames = [];\r\n          if (res.success) {\r\n            for (let i = 0; i < res.result.length; i++) {\r\n              that.checkedDepartNames.push(res.result[i].title);\r\n              this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\r\n              that.checkedDepartKeys.push(res.result[i].key);\r\n            }\r\n            that.userDepartModel.departIdList = that.checkedDepartKeys\r\n          } else {\r\n            console.log(res.message);\r\n          }\r\n        })\r\n      },\r\n      // 搜索用户对应的部门API\r\n      onSearch() {\r\n        // console.log(this.checkedDepartKeys);\r\n        this.$refs.departWindow.add(this.model.itypeId, this.isadd);\r\n\r\n      },\r\n      // 获取用户对应部门弹出框提交给返回的数据\r\n      modalFormOk(formData) {\r\n        this.checkedDepartNames = [];\r\n        this.selectedDepartKeys = [];\r\n        this.checkedDepartNameString = '';\r\n        this.userId = formData.userId;\r\n        this.userDepartModel.userId = formData.userId;\r\n        for (let i = 0; i < formData.departIdList.length; i++) {\r\n          this.selectedDepartKeys.push(formData.departIdList[i].key);\r\n          this.checkedDepartNames.push(formData.departIdList[i].title);\r\n          this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\r\n        }\r\n        this.userDepartModel.departIdList = this.selectedDepartKeys;\r\n\r\n        this.checkedDepartKeys = this.selectedDepartKeys  //更新当前的选择keys\r\n        console.log(\"=====>\" + this.checkedDepartKeys);\r\n      },\r\n      refresh() {\r\n        this.selectedDepartKeys = [];\r\n        this.checkedDepartKeys = [];\r\n        this.checkedDepartNames = [];\r\n        this.checkedDepartNameString = \"\";\r\n        this.userId = \"\"\r\n      },\r\n      close() {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n        this.disableSubmit = false;\r\n        this.userDepartModel = {userId: '', departIdList: []};\r\n        this.checkedDepartNames = [];\r\n        this.checkedDepartNameString = '';\r\n        this.checkedDepartKeys = [];\r\n        this.selectedDepartKeys = [];\r\n      },\r\n      //获取人员下拉框 所选用户id\r\n\r\n\r\n\r\n      //获取用户点击的是否单选\r\n      getisnot(e){\r\n        console.log(e);\r\n        this.selectvalue = e.target.value;\r\n\r\n      },\r\n      handleOk() {\r\n        if(!this.typeModel){\r\n          this.$message.error('请选择一个类型！');\r\n          return;\r\n        }else{\r\n          if(this.typeModel=='1'&&this.selectedRole==''){\r\n            this.$message.error('请选择一个角色！');\r\n            return;\r\n\r\n          } if(this.typeModel=='2'&&this.checkedDepartNameString==''){\r\n            this.$message.error('请选择一个部门！');\r\n            return;\r\n          } if(this.typeModel=='3'&&this.userRealName==''){\r\n            this.$message.error('请选择一个人员！');\r\n            return;\r\n          }\r\n        }\r\n\r\n        this.typeModel = null;\r\n        const that = this;\r\n\r\n        //提交对象    this.userDepartModel.departIdList= this.selectedDepartKeys.substring(0,this.selectedDepartKeys.length-1);\r\n        let formData = {\r\n          'iid':this.model.iid,\r\n          'ibusId':this.model.ibusId,\r\n          'spermitType':this.spermitType,\r\n          'itypeId':this.model.itypeId,\r\n          'sdisplay':JSON.stringify(this.selectvalue)\r\n\r\n        }\r\n        console.log(formData)\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true;\r\n            let httpurl = '';\r\n            let method = '';\r\n            if (this.isadd) {\r\n              httpurl += this.url.add;\r\n              method = 'post';\r\n              formData.iid = '';\r\n\r\n            } else {\r\n              httpurl += this.url.edit;\r\n              method = 'put';\r\n            }\r\n            httpAction(httpurl, formData, method).then((res) => {\r\n              if (res.success) {\r\n                that.$message.success(res.message);\r\n                //告诉父级组件我已关闭  关闭后刷新父级列表\r\n                that.$emit('submit',true);\r\n              } else {\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n              //提交后清空记录\r\n              this.typeModel = '';\r\n              this.selectedRole = '';\r\n              this.userRealName = '';\r\n             // this.selectvalue = '';\r\n              //关闭中间角色 人员选框\r\n              this.spermitType = 0;\r\n              this.selectvalue = 1;\r\n              that.close();\r\n            })\r\n\r\n\r\n          }\r\n        })\r\n      },\r\n      handleCancel() {\r\n        this.typeModel = null;\r\n        this.selectedRole = '';\r\n        this.userRealName = '';\r\n        this.spermitType = 0;\r\n        this.selectvalue = 1;\r\n        this.close()\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"]}]}