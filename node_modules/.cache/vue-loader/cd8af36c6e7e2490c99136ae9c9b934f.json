{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\workflow\\modules\\oaProcActinstModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\workflow\\modules\\oaProcActinstModal.vue","mtime":1578359424116},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1570779245522},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {getAction, httpAction} from '@/api/manage'\nimport pick from 'lodash.pick'\nimport DictItemModal from \"../../system/modules/DictItemModal\";\n\nexport default {\n  name: \"oaProcActinstModal\",\n  components: {DictItemModal},\n  data() {\n    return {\n      title: \"操作\",\n      visible: false,\n      actMsg: '',\n      model: {},\n      dbtable: '',\n      dbactName: {},\n      roleScope: [],\n      depts: [],\n      role: [],\n      isDept: false,\n      canRecord: true,//可以进行记录\n      isRecord: false,//是否使用以用环节\n      //可以使用记录用户的环节\n      canUserRecorduser: [],\n      labelCol: {\n        xs: {span: 24},\n        sm: {span: 5},\n      },\n      wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 16},\n      },\n\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {\n        iid: {rules: [{required: true, message: '请输入主键id!'}]},\n      },\n      url: {\n        add: \"/workflow/oaProcActinst/add\",\n        edit: \"/workflow/oaProcActinst/edit\",\n        defKv: \"/wf/process/defKv\",\n        actsList: \"/wf/process/actsList\",\n        getDictByKey: '/sys/dict/getDictByKey',\n        getRoleAll: '/sys/role/listAll'\n      },\n    }\n  },\n  created() {\n  },\n  methods: {\n    actChange(item) {\n      //看当前的节点性质是否允许记录用户\n      for (let i of this.dbactName) {\n        //节点是但单实例 且 assignee有人\n        if (i.id == item) {\n          if (i.allowMulti == false && i.assignee != null) {\n            this.canRecord = true\n          } else {\n            this.canRecord = false\n          }\n        }\n      }\n    },\n    recordUser(item) {\n      this.isRecord = item.target.value == 'true'\n    },\n    handleAddMy(record) {\n      this.actMsg = record\n      this.actsList(record.key)\n      // this.visible = true;\n      this.add()\n    },\n    actsList(key) {\n      //所有角色\n      getAction(this.url.getRoleAll).then(res => {\n        this.role = res.result\n      })\n      //该流程的所有环节\n      getAction(this.url.actsList, {key: key}).then(res => {\n        //将可使用记录用户的节点提取出来(单实例)\n        this.canUserRecorduser = []\n        for (let i of res.result) {\n          if (!i.allowMulti && i.assignee != null) {\n            this.canUserRecorduser.push(i)\n          }\n        }\n\n        this.dbactName = res.result;\n      });\n      //角色范围\n      getAction(this.url.getDictByKey, {dictKey: 'actProRoleScope'}).then(res => {\n        this.roleScope = res.result\n      });\n      //子流程部门类型\n      getAction(this.url.getDictByKey, {dictKey: 'actProDepts'}).then(res => {\n        this.depts = res.result\n      });\n\n\n    },\n    add() {\n      this.edit({});\n    },\n    handleEditMy(record) {\n      record.multAssignee = record.multAssignee ? 'true' : 'false'\n      record.recordCurrentuser = record.recordCurrentuser ? 'true' : 'false'\n      record.completeTask = record.completeTask ? 'true' : 'false'\n      record.isCanAdd = record.isCanAdd ? 'true' : 'false'\n      record.signer = record.signer ? 'true' : 'false'\n      record.isDeptFinish = record.isDeptFinish ? 'true' : 'false'\n      record.userRecordVal = record.userRecordVal ? 'true' : 'false'\n      record.depts = (record.depts != null && (record.depts).indexOf(',') >= 0) ? (record.depts).split(',') : null\n\n      this.isDept = record.userOrRole == 'dept'\n      this.isRecord = record.recordCurrentuser == 'true'\n\n      this.actsList(record.procDefKey)\n      this.edit(record)\n    },\n    edit(record) {\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model, 'procDefKey', 'actId', 'actName', 'candidates',\n          'multAssignee','signer', 'roleScope', 'completeTask', 'isCanAdd', 'isDeptFinish',\n          'userOrRole', 'depts', 'recordCurrentuser', 'recordKeys', 'userRecordVal'))\n        //时间格式化\n      });\n\n    },\n    close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk() {\n\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let httpurl = '';\n          let method = '';\n\n          if (!this.model.iid) {\n            httpurl += this.url.add;\n            method = 'post';\n          } else {\n            httpurl += this.url.edit;\n            method = 'put';\n          }\n          let formData = Object.assign(this.model, values);\n          //时间格式化\n\n          formData.procDefKey = this.actMsg.key\n\n\n          for (let i in this.dbactName) {\n            let t = this.dbactName[i]\n            if (t.id == formData.actName) {\n              formData.actId = t.id\n              formData.actName = t.name\n              formData.actType = t.type\n              break\n            }\n          }\n\n          if (formData.depts != undefined) {\n            formData.depts = formData.depts.join(',')\n          }\n          formData.userOrRole = formData.userOrRole == undefined ? 'user' : formData.userOrRole\n\n          if (formData.recordKeys != undefined && formData.recordKeys != null && formData.recordKeys.length > 0) {\n            formData.recordKey = formData.recordKeys.join(\",\")\n          }\n\n          httpAction(httpurl, formData, method).then((res) => {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          })\n\n        }\n      })\n    },\n    handleCancel() {\n      this.close();\n    },\n    isUserOrRole(value) {\n      this.isDept = value.target.value == 'dept'\n      // if (!this.isDept) {\n      //   //清空部门选择\n      // }\n    }\n  }\n}\n",{"version":3,"sources":["oaProcActinstModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwLA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"oaProcActinstModal.vue","sourceRoot":"src/views/workflow/modules","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <!--<a-form-item-->\r\n        <!--:labelCol=\"labelCol\"-->\r\n        <!--:wrapperCol=\"wrapperCol\"-->\r\n\r\n        <!--label=\"节点Id选择\">-->\r\n        <!--<a-select placeholder=\"请选流程动节点Id\" v-decorator=\"['actId', {}]\">-->\r\n        <!--<a-select-option v-for=\"(item,index) in dbactName\" :key=\"index\" :value=\"item.id\">{{item.id}}-->\r\n        <!--</a-select-option>-->\r\n        <!--</a-select>-->\r\n        <!--</a-form-item>-->\r\n\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"节点名称选择\">\r\n          <a-select placeholder=\"请选流程动节点名称\" v-decorator=\"['actName', {}]\" @change=\"actChange\">\r\n            <a-select-option v-for=\"(item,index) in dbactName\" :key=\"index\" :value=\"item.id\">{{item.name}}\r\n            </a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"候选人角色\">\r\n          <a-select placeholder=\"请选流程动节点名称\" v-decorator=\"['candidates', {}]\">\r\n            <a-select-option v-for=\"(item,index) in role\" :key=\"index\" :value=\"item.roleName\">{{item.roleName}}\r\n            </a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"候选人选择范围\">\r\n          <a-select placeholder=\"请选择候选人选择范围\" v-decorator=\"['roleScope', {}]\">\r\n            <a-select-option v-for=\"(item,index) in roleScope\" :key=\"index\" :value=\"item.itemValue\">{{item.itemText}}\r\n            </a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"是否多实例\">\r\n          <a-radio-group buttonStyle=\"solid\" defaultValue=\"false\" v-decorator=\"['multAssignee', {} ]\"\r\n                         size=\"small\">\r\n            <a-radio-button value=\"false\">否</a-radio-button>\r\n            <a-radio-button value=\"true\">是</a-radio-button>\r\n          </a-radio-group>\r\n\r\n        </a-form-item>\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"是否是签发人\">\r\n          <a-radio-group buttonStyle=\"solid\" defaultValue=\"false\" v-decorator=\"['signer', {} ]\"\r\n                         size=\"small\">\r\n            <a-radio-button value=\"false\">否</a-radio-button>\r\n            <a-radio-button value=\"true\">是</a-radio-button>\r\n          </a-radio-group>\r\n\r\n        </a-form-item>\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"是否可追加\">\r\n          <a-radio-group buttonStyle=\"solid\" defaultValue=\"false\" v-decorator=\"['isCanAdd', {} ]\"\r\n                         size=\"small\">\r\n            <a-radio-button value=\"false\">否</a-radio-button>\r\n            <a-radio-button value=\"true\">是</a-radio-button>\r\n          </a-radio-group>\r\n        </a-form-item>\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"是否可部门完成\">\r\n          <a-radio-group buttonStyle=\"solid\" defaultValue=\"false\" v-decorator=\"['isDeptFinish', {} ]\"\r\n                         size=\"small\">\r\n            <a-radio-button value=\"false\">否</a-radio-button>\r\n            <a-radio-button value=\"true\">是</a-radio-button>\r\n          </a-radio-group>\r\n        </a-form-item>\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"用户或部门\">\r\n          <a-radio-group buttonStyle=\"solid\" defaultValue=\"user\" v-decorator=\"['userOrRole', {} ]\"\r\n                         @change=\"isUserOrRole\"\r\n                         size=\"small\">\r\n            <a-radio-button value=\"user\">用户</a-radio-button>\r\n            <a-radio-button value=\"dept\">部门</a-radio-button>\r\n          </a-radio-group>\r\n        </a-form-item>\r\n\r\n        <div v-show=\"isDept\">\r\n          <a-form-item\r\n            :labelCol=\"labelCol\"\r\n            :wrapperCol=\"wrapperCol\"\r\n            label=\"部门类型选择\">\r\n            <a-select placeholder=\"请选择部门任务类型\" mode=\"multiple\" v-decorator=\"['depts', {}]\">\r\n              <a-select-option v-for=\"(item,index) in depts\" :key=\"index\" :value=\"item.itemValue\">{{item.itemText}}\r\n              </a-select-option>\r\n            </a-select>\r\n          </a-form-item>\r\n        </div>\r\n\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"是否填写完意见就完成任务\">\r\n          <a-radio-group buttonStyle=\"solid\" defaultValue=\"false\"\r\n                         v-decorator=\"['completeTask', {} ]\"\r\n                         size=\"small\">\r\n            <a-radio-button value=\"false\">否</a-radio-button>\r\n            <a-radio-button value=\"true\">是</a-radio-button>\r\n          </a-radio-group>\r\n        </a-form-item>\r\n\r\n        <div v-show=\"canRecord\">\r\n          <a-form-item\r\n            :labelCol=\"labelCol\"\r\n            :wrapperCol=\"wrapperCol\"\r\n            label=\"是否记录当前用户\">\r\n            <a-radio-group buttonStyle=\"solid\" defaultValue=\"false\" v-decorator=\"['recordCurrentuser', {} ]\"\r\n                           @change=\"recordUser\" size=\"small\">\r\n              <a-radio-button value=\"false\">不记录</a-radio-button>\r\n              <a-radio-button value=\"true\">记录</a-radio-button>\r\n            </a-radio-group>\r\n          </a-form-item>\r\n\r\n          <a-form-item\r\n            :labelCol=\"labelCol\"\r\n            :wrapperCol=\"wrapperCol\"\r\n            label=\"是否使用记录的用户\">\r\n            <a-radio-group buttonStyle=\"solid\" defaultValue=\"false\" v-decorator=\"['userRecordVal', {} ]\"\r\n                           size=\"small\">\r\n              <a-radio-button value=\"false\">不使用</a-radio-button>\r\n              <a-radio-button value=\"true\">使用</a-radio-button>\r\n            </a-radio-group>\r\n          </a-form-item>\r\n\r\n\r\n          <div v-show=\"isRecord\">\r\n            <a-form-item\r\n              :labelCol=\"labelCol\"\r\n              :wrapperCol=\"wrapperCol\"\r\n              label=\"选择使用该记录的环节\">\r\n              <a-select placeholder=\"请选流程动节点名称\" mode=\"multiple\" v-decorator=\"['recordKeys', {}]\">\r\n                <a-select-option v-for=\"(item,index) in canUserRecorduser\" :key=\"index\"\r\n                                 :value=\"item.id+'-'+item.assignee\">{{item.name}}\r\n                </a-select-option>\r\n              </a-select>\r\n            </a-form-item>\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import {getAction, httpAction} from '@/api/manage'\r\n  import pick from 'lodash.pick'\r\n  import DictItemModal from \"../../system/modules/DictItemModal\";\r\n\r\n  export default {\r\n    name: \"oaProcActinstModal\",\r\n    components: {DictItemModal},\r\n    data() {\r\n      return {\r\n        title: \"操作\",\r\n        visible: false,\r\n        actMsg: '',\r\n        model: {},\r\n        dbtable: '',\r\n        dbactName: {},\r\n        roleScope: [],\r\n        depts: [],\r\n        role: [],\r\n        isDept: false,\r\n        canRecord: true,//可以进行记录\r\n        isRecord: false,//是否使用以用环节\r\n        //可以使用记录用户的环节\r\n        canUserRecorduser: [],\r\n        labelCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 5},\r\n        },\r\n        wrapperCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 16},\r\n        },\r\n\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        validatorRules: {\r\n          iid: {rules: [{required: true, message: '请输入主键id!'}]},\r\n        },\r\n        url: {\r\n          add: \"/workflow/oaProcActinst/add\",\r\n          edit: \"/workflow/oaProcActinst/edit\",\r\n          defKv: \"/wf/process/defKv\",\r\n          actsList: \"/wf/process/actsList\",\r\n          getDictByKey: '/sys/dict/getDictByKey',\r\n          getRoleAll: '/sys/role/listAll'\r\n        },\r\n      }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n      actChange(item) {\r\n        //看当前的节点性质是否允许记录用户\r\n        for (let i of this.dbactName) {\r\n          //节点是但单实例 且 assignee有人\r\n          if (i.id == item) {\r\n            if (i.allowMulti == false && i.assignee != null) {\r\n              this.canRecord = true\r\n            } else {\r\n              this.canRecord = false\r\n            }\r\n          }\r\n        }\r\n      },\r\n      recordUser(item) {\r\n        this.isRecord = item.target.value == 'true'\r\n      },\r\n      handleAddMy(record) {\r\n        this.actMsg = record\r\n        this.actsList(record.key)\r\n        // this.visible = true;\r\n        this.add()\r\n      },\r\n      actsList(key) {\r\n        //所有角色\r\n        getAction(this.url.getRoleAll).then(res => {\r\n          this.role = res.result\r\n        })\r\n        //该流程的所有环节\r\n        getAction(this.url.actsList, {key: key}).then(res => {\r\n          //将可使用记录用户的节点提取出来(单实例)\r\n          this.canUserRecorduser = []\r\n          for (let i of res.result) {\r\n            if (!i.allowMulti && i.assignee != null) {\r\n              this.canUserRecorduser.push(i)\r\n            }\r\n          }\r\n\r\n          this.dbactName = res.result;\r\n        });\r\n        //角色范围\r\n        getAction(this.url.getDictByKey, {dictKey: 'actProRoleScope'}).then(res => {\r\n          this.roleScope = res.result\r\n        });\r\n        //子流程部门类型\r\n        getAction(this.url.getDictByKey, {dictKey: 'actProDepts'}).then(res => {\r\n          this.depts = res.result\r\n        });\r\n\r\n\r\n      },\r\n      add() {\r\n        this.edit({});\r\n      },\r\n      handleEditMy(record) {\r\n        record.multAssignee = record.multAssignee ? 'true' : 'false'\r\n        record.recordCurrentuser = record.recordCurrentuser ? 'true' : 'false'\r\n        record.completeTask = record.completeTask ? 'true' : 'false'\r\n        record.isCanAdd = record.isCanAdd ? 'true' : 'false'\r\n        record.signer = record.signer ? 'true' : 'false'\r\n        record.isDeptFinish = record.isDeptFinish ? 'true' : 'false'\r\n        record.userRecordVal = record.userRecordVal ? 'true' : 'false'\r\n        record.depts = (record.depts != null && (record.depts).indexOf(',') >= 0) ? (record.depts).split(',') : null\r\n\r\n        this.isDept = record.userOrRole == 'dept'\r\n        this.isRecord = record.recordCurrentuser == 'true'\r\n\r\n        this.actsList(record.procDefKey)\r\n        this.edit(record)\r\n      },\r\n      edit(record) {\r\n        this.form.resetFields();\r\n        this.model = Object.assign({}, record);\r\n        this.visible = true;\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue(pick(this.model, 'procDefKey', 'actId', 'actName', 'candidates',\r\n            'multAssignee','signer', 'roleScope', 'completeTask', 'isCanAdd', 'isDeptFinish',\r\n            'userOrRole', 'depts', 'recordCurrentuser', 'recordKeys', 'userRecordVal'))\r\n          //时间格式化\r\n        });\r\n\r\n      },\r\n      close() {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      },\r\n      handleOk() {\r\n\r\n        const that = this;\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true;\r\n            let httpurl = '';\r\n            let method = '';\r\n\r\n            if (!this.model.iid) {\r\n              httpurl += this.url.add;\r\n              method = 'post';\r\n            } else {\r\n              httpurl += this.url.edit;\r\n              method = 'put';\r\n            }\r\n            let formData = Object.assign(this.model, values);\r\n            //时间格式化\r\n\r\n            formData.procDefKey = this.actMsg.key\r\n\r\n\r\n            for (let i in this.dbactName) {\r\n              let t = this.dbactName[i]\r\n              if (t.id == formData.actName) {\r\n                formData.actId = t.id\r\n                formData.actName = t.name\r\n                formData.actType = t.type\r\n                break\r\n              }\r\n            }\r\n\r\n            if (formData.depts != undefined) {\r\n              formData.depts = formData.depts.join(',')\r\n            }\r\n            formData.userOrRole = formData.userOrRole == undefined ? 'user' : formData.userOrRole\r\n\r\n            if (formData.recordKeys != undefined && formData.recordKeys != null && formData.recordKeys.length > 0) {\r\n              formData.recordKey = formData.recordKeys.join(\",\")\r\n            }\r\n\r\n            httpAction(httpurl, formData, method).then((res) => {\r\n              if (res.success) {\r\n                that.$message.success(res.message);\r\n                that.$emit('ok');\r\n              } else {\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n              that.close();\r\n            })\r\n\r\n          }\r\n        })\r\n      },\r\n      handleCancel() {\r\n        this.close();\r\n      },\r\n      isUserOrRole(value) {\r\n        this.isDept = value.target.value == 'dept'\r\n        // if (!this.isDept) {\r\n        //   //清空部门选择\r\n        // }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"]}]}