{"remainingRequest":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecg\\JGraphicCode.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecg\\JGraphicCode.vue","mtime":1568535202681},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883562},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858740},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883562},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696677}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'JGraphicCode',\n  props: {\n    length:{\n      type: Number,\n      default: 4\n    },\n    fontSizeMin: {\n      type: Number,\n      default: 20\n    },\n    fontSizeMax: {\n      type: Number,\n      default: 45\n    },\n    backgroundColorMin: {\n      type: Number,\n      default: 180\n    },\n    backgroundColorMax: {\n      type: Number,\n      default: 240\n    },\n    colorMin: {\n      type: Number,\n      default: 50\n    },\n    colorMax: {\n      type: Number,\n      default: 160\n    },\n    lineColorMin: {\n      type: Number,\n      default: 40\n    },\n    lineColorMax: {\n      type: Number,\n      default: 180\n    },\n    dotColorMin: {\n      type: Number,\n      default: 0\n    },\n    dotColorMax: {\n      type: Number,\n      default: 255\n    },\n    contentWidth: {\n      type: Number,\n      default:136\n    },\n    contentHeight: {\n      type: Number,\n      default: 38\n    }\n  },\n  methods: {\n    // 生成一个随机数\n    randomNum (min, max) {\n      return Math.floor(Math.random() * (max - min) + min)\n    },\n    // 生成一个随机的颜色\n    randomColor (min, max) {\n      let r = this.randomNum(min, max)\n      let g = this.randomNum(min, max)\n      let b = this.randomNum(min, max)\n      return 'rgb(' + r + ',' + g + ',' + b + ')'\n    },\n    drawPic () {\n      this.randomCode()\n      let canvas = document.getElementById('gc-canvas')\n      let ctx = canvas.getContext('2d')\n      ctx.textBaseline = 'bottom'\n      // 绘制背景\n      ctx.fillStyle = this.randomColor(this.backgroundColorMin, this.backgroundColorMax)\n      ctx.fillRect(0, 0, this.contentWidth, this.contentHeight)\n      // 绘制文字\n      for (let i = 0; i < this.code.length; i++) {\n        this.drawText(ctx, this.code[i], i)\n      }\n      this.drawLine(ctx)\n      this.drawDot(ctx)\n      this.$emit(\"success\",this.code)\n    },\n    drawText (ctx, txt, i) {\n      ctx.fillStyle = this.randomColor(this.colorMin, this.colorMax)\n      let fontSize = this.randomNum(this.fontSizeMin, this.fontSizeMax)\n      ctx.font = fontSize + 'px SimHei'\n      let padding = 10;\n      let offset = (this.contentWidth-40)/(this.code.length-1)\n      let x=padding;\n      if(i>0){\n        x = padding+(i*offset)\n      }\n      //let x = (i + 1) * (this.contentWidth / (this.code.length + 1))\n      let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5)\n      if(fontSize>40){\n        y=40\n      }\n      var deg = this.randomNum(-10,10)\n      // 修改坐标原点和旋转角度\n      ctx.translate(x, y)\n      ctx.rotate(deg * Math.PI / 180)\n      ctx.fillText(txt, 0, 0)\n      // 恢复坐标原点和旋转角度\n      ctx.rotate(-deg * Math.PI / 180)\n      ctx.translate(-x, -y)\n    },\n    drawLine (ctx) {\n      // 绘制干扰线\n      for (let i = 0; i <1; i++) {\n        ctx.strokeStyle = this.randomColor(this.lineColorMin, this.lineColorMax)\n        ctx.beginPath()\n        ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\n        ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\n        ctx.stroke()\n      }\n    },\n    drawDot (ctx) {\n      // 绘制干扰点\n      for (let i = 0; i < 100; i++) {\n        ctx.fillStyle = this.randomColor(0, 255)\n        ctx.beginPath()\n        ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI)\n        ctx.fill()\n      }\n    },\n    reloadPic(){\n      this.drawPic()\n    },\n    randomCode(){\n      let random = ''\n      //去掉了I l i o O\n      let str = \"QWERTYUPLKJHGFDSAZXCVBNMqwertyupkjhgfdsazxcvbnm1234567890\"\n      for(let i = 0; i < this.length; i++) {\n        let index = Math.floor(Math.random()*57);\n        random += str[index];\n      }\n      this.code = random\n    }\n  },\n  mounted () {\n    this.drawPic()\n  },\n  data(){\n    return {\n      code:\"\"\n    }\n  }\n\n}\n",{"version":3,"sources":["JGraphicCode.vue"],"names":[],"mappingsfile":"JGraphicCode.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\r\n  <div class=\"gc-canvas\" @click=\"reloadPic\">\r\n    <canvas id=\"gc-canvas\" :width=\"contentWidth\" :height=\"contentHeight\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'JGraphicCode',\r\n    props: {\r\n      length:{\r\n        type: Number,\r\n        default: 4\r\n      },\r\n      fontSizeMin: {\r\n        type: Number,\r\n        default: 20\r\n      },\r\n      fontSizeMax: {\r\n        type: Number,\r\n        default: 45\r\n      },\r\n      backgroundColorMin: {\r\n        type: Number,\r\n        default: 180\r\n      },\r\n      backgroundColorMax: {\r\n        type: Number,\r\n        default: 240\r\n      },\r\n      colorMin: {\r\n        type: Number,\r\n        default: 50\r\n      },\r\n      colorMax: {\r\n        type: Number,\r\n        default: 160\r\n      },\r\n      lineColorMin: {\r\n        type: Number,\r\n        default: 40\r\n      },\r\n      lineColorMax: {\r\n        type: Number,\r\n        default: 180\r\n      },\r\n      dotColorMin: {\r\n        type: Number,\r\n        default: 0\r\n      },\r\n      dotColorMax: {\r\n        type: Number,\r\n        default: 255\r\n      },\r\n      contentWidth: {\r\n        type: Number,\r\n        default:136\r\n      },\r\n      contentHeight: {\r\n        type: Number,\r\n        default: 38\r\n      }\r\n    },\r\n    methods: {\r\n      // 生成一个随机数\r\n      randomNum (min, max) {\r\n        return Math.floor(Math.random() * (max - min) + min)\r\n      },\r\n      // 生成一个随机的颜色\r\n      randomColor (min, max) {\r\n        let r = this.randomNum(min, max)\r\n        let g = this.randomNum(min, max)\r\n        let b = this.randomNum(min, max)\r\n        return 'rgb(' + r + ',' + g + ',' + b + ')'\r\n      },\r\n      drawPic () {\r\n        this.randomCode()\r\n        let canvas = document.getElementById('gc-canvas')\r\n        let ctx = canvas.getContext('2d')\r\n        ctx.textBaseline = 'bottom'\r\n        // 绘制背景\r\n        ctx.fillStyle = this.randomColor(this.backgroundColorMin, this.backgroundColorMax)\r\n        ctx.fillRect(0, 0, this.contentWidth, this.contentHeight)\r\n        // 绘制文字\r\n        for (let i = 0; i < this.code.length; i++) {\r\n          this.drawText(ctx, this.code[i], i)\r\n        }\r\n        this.drawLine(ctx)\r\n        this.drawDot(ctx)\r\n        this.$emit(\"success\",this.code)\r\n      },\r\n      drawText (ctx, txt, i) {\r\n        ctx.fillStyle = this.randomColor(this.colorMin, this.colorMax)\r\n        let fontSize = this.randomNum(this.fontSizeMin, this.fontSizeMax)\r\n        ctx.font = fontSize + 'px SimHei'\r\n        let padding = 10;\r\n        let offset = (this.contentWidth-40)/(this.code.length-1)\r\n        let x=padding;\r\n        if(i>0){\r\n          x = padding+(i*offset)\r\n        }\r\n        //let x = (i + 1) * (this.contentWidth / (this.code.length + 1))\r\n        let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5)\r\n        if(fontSize>40){\r\n          y=40\r\n        }\r\n        var deg = this.randomNum(-10,10)\r\n        // 修改坐标原点和旋转角度\r\n        ctx.translate(x, y)\r\n        ctx.rotate(deg * Math.PI / 180)\r\n        ctx.fillText(txt, 0, 0)\r\n        // 恢复坐标原点和旋转角度\r\n        ctx.rotate(-deg * Math.PI / 180)\r\n        ctx.translate(-x, -y)\r\n      },\r\n      drawLine (ctx) {\r\n        // 绘制干扰线\r\n        for (let i = 0; i <1; i++) {\r\n          ctx.strokeStyle = this.randomColor(this.lineColorMin, this.lineColorMax)\r\n          ctx.beginPath()\r\n          ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\r\n          ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\r\n          ctx.stroke()\r\n        }\r\n      },\r\n      drawDot (ctx) {\r\n        // 绘制干扰点\r\n        for (let i = 0; i < 100; i++) {\r\n          ctx.fillStyle = this.randomColor(0, 255)\r\n          ctx.beginPath()\r\n          ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI)\r\n          ctx.fill()\r\n        }\r\n      },\r\n      reloadPic(){\r\n        this.drawPic()\r\n      },\r\n      randomCode(){\r\n        let random = ''\r\n        //去掉了I l i o O\r\n        let str = \"QWERTYUPLKJHGFDSAZXCVBNMqwertyupkjhgfdsazxcvbnm1234567890\"\r\n        for(let i = 0; i < this.length; i++) {\r\n          let index = Math.floor(Math.random()*57);\r\n          random += str[index];\r\n        }\r\n        this.code = random\r\n      }\r\n    },\r\n    mounted () {\r\n      this.drawPic()\r\n    },\r\n    data(){\r\n      return {\r\n        code:\"\"\r\n      }\r\n    }\r\n\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}