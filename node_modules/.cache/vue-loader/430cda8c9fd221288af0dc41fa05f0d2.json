{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\mytask\\modules\\AddUsersModal.vue?vue&type=style&index=0&id=9b5099cc&scoped=true&lang=less&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\mytask\\modules\\AddUsersModal.vue","mtime":1579678337411},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\css-loader\\index.js","mtime":1570780111199},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1570779225817},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\postcss-loader\\src\\index.js","mtime":1570780438513},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\less-loader\\dist\\cjs.js","mtime":1570780454546},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.box {\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n\n  .left {\n    width: 30%;\n  }\n\n  .right {\n    width: 69%;\n    height: 400px;\n    /*background: #dddddd;*/\n    overflow-y: scroll;\n\n\n    .box1 {\n      width: 100%;\n      display: flex;\n      align-items: flex-start;\n      justify-content: space-between;\n      /*background: darkcyan;*/\n\n      .rightRight {\n        /*width: 90%;*/\n        width: 50%;\n        height: 120px;\n        /*background: #fff;*/\n        margin-left: 150px;\n        margin-right: 1px;\n        margin-top: 12px;\n        overflow-y: scroll;\n      }\n    }\n\n\n  }\n\n  .rightRight1 {\n    /*width: 90%;*/\n    width: 50%;\n    height: 120px;\n    /*background: #fff;*/\n    margin-left: 1px;\n    margin-right: 10px;\n    margin-top: 10px;\n    overflow-y: scroll;\n  }\n\n\n  .rightLeft {\n    width: 5%;\n  }\n\n\n}\n",{"version":3,"sources":["AddUsersModal.vue"],"names":[],"mappingsm/BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA","file":"AddUsersModal.vue","sourceRoot":"src/views/mytask/modules","sourcesContent":["<template>\r\n\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"1000\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"confirm\"\r\n    @cancel=\"cancel\"\r\n    destroyOnClose\r\n    :okText=\"okText\"\r\n    cancelText=\"取消\">\r\n    <div id=\"pic\" style=\"overflow: auto;\" :style=\"{height: scrHeight}\">\r\n\r\n      <a-layout id=\"components-layout-demo-top-side-2\">\r\n        <a-layout>\r\n          <div v-if=\"endType\">\r\n            <center><h3 style=\"color: red; font-weight: 600; font-size: 20px\">下一节点为结束节点</h3></center>\r\n          </div>\r\n\r\n          <a-layout-sider v-if=\"!endType\" width=\"200\" style=\"background: #fff\">\r\n            <a-menu\r\n              mode=\"inline\"\r\n              :defaultSelectedKeys=\"['1']\"\r\n              :defaultOpenKeys=\"['sub1']\"\r\n              :style=\"{ height: '100%', borderRight: 80 }\">\r\n              <!--...................................................................................................-->\r\n              <a-sub-menu key=\"sub1\">\r\n\r\n                <span slot=\"title\"><a-icon type=\"user\"/>可追加环节</span>\r\n\r\n                <a-menu-item :key=\"item.oaProcActinst.actId\" v-for=\"item in nextsActs\" @click=\"clickAct(item)\">\r\n                  {{item.oaProcActinst.actName}}\r\n                </a-menu-item>\r\n\r\n              </a-sub-menu>\r\n\r\n              <!--...................................................................................................-->\r\n            </a-menu>\r\n          </a-layout-sider>\r\n          <!--.........................//////////////////////////////////////////..........................................................................-->\r\n          <a-layout v-if=\"!endType\" style=\"padding: 2px 2px 2px\">\r\n\r\n            <!--<a-breadcrumb style=\"margin: 16px 0\">-->\r\n            <!--<div>-->\r\n            <!--&nbsp;&nbsp;&nbsp;&nbsp;-->\r\n            <!--<a-radio-group name=\"radioGroup\" @change=\"changeChoice\" :defaultValue=\"1\">-->\r\n            <!--<a-radio :value=\"1\">不限时间</a-radio>-->\r\n            <!--<a-radio :value=\"2\">限制时间</a-radio>-->\r\n            <!--</a-radio-group>-->\r\n            <!--&nbsp;&nbsp;&nbsp;&nbsp; 期望任务办理结束时间:-->\r\n            <!--<a-date-picker @change=\"onChange\" showTime format=\"YYYY-MM-DD HH:mm:ss\"-->\r\n            <!--placeholder=\"请选择结束时间\"/>-->\r\n            <!--</div>-->\r\n            <!--</a-breadcrumb>-->\r\n            <a-layout-content\r\n              :style=\"{ background: '#fff', padding: '10px', margin: 0, minHeight: '280px' }\">\r\n              <!--********************************* 下一办理人选用户(区分：普通/并行/包容网关) [仅记录选择记录] ********************************-->\r\n              <!--可多选 1 数据分类(单选/多选/部门选) -->\r\n              <!--1 普通-->\r\n              <div v-if=\"!isDept\">\r\n                <div v-if=\"!isMul\">\r\n                  <a-table\r\n                    ref=\"table\"\r\n                    size=\"middle\"\r\n                    bordered\r\n                    :pagination=\"false\"\r\n                    :customRow=\"setRowRadio\"\r\n                    rowKey=\"uid\"\r\n                    :columns=\"columns\"\r\n                    :dataSource=\"dataSource\"\r\n                    :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: handleTableChangeMy,type:'radio'}\"\r\n                  >\r\n                  </a-table>\r\n                </div>\r\n                <div v-if=\"isMul\">\r\n                  <a-table\r\n                    ref=\"table\"\r\n                    size=\"middle\"\r\n                    bordered\r\n                    :pagination=\"false\"\r\n                    rowKey=\"uid\"\r\n                    disabled\r\n                    :customRow=\"setRowCheck\"\r\n                    :columns=\"columns\"\r\n                    :dataSource=\"dataSource\"\r\n                    :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: handleTableChangeMy,type:'checkbox'}\"\r\n                  >\r\n                    <!--onSelectChange-->\r\n                  </a-table>\r\n                </div>\r\n              </div>\r\n\r\n              <!--选部门-->\r\n              <div class=\"box\" v-if=\"isDept\">\r\n                <!--左侧部门-->\r\n                <div class=\"left\">\r\n                  <a-table\r\n                    ref=\"table\"\r\n                    size=\"small\"\r\n                    bordered\r\n                    rowKey=\"id\"\r\n                    rowSelection\r\n                    :loading=\"loading\"\r\n                    :columns=\"columns2\"\r\n                    :customRow=\"departClickCheck\"\r\n                    :dataSource=\"mockData\"\r\n                    :pagination=\"ipagination\"\r\n                    :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange}\"\r\n                    @change=\"handleTableChange\"\r\n                  >\r\n                  </a-table>\r\n                </div>\r\n\r\n                <!--右侧选择-->\r\n                <div class=\"right\">\r\n                  <div v-for=\"item in deptsList\">\r\n                    <!--左右布局-->\r\n                    <div class=\"box1\">\r\n                      <div class=\"rightLeft\" style=\"margin-top: 20px;\">\r\n                        <a-button @click=\"toRight(item)\">\r\n                          <a-icon type=\"right\"/>\r\n                          添加到{{item}}\r\n                        </a-button>\r\n                        <a-button @click=\"toLeft(item)\">\r\n                          <a-icon type=\"left\"/>\r\n                          从{{item}}删除\r\n                        </a-button>\r\n                      </div>\r\n\r\n                      <div style=\"width: 100%;display: flex\">\r\n                        <div class=\"rightRight\">\r\n\r\n                          <template>\r\n                            <h4 color=\"red\">{{item}}部门</h4>\r\n                            <a-checkbox :id=\"item\" @change=\"onCheckAllChange\"></a-checkbox>\r\n\r\n                            <a-row v-for=\"i in departSelect[item]\">\r\n                              <a-col :span=\"100\">\r\n                                <a-checkbox :ref=\"item\" :key=\"i.id\" :value=\"i.id+'-'+item\" @change=\"onChangeCheck\">\r\n                                  {{i.departName}}\r\n                                </a-checkbox>\r\n                              </a-col>\r\n                            </a-row>\r\n                          </template>\r\n                        </div>\r\n\r\n                        <div class=\"rightRight1\">\r\n                          <template>\r\n                            <h4 color=\"red\">{{item}}部门用户</h4>\r\n                            <!--<a-button type=\"primary\" size=\"small\" @click=\"queryUser(item)\">【{{item}}】人员</a-button>-->\r\n                            <a-row v-for=\"i in departUsersMsg[item]\">\r\n                              <a-col :span=\"100\">\r\n                                {{i.username}}\r\n                              </a-col>\r\n                            </a-row>\r\n                          </template>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </a-layout-content>\r\n          </a-layout>\r\n        </a-layout>\r\n      </a-layout>\r\n\r\n      <a-modal\r\n        title=\"请确认所选择的节点\"\r\n        :width=\"600\"\r\n        :visible=\"visible2\"\r\n        :confirmLoading=\"confirmLoading\"\r\n        @ok=\"confirm2\"\r\n        @cancel=\"cancel2\"\r\n        destroyOnClose\r\n        okText=\"确认\"\r\n        cancelText=\"继续选择\">\r\n\r\n        <!--:customRow=\"departClickCheck\"-->\r\n        <!--:pagination=\"ipagination\"-->\r\n\r\n        <a-table\r\n          ref=\"table\"\r\n          size=\"small\"\r\n          bordered\r\n          rowKey=\"id\"\r\n          rowSelection\r\n          :loading=\"loading\"\r\n          :customRow=\"customRowMy\"\r\n          :columns=\"columns3\"\r\n          :dataSource=\"actChoice\"\r\n          :pagination=\"false\"\r\n          :rowSelection=\"{selectedRowKeys: selectedRowKeys2,selectedRows:selectedRows2, onChange: onSelectChangeMy2}\"\r\n          @change=\"handleTableChange\"\r\n        >\r\n        </a-table>\r\n\r\n\r\n      </a-modal>\r\n    </div>\r\n\r\n  </a-modal>\r\n\r\n</template>\r\n\r\n<script>\r\n  import {getAction, postAction} from \"../../../api/manage\";\r\n  import {JeecgListMixin} from '@/mixins/JeecgListMixin'\r\n  import DictItemList from \"../../system/DictItemList\";\r\n\r\n\r\n  export default {\r\n    name: \"nextUsers\",\r\n    mixins: [JeecgListMixin],\r\n    components: {DictItemList},\r\n    data() {\r\n      return {\r\n        scrHeight: window.innerHeight - 300 + 'px',\r\n        title: '追加用户',\r\n        okText: '确定',\r\n        //控制组件数据可见\r\n        isMul: false, //下一任务是单选/多选\r\n        isDept: false,\r\n        endType: false,//是否是结束节点\r\n        nextsActs: [],\r\n        endTime: '',\r\n        //穿梭框数据\r\n        mockData: [],\r\n        //部门信息\r\n        deptsList: [],\r\n        //部门选择集合\r\n        departSelect: {},\r\n        //部门对应用户id\r\n        departUsersId: {},\r\n        departUsersMsg: {},\r\n        //环节分类，从属于 排他，并行，包容网关\r\n        gateWayTypeSelect: {\r\n          parallel: {},\r\n          inclusive: {},\r\n          normal: {}//有的话只会存在一个\r\n        },\r\n        typeCount: {\r\n          normal: [],\r\n          inclusive: [],\r\n          parallel: [],\r\n        },\r\n        preCilck: null,\r\n        //当前点击的节点\r\n        currentClick: null,\r\n        timeCheck: false,//是否限制时间\r\n        columns: [\r\n\r\n          {\r\n            title: '用户姓名',\r\n            align: \"center\",\r\n            dataIndex: 'uname'\r\n          }, {\r\n            title: '所在部门',\r\n            align: \"center\",\r\n            dataIndex: 'dname'\r\n          },\r\n          {\r\n            title: '状态',\r\n            align: \"center\",\r\n            dataIndex: 'status'\r\n          },\r\n        ],\r\n        columns2: [\r\n          {\r\n            title: '部门名称',\r\n            align: \"center\",\r\n            dataIndex: 'departName'\r\n          }\r\n        ],\r\n        columns3: [\r\n          {\r\n            title: '部门名称',\r\n            align: \"center\",\r\n            dataIndex: 'name'\r\n          }\r\n        ],\r\n        dataSource: [],\r\n        visible: false,\r\n        visible2: false,\r\n        confirmLoading: false,\r\n        actChoice: [],\r\n        selectedRowKeys2: [],\r\n        selectedRows2: [],\r\n\r\n        urls: {\r\n          departUsetQuery: '/oaBus/taskInAct/deptUsersQuery'\r\n        }\r\n      }\r\n    },\r\n    computed: {},\r\n    methods: {\r\n      statusJudge() {\r\n      },\r\n      //进页面 初始数据\r\n      showNextUsers(nextsActs) {\r\n\r\n        console.log('--->>>>', JSON.stringify(nextsActs))\r\n\r\n\r\n        this.nextsActs = nextsActs\r\n        //统计数量\r\n        for (let i of nextsActs) {\r\n          let inclusiveGateway = i.actMsg.inclusiveGateway\r\n          let parallelGateway = i.actMsg.parallelGateway\r\n          if (inclusiveGateway) {\r\n            this.typeCount.inclusive.push(i)\r\n          } else if (parallelGateway) {\r\n            this.typeCount.parallel.push(i)\r\n          } else {\r\n            this.typeCount.normal.push(i)\r\n          }\r\n          //记录节点\r\n          this.showPreClick(i, false, false, true)\r\n        }\r\n        //---------默认选择 第一个环节----------\r\n        this.clickAct(this.nextsActs[0]);\r\n\r\n        this.visible = true\r\n      },\r\n      handleTableChangeMy(rowKeys, rows) {\r\n        this.onSelectChange(rowKeys, rows)\r\n        //并记录用户\r\n        this.showPreClick(this.currentClick, false, true, false)\r\n      },\r\n      onSelectChangeMy2(rowKeys, rows) {\r\n        this.selectedRowKeys2 = rowKeys\r\n        this.selectedRows2 = rows\r\n      },\r\n      //点击部门行 选中\r\n      departClickCheck(res) {\r\n        return {\r\n          on: {\r\n            click: () => {\r\n              let rowkeys = this.selectedRowKeys;\r\n              let selectionRows = this.selectionRows;\r\n              if (rowkeys.length > 0 && rowkeys.includes(res.id)) {\r\n                rowkeys.splice(rowkeys.indexOf(res.id), 1);\r\n                selectionRows.splice(rowkeys.indexOf(res), 1);\r\n              } else {\r\n                rowkeys.push(res.id);\r\n                selectionRows.push(res);\r\n              }\r\n              this.selectedRowKeys = rowkeys;\r\n              this.selectionRows = selectionRows;\r\n\r\n            }\r\n          }\r\n        }\r\n      },\r\n      //点击单选行 选中\r\n      setRowRadio(res) {\r\n        return {\r\n          on: {\r\n            click: () => {\r\n              let keys = [];\r\n              keys.push(res.uid);\r\n              this.selectedRowKeys = keys;\r\n\r\n              //记录用户选择\r\n              this.showPreClick(this.currentClick, false, true, false)\r\n            }\r\n          }\r\n        }\r\n      },\r\n      //点击复选行 选中\r\n      setRowCheck(res) {\r\n        return {\r\n          on: {\r\n            click: () => {\r\n              let rowkeys = this.selectedRowKeys;\r\n              if (rowkeys.length > 0 && rowkeys.includes(res.uid)) {\r\n                rowkeys.splice(rowkeys.indexOf(res.uid), 1);\r\n              } else {\r\n                rowkeys.push(res.uid);\r\n              }\r\n              this.selectedRowKeys = rowkeys;\r\n\r\n              //记录用户选择\r\n              this.showPreClick(this.currentClick, false, true, false)\r\n            }\r\n          }\r\n        }\r\n      },\r\n      customRowMy(res) {\r\n        return {\r\n          on: {\r\n            click: () => {\r\n              let rowkeys = this.selectedRowKeys2;\r\n              if (rowkeys.length > 0 && rowkeys.includes(res.id)) {\r\n                rowkeys.splice(rowkeys.indexOf(res.id), 1);\r\n              } else {\r\n                rowkeys.push(res.id);\r\n              }\r\n              this.selectedRowKeys2 = rowkeys;\r\n            }\r\n          }\r\n        }\r\n      },\r\n      //部门选\r\n      onChangeCheck(item) {\r\n        var id = (item.target.value).split('-')[0]\r\n        var type = (item.target.value).split('-')[1]\r\n        //修改数据属性(修改选中状态用来向左边传)\r\n        for (var i in  this.departSelect[type]) {\r\n          if (id == this.departSelect[type][i].id) {\r\n            this.departSelect[type][i].checked = true\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * 记录本次点击\r\n       * 包容，并行：第一次点击：仅记录初始信息 每勾选/变更一次用户 就更新本节点选择\r\n       * 普通[不记录暂时]：每次都是新数据\r\n       * come 标识部门选择的来源(或者change事件过来的) false true\r\n       */\r\n      showPreClick(item, isMock, isChange, isShowNext) {\r\n\r\n\r\n        //TODO 仅标识 @1.1 ###################################### 各种属性判断 #############################################\r\n        //记录当前点击的节点 用于属性填充\r\n        this.currentClick = item\r\n        //是否是多选\r\n        this.isMul = item.actMsg.allowMulti && item.oaProcActinst.multAssignee\r\n        //是否选部门\r\n        this.isDept = (item.oaProcActinst.userOrRole) == 'dept'\r\n\r\n\r\n        //TODO 仅标识 @1.2 ############################################  数据源 ###########################################\r\n        if (!this.isDept) {\r\n          this.dataSource = item.nextUsers\r\n        }\r\n\r\n        //节点性质(普通节点还是并行/包容)\r\n        let isNormal = true\r\n\r\n\r\n        //判断是否是已经记录过\r\n        let haveRecord = false\r\n        let isParallel = item.actMsg.parallelGateway\r\n        let isInclusive = item.actMsg.inclusiveGateway\r\n\r\n        //如果不是并行/包容就 不是普通性质\r\n        if (isParallel || isInclusive) isNormal = false\r\n\r\n        // if (!isNormal) {//不是普通节点 判断是否记录过\r\n        let act = this.gateWayTypeSelect.inclusive[item.actMsg.id]\r\n        let act1 = this.gateWayTypeSelect.parallel[item.actMsg.id]\r\n        let act2 = this.gateWayTypeSelect.normal[item.actMsg.id]\r\n        if (act != undefined || act1 != undefined || act2 != undefined) {\r\n          haveRecord = true\r\n        }\r\n        // }\r\n\r\n\r\n        //TODO 仅标识  @2 ############################################ 数据回显/初始化 ###################################\r\n\r\n        //判断类型是并行还是包容//并记录选择的内容\r\n        let select = {}\r\n        //记录节点属性\r\n        select['activity'] = item\r\n        if (this.isDept) {\r\n          this.selectedRowKeys = []\r\n          this.selectionRows = []\r\n          //部门\r\n          if (haveRecord && !isNormal) {\r\n            let current = null\r\n            //使用已经记录的数据\r\n            if (isMock) {//是穿梭框过来的用选择的数据覆盖记录数据\r\n              // this.deptsList = item.oaProcActinst.deptsList\r\n              select['deptsList'] = this.deptsList\r\n              select['departSelect'] = this.departSelect\r\n              select['departUsersId'] = this.departUsersId\r\n              select['departUsersMsg'] = this.departUsersMsg\r\n              current = select\r\n            } else {//用记录的数据覆盖 显示数据\r\n              //是并行里的还是 包容里的\r\n\r\n              if (isParallel) {\r\n                current = this.gateWayTypeSelect.parallel[item.actMsg.id]\r\n              }\r\n              if (isInclusive) {\r\n                current = this.gateWayTypeSelect.inclusive[item.actMsg.id]\r\n              }\r\n              select = current\r\n              this.deptsList = current.deptsList\r\n              this.departSelect = current.departSelect\r\n              this.departUsersId = current.departUsersId\r\n              this.departUsersMsg = current.departUsersMsg\r\n            }\r\n\r\n            this.mockData = []\r\n\r\n            if (current != undefined && current != null) {\r\n              let ids = []\r\n              for (let k in current.departSelect) {\r\n                for (let u in current.departSelect[k]) {\r\n                  ids.push(current.departSelect[k][u].id)\r\n                }\r\n              }\r\n              for (let i in item.nextUsers) {\r\n                let id = item.nextUsers[i].id\r\n                if (ids.indexOf(id) == -1) {\r\n                  this.mockData.push(item.nextUsers[i])\r\n                }\r\n              }\r\n            }\r\n          }\r\n          if ((isNormal && !isMock) || !haveRecord) {//是普通性质，或者初次点击进入\r\n            this.selectionRows = []\r\n            this.selectedRowKeys = []\r\n            this.deptsList = item.oaProcActinst.deptsList\r\n            select['deptsList'] = item.oaProcActinst.deptsList\r\n            select['departSelect'] = {}\r\n            select['departUsersId'] = {}\r\n            select['departUsersMsg'] = {}\r\n            for (var x in  select.deptsList) {\r\n              //TODO 仅标识*******备选信息用于页面展示\r\n              this.departSelect[this.deptsList [x]] = []\r\n              this.departUsersId[this.deptsList [x]] = []\r\n              this.departUsersMsg[this.deptsList [x]] = []\r\n              //TODO 仅标识******** 记录节点属性用于回显(包容/并行)\r\n              //构造备选集合\r\n              select['departSelect'][select.deptsList [x]] = []\r\n              //部门选择用户集合构造\r\n              select['departUsersId'][select.deptsList [x]] = []\r\n              //备选用户完整信息\r\n              select['departUsersMsg'][select.deptsList [x]] = []\r\n            }\r\n            this.mockData = item.nextUsers\r\n          }\r\n\r\n        } else {//选人的\r\n\r\n\r\n          if (isChange) {//用选择的数据覆盖 记录数据\r\n            select.selectedRowKeys = this.selectedRowKeys\r\n            select.selectionRows = this.selectionRows\r\n          }\r\n          if (haveRecord && !isNormal) {\r\n            //已经记录并且是 (包容/并行)性质 用记录的覆盖\r\n            //是点击进来的还是 通过change事件进来的\r\n            // isChange\r\n            if (!isChange) {//用记录的数据回显 显示数据\r\n              let current = null\r\n              if (isParallel) {\r\n                current = this.gateWayTypeSelect.parallel[item.actMsg.id]\r\n              }\r\n              if (isInclusive) {\r\n                current = this.gateWayTypeSelect.inclusive[item.actMsg.id]\r\n              }\r\n              select = current\r\n              if (current != null && current != undefined) {\r\n                this.selectedRowKeys = current.selectedRowKeys\r\n                this.selectionRows = current.selectionRows\r\n              }\r\n            }\r\n          }\r\n\r\n          //默认选中第一个\r\n          if (this.dataSource.length > 0 && !isShowNext && !isChange) {\r\n            if (this.selectedRowKeys.length == 0 || isNormal) {\r\n              let defaultSelected = []\r\n              defaultSelected.push(this.dataSource[0].uid)\r\n              this.selectedRowKeys = defaultSelected\r\n              select.selectedRowKeys = this.selectedRowKeys\r\n              select.selectionRows = this.selectionRows\r\n            }\r\n          }\r\n          if ((isNormal && !isChange) || !haveRecord) {//普通节点 或者是 初次点击\r\n\r\n            //没有选的情况下默认选中表格第一个\r\n            // this.selectedRowKeys = []\r\n            // this.selectionRows = []\r\n            select.selectedRowKeys = this.selectedRowKeys\r\n            select.selectionRows = this.selectionRows\r\n          }\r\n        }\r\n\r\n        if (isInclusive) {\r\n          this.gateWayTypeSelect.inclusive[item.actMsg.id] = select\r\n        }\r\n        if (isParallel) {\r\n          this.gateWayTypeSelect.parallel[item.actMsg.id] = select\r\n        }\r\n        if (isNormal) {\r\n          this.gateWayTypeSelect.normal = {}\r\n          this.gateWayTypeSelect.normal[item.actMsg.id] = select\r\n        }\r\n\r\n        // ////console.log('----------------网关记录：：：', JSON.stringify(this.gateWayTypeSelect))\r\n      },\r\n      //点击某一节点---选择节点相关信息\r\n      clickAct(item) {\r\n\r\n        /**\r\n         *  (包容/并行网关)展示上一节点的选择信息\r\n         */\r\n        this.showPreClick(item, false, false, false)\r\n\r\n      },\r\n      confirm() {\r\n\r\n        // //时间校验\r\n        // this.timeCheckMethod()\r\n        //校验并行与包容\r\n        let palllen = this.typeCount.parallel.length\r\n        let ialllen = this.typeCount.inclusive.length\r\n        if (palllen == 0 && ialllen == 0) {//非包容/并行\r\n          this.singleType()\r\n        } else {//包容/并行\r\n          this.gateWayCheck()\r\n          // this.moreThanOneType()\r\n        }\r\n      },\r\n      //并行或包容\r\n      moreThanOneType() {\r\n\r\n        this.$emit('confirmNextUsersMore', this.gateWayTypeSelect, this.endTime)\r\n      },\r\n      //时间校验\r\n      timeCheckMethod() {\r\n        if (this.timeCheck) {\r\n          if (this.endTime == '') {\r\n            this.$message.error('请选择办理结束时间')\r\n            return\r\n          }\r\n          if (new Date() > new Date(this.endTime)) {\r\n            this.$message.error('办理结束时间不得小于当前时间')\r\n            return\r\n          }\r\n        }\r\n      },\r\n      confirm2() {\r\n        // console.log('=====================LLLLLLLLLLLLLLLL:::', this.selectedRowKeys2)\r\n\r\n        let isPass = this.moreThanOneUserCheck();\r\n        if (isPass) {\r\n          this.moreThanOneType()\r\n          //关闭\r\n          this.visible2 = false\r\n          this.visible = false\r\n        }\r\n      },\r\n      cancel2() {\r\n        this.visible2 = false\r\n      },\r\n      recordChoice(acts, choices) {\r\n\r\n        for (let i in choices) {\r\n          let act = choices[i]\r\n          let isDept = act.activity.oaProcActinst.userOrRole == 'dept'\r\n          if (isDept) {\r\n            let deptSelect = act.departSelect\r\n            for (let i in deptSelect) {\r\n              if (deptSelect[i].length > 0) {\r\n                acts.push(act.activity.actMsg)\r\n                this.selectedRowKeys2.push(act.activity.actMsg.id)\r\n                break\r\n              }\r\n            }\r\n          } else {\r\n            if (act.selectedRowKeys.length > 0) {\r\n              acts.push(act.activity.actMsg)\r\n              this.selectedRowKeys2.push(act.activity.actMsg.id)\r\n            }\r\n          }\r\n        }\r\n\r\n      },\r\n      //并行网关校验\r\n      parallelCheck(acts) {\r\n        let keys = []\r\n        for (let i in this.gateWayTypeSelect.parallel) {\r\n          keys.push(i)\r\n        }\r\n\r\n        for (let i in acts) {\r\n          keys.splice(keys.indexOf(acts[i].id), 1)\r\n        }\r\n\r\n        if (keys.length > 0) {\r\n          const h = this.$createElement;\r\n\r\n          let names = []\r\n          for (let i of keys) {\r\n            names.push(h('p', `${this.gateWayTypeSelect.parallel[i].activity.actMsg.name}`))\r\n          }\r\n\r\n          let content_ = h('div', {}, names)\r\n\r\n          const modal = this.$error({\r\n            title: '以下节点共属于并行网关，必须选择用户',\r\n            content: content_,\r\n          });\r\n\r\n          return false\r\n        } else {\r\n          return true\r\n        }\r\n      },\r\n      //包容/并行网关校验\r\n      gateWayCheck() {\r\n\r\n        let acts = []\r\n        this.selectedRowKeys2 = []\r\n        this.recordChoice(acts, this.gateWayTypeSelect.parallel)\r\n        this.recordChoice(acts, this.gateWayTypeSelect.inclusive)\r\n        this.recordChoice(acts, this.gateWayTypeSelect.normal)\r\n\r\n        this.selectedRows2 = acts\r\n\r\n        let isShow = this.parallelCheck(acts);\r\n\r\n        if (isShow) {\r\n          this.visible2 = true\r\n          this.actChoice = acts\r\n        }\r\n\r\n      },\r\n      moreThanOneUserCheck() {\r\n\r\n\r\n        for (let i in this.selectedRowKeys2) {\r\n          let act = this.selectedRows2[i]\r\n          let id = act.id\r\n          let inclusiveGateway = act.inclusiveGateway\r\n          let parallelGateway = act.parallelGateway\r\n\r\n          let currentAct = null\r\n          if (inclusiveGateway) {\r\n            currentAct = this.gateWayTypeSelect.inclusive[id]\r\n          }\r\n          if (parallelGateway) {\r\n            currentAct = this.gateWayTypeSelect.parallel[id]\r\n          }\r\n          if (!parallelGateway && !inclusiveGateway) {\r\n            currentAct = this.gateWayTypeSelect.normal[id]\r\n          }\r\n\r\n          let isDept = currentAct.activity.oaProcActinst.userOrRole == 'dept'\r\n          let name = currentAct.activity.actMsg.name\r\n\r\n          if (isDept) {\r\n            let haveUser = false\r\n            for (let i in currentAct.departUsersId) {\r\n              let uids = currentAct.departUsersId[i]\r\n              if (i.indexOf(\"主办\") >= 0) {\r\n                if (uids.length <= 0) {\r\n                  this.$message.error(name + \" 环节，主办部门必须选择用户\")\r\n                  return false\r\n                }\r\n              }\r\n              if (uids.length > 0) {\r\n                haveUser = true\r\n              }\r\n\r\n              if (!haveUser) {\r\n                this.$message.error(name + ' 环节,部门至少选择一组用户')\r\n                return false\r\n              }\r\n            }\r\n\r\n          } else {\r\n            if (currentAct.selectedRowKeys.length <= 0) {\r\n              this.$message.error(name + ' 环节未选择用户')\r\n              return false\r\n            }\r\n          }\r\n        }\r\n        //构造参数\r\n        // keys\r\n        this.constructorParams(this.selectedRowKeys2, this.gateWayTypeSelect.parallel)\r\n        this.constructorParams(this.selectedRowKeys2, this.gateWayTypeSelect.inclusive)\r\n        this.constructorParams(this.selectedRowKeys2, this.gateWayTypeSelect.normal)\r\n\r\n        // console.log('~~~~~~~~~~~~~~~~~~', JSON.stringify(this.gateWayTypeSelect))\r\n\r\n        return true\r\n      },\r\n      constructorParams(keys, tasks) {\r\n        //console.log('-----------keys:::', JSON.stringify(keys))\r\n        for (let k in tasks) {\r\n          if (keys.indexOf(k) < 0) {\r\n            //改变完成条件\r\n            let conditionContext = tasks[k].activity.actMsg.conditionContext\r\n            if (conditionContext != undefined && conditionContext != null) {\r\n              for (let i in conditionContext) {\r\n                conditionContext[i] = 'no-' + conditionContext[i]\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n      },\r\n      //非包容/并行网关办理方式\r\n      singleType() {\r\n        var ids = []\r\n        if (this.isDept) {\r\n\r\n          let ids = []\r\n          let depMSg = {}\r\n          for (let i in this.departUsersId) {\r\n\r\n            if (i.indexOf(\"主办\") >= 0 && this.departUsersId[i].length == 0) {\r\n              this.$message.error(i + \"部门必须选择用户\")\r\n              return\r\n            }\r\n\r\n            if (this.departUsersId[i].length > 0) {\r\n              ids.push(this.departUsersId[i])\r\n              depMSg[i] = this.departUsersId[i]\r\n            }\r\n          }\r\n          // ////console.log('==========部门：：：', ids, JSON.stringify(this.currentClick))\r\n          //校验\r\n          this.$emit('func', ids, this.currentClick, this.endTime, depMSg)\r\n          this.cancel()\r\n        } else if (this.endType) {\r\n          this.$emit('func', ids, this.currentClick, this.endTime)\r\n          this.cancel()\r\n        } else {\r\n          //办理人校验\r\n          if (this.selectedRowKeys.length <= 0) {\r\n            this.$message.error(\"请选择办理人\")\r\n            return\r\n          }\r\n          ids = this.selectedRowKeys\r\n\r\n          // ////console.log('------普通：' + ids, JSON.stringify(this.currentClick))\r\n          //办理流程\r\n          this.$emit('func', ids, this.currentClick, this.endTime)\r\n          this.cancel()\r\n        }\r\n      },\r\n      //穿梭方法实现\r\n      toRight: function (item) {\r\n        //从部门列表中移除--添加到对应的list中\r\n        //1 主办部门只能有一个\r\n\r\n        if (item.indexOf(\"主办\") >= 0) {\r\n          //判断是否已经有元素了\r\n          if (((this.departSelect[item].length == 0 && this.selectionRows.length > 1)) || (this.departSelect[item].length > 0)) {\r\n            this.$message.error(\"主办部门只允许有一个\")\r\n            return\r\n          }\r\n        }\r\n        //2 添加到右边--移除左边\r\n        var del = {}\r\n        for (var i in this.selectionRows) {\r\n          this.selectionRows[i].checked = false\r\n          //右边\r\n          this.departSelect[item].push(this.selectionRows[i])\r\n          //移除元素\r\n          del[this.selectionRows[i].id] = 1\r\n        }\r\n\r\n        //移除元素(采用重新赋值的方式)\r\n        var mockData2 = []\r\n        for (var j = 0; j < this.mockData.length; j++) {\r\n          if (del[this.mockData[j].id] != 1) {\r\n            mockData2.push(this.mockData[j])\r\n          }\r\n        }\r\n        this.mockData = mockData2\r\n        //清空所选\r\n        this.selectionRows = []\r\n        this.selectedRowKeys = []\r\n        // 更新用户显示\r\n        this.currentDeptUserQuery(item)\r\n\r\n\r\n      },\r\n      toLeft(item) {\r\n        //添加到部门列表中--从list中移除\r\n\r\n        var right = []\r\n        for (var i in this.departSelect[item]) {\r\n          var itt = this.departSelect[item][i]\r\n          if (itt.checked) {\r\n            itt.checked = false\r\n            this.mockData.push(itt)\r\n          } else {\r\n            right.push(itt)\r\n          }\r\n        }\r\n        //改变右边\r\n        this.departSelect[item] = right\r\n        // 更新用户显示\r\n        this.currentDeptUserQuery(item)\r\n\r\n      },\r\n      /**\r\n       * 选中部门的用户查询\r\n       * @param item\r\n       */\r\n      currentDeptUserQuery(item) {\r\n\r\n        var role = this.currentClick.oaProcActinst.candidates\r\n        var depts = this.departSelect\r\n\r\n        var param = {}\r\n        param.role = role\r\n        param.depts = depts\r\n\r\n        if (depts[item].length == 0) {\r\n          this.departUsersId[item] = []\r\n          this.departUsersMsg[item] = []\r\n          let keys = []\r\n          let rows = []\r\n          this.onSelectChange(keys, rows)\r\n          return\r\n        }\r\n\r\n        //查询部门对应的用户id 分组\r\n        postAction(this.urls.departUsetQuery, param).then(res => {\r\n          if (res.success) {\r\n            // ////console.log('-------------->>>', JSON.stringify(res.result[item]))\r\n            if (res.result[item].length == 0) {\r\n              this.$message.error('所选' + item + '部门没有对应角色的用户')\r\n              this.departUsersId[item] = []\r\n              this.departUsersMsg[item] = []\r\n              let keys = []\r\n              let rows = []\r\n              this.onSelectChange(keys, rows)\r\n              return\r\n            } else {\r\n              let ids = []\r\n              for (let i in res.result[item]) {\r\n                ids.push(res.result[item][i].id)\r\n              }\r\n              this.departUsersId[item] = ids\r\n              this.departUsersMsg[item] = res.result[item]\r\n\r\n              let keys = []\r\n              let rows = []\r\n              this.onSelectChange(keys, rows)\r\n\r\n              //记录用户选择\r\n              this.showPreClick(this.currentClick, true, false)\r\n            }\r\n          } else {\r\n            this.$message.error(res.message)\r\n            return\r\n          }\r\n        })\r\n\r\n      }\r\n      ,\r\n      cancel() {\r\n        //初始数据\r\n        this.dataInit()\r\n\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      }\r\n      ,\r\n      onChange(date, dateString) {\r\n        this.endTime = dateString\r\n      }\r\n      ,\r\n      changeChoice(e) {\r\n        if (e.target.value == 1) {\r\n          //不限时间\r\n          this.timeCheck = false\r\n        } else {\r\n          this.timeCheck = true\r\n        }\r\n      }\r\n      ,\r\n      dataInit() {\r\n        this.selectionRows = []\r\n        this.selectedRowKeys = []\r\n        this.endTime = ''\r\n      },\r\n      /**\r\n       * 全选/不选\r\n       */\r\n      onCheckAllChange(e) {\r\n        let checked = e.target.checked\r\n        let type = e.target.id\r\n        if (checked) {\r\n          //修改数据属性\r\n          for (var i in  this.departSelect[type]) {\r\n            this.departSelect[type][i].checked = true\r\n            this.$refs[type][i].checked = true\r\n          }\r\n        } else {\r\n          for (var i in  this.departSelect[type]) {\r\n            this.departSelect[type][i].checked = false\r\n            this.$refs[type][i].checked = false\r\n\r\n          }\r\n        }\r\n      },\r\n    },\r\n\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  .box {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n\r\n    .left {\r\n      width: 30%;\r\n    }\r\n\r\n    .right {\r\n      width: 69%;\r\n      height: 400px;\r\n      /*background: #dddddd;*/\r\n      overflow-y: scroll;\r\n\r\n\r\n      .box1 {\r\n        width: 100%;\r\n        display: flex;\r\n        align-items: flex-start;\r\n        justify-content: space-between;\r\n        /*background: darkcyan;*/\r\n\r\n        .rightRight {\r\n          /*width: 90%;*/\r\n          width: 50%;\r\n          height: 120px;\r\n          /*background: #fff;*/\r\n          margin-left: 150px;\r\n          margin-right: 1px;\r\n          margin-top: 12px;\r\n          overflow-y: scroll;\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n\r\n    .rightRight1 {\r\n      /*width: 90%;*/\r\n      width: 50%;\r\n      height: 120px;\r\n      /*background: #fff;*/\r\n      margin-left: 1px;\r\n      margin-right: 10px;\r\n      margin-top: 10px;\r\n      overflow-y: scroll;\r\n    }\r\n\r\n\r\n    .rightLeft {\r\n      width: 5%;\r\n    }\r\n\r\n\r\n  }\r\n</style>"]}]}