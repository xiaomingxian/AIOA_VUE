{"remainingRequest":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\PasswordModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\PasswordModal.vue","mtime":1568535265000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {changPassword} from '@/api/api'\n\nexport default {\n  name: \"PasswordModal\",\n  data () {\n    return {\n      visible: false,\n      confirmLoading: false,\n      confirmDirty: false,\n      validatorRules:{\n        password:{\n          rules: [{\n            required: true,\n            pattern:/^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/,\n            message: '密码由8位数字、大小写字母和特殊符号组成!'\n          }, {\n            validator: this.validateToNextPassword,\n          }],\n        },\n        confirmpassword:{\n          rules: [{\n            required: true, message: '请重新输入登陆密码!',\n          }, {\n            validator: this.compareToFirstPassword,\n          }],\n        },\n      },\n\n      model: {},\n\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n      form:this.$form.createForm(this)\n    }\n  },\n  created () {\n    console.log(\"created\");\n  },\n\n  methods: {\n    show (username) {\n      this.form.resetFields();\n      this.visible = true;\n      this.model.username = username;\n      this.$nextTick(() => {\n        this.form.setFieldsValue({username:username});\n      });\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false;\n      this.selectedRole = [];\n    },\n    handleSubmit () {\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          this.confirmLoading = true;\n          let formData = Object.assign(this.model, values);\n          changPassword(formData).then((res)=>{\n            if(res.success){\n              this.$message.success(res.message);\n              this.$emit('ok');\n            }else{\n              this.$message.warning(res.message);\n            }\n          }).finally(() => {\n            this.confirmLoading = false;\n            this.close();\n          });\n        }\n      })\n    },\n    handleCancel () {\n      this.close()\n    },\n    validateToNextPassword  (rule, value, callback) {\n      const form = this.form;\n      const confirmpassword=form.getFieldValue('confirmpassword');\n      console.log(\"confirmpassword==>\",confirmpassword);\n      if (value && confirmpassword && value !== confirmpassword) {\n        callback('两次输入的密码不一样！');\n      }\n      if (value && this.confirmDirty) {\n        form.validateFields(['confirm'], { force: true })\n      }\n      callback();\n    },\n    compareToFirstPassword  (rule, value, callback) {\n      const form = this.form;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入的密码不一样！');\n      } else {\n        callback()\n      }\n    },\n    handleConfirmBlur  (e) {\n      const value = e.target.value\n      this.confirmDirty = this.confirmDirty || !!value\n    }\n  }\n}\n",{"version":3,"sources":["PasswordModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"PasswordModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\r\n  <a-modal\r\n    title=\"重新设定密码\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleSubmit\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\"\r\n    style=\"top:20px;\"\r\n  >\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <a-form-item label=\"用户账号\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input placeholder=\"请输入用户账号\" v-decorator=\"[ 'username', {}]\" :readOnly=\"true\"/>\r\n        </a-form-item>\r\n\r\n        <a-form-item label=\"登陆密码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" hasFeedback >\r\n          <a-input type=\"password\" placeholder=\"请输入登陆密码\" v-decorator=\"[ 'password', validatorRules.password]\" />\r\n        </a-form-item>\r\n\r\n        <a-form-item label=\"确认密码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" hasFeedback >\r\n          <a-input type=\"password\" @blur=\"handleConfirmBlur\" placeholder=\"请重新输入登陆密码\" v-decorator=\"[ 'confirmpassword', validatorRules.confirmpassword]\"/>\r\n        </a-form-item>\r\n\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import {changPassword} from '@/api/api'\r\n\r\n  export default {\r\n    name: \"PasswordModal\",\r\n    data () {\r\n      return {\r\n        visible: false,\r\n        confirmLoading: false,\r\n        confirmDirty: false,\r\n        validatorRules:{\r\n          password:{\r\n            rules: [{\r\n              required: true,\r\n              pattern:/^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/,\r\n              message: '密码由8位数字、大小写字母和特殊符号组成!'\r\n            }, {\r\n              validator: this.validateToNextPassword,\r\n            }],\r\n          },\r\n          confirmpassword:{\r\n            rules: [{\r\n              required: true, message: '请重新输入登陆密码!',\r\n            }, {\r\n              validator: this.compareToFirstPassword,\r\n            }],\r\n          },\r\n        },\r\n\r\n        model: {},\r\n\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n        form:this.$form.createForm(this)\r\n      }\r\n    },\r\n    created () {\r\n      console.log(\"created\");\r\n    },\r\n\r\n    methods: {\r\n      show (username) {\r\n        this.form.resetFields();\r\n        this.visible = true;\r\n        this.model.username = username;\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue({username:username});\r\n        });\r\n      },\r\n      close () {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n        this.disableSubmit = false;\r\n        this.selectedRole = [];\r\n      },\r\n      handleSubmit () {\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            this.confirmLoading = true;\r\n            let formData = Object.assign(this.model, values);\r\n            changPassword(formData).then((res)=>{\r\n              if(res.success){\r\n                this.$message.success(res.message);\r\n                this.$emit('ok');\r\n              }else{\r\n                this.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              this.confirmLoading = false;\r\n              this.close();\r\n            });\r\n          }\r\n        })\r\n      },\r\n      handleCancel () {\r\n        this.close()\r\n      },\r\n      validateToNextPassword  (rule, value, callback) {\r\n        const form = this.form;\r\n        const confirmpassword=form.getFieldValue('confirmpassword');\r\n        console.log(\"confirmpassword==>\",confirmpassword);\r\n        if (value && confirmpassword && value !== confirmpassword) {\r\n          callback('两次输入的密码不一样！');\r\n        }\r\n        if (value && this.confirmDirty) {\r\n          form.validateFields(['confirm'], { force: true })\r\n        }\r\n        callback();\r\n      },\r\n      compareToFirstPassword  (rule, value, callback) {\r\n        const form = this.form;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n          callback('两次输入的密码不一样！');\r\n        } else {\r\n          callback()\r\n        }\r\n      },\r\n      handleConfirmBlur  (e) {\r\n        const value = e.target.value\r\n        this.confirmDirty = this.confirmDirty || !!value\r\n      }\r\n    }\r\n  }\r\n</script>"]}]}