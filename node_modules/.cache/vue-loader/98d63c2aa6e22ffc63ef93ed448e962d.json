{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\mytask\\taskHaveDone.vue?vue&type=style&index=0&id=fceecdba&lang=scss&scoped=true&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\mytask\\taskHaveDone.vue","mtime":1579588141782},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\css-loader\\index.js","mtime":1570780111199},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1570779225817},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\postcss-loader\\src\\index.js","mtime":1570780438513},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\sass-loader\\lib\\loader.js","mtime":1570780529612},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["\n\n.ant-input {\n  background-color: #f0f5fc;\n}\n\n.ant-select-selection--single {\n  background-color: #f0f5fc !important;\n}\n\n.ant-table-thead > tr > th {\n  color: #fff;\n  background-color: #006db9;\n  border: none !important;\n}\n\n/deep/ .ant-table-middle .ant-table-tbody > tr:hover {\n  cursor: pointer;\n}\n\n.light-row {\n  background-color: #fff;\n}\n\n\n.dark-row {\n  /*background:linear-gradient(to bottom,rgb(221,221,255),rgb(167,196,255)) repeat scroll 0% 0%;*/\n  background-color: #c2d9f8;\n}\n\n.dark-row:hover {\n  background-color: #ffadd2;\n}\n\n.ant-table-middle .ant-table-tbody .ant-table-row-selected {\n  background-color: #000 !important;\n}\n\n/*.ant-tabs-nav-scroll{*/\n/*height:39px;*/\n/*}*/\n\n/*.ant-card-body .ant-tabs-bar{*/\n/*border:none;*/\n/*}*/\n\n/*.ant-card-body .ant-tabs-nav{*/\n/*!*background-color: #ffadd2;*!*/\n/*border:1px solid #909090;*/\n/*border-radius: 25%;*/\n/*height: 27px;*/\n/*top: 5px;*/\n/*}*/\n\n/*.ant-card-body .ant-tabs-bar .ant-tabs-tab{*/\n/*font-size: 14px;*/\n/*padding-top: 2px;*/\n/*margin-right: 0px;*/\n/*bottom: 1px;*/\n/*}*/\n\n/*.ant-card-body .ant-tabs-bar .ant-tabs-tab:hover{*/\n/*color: #0061cb;*/\n/*}*/\n\n/*.ant-card-body .ant-tabs-bar .ant-tabs-tab-active{*/\n/*color: #fff;*/\n/*background-color: #7d70ff;*/\n/*border-radius: 27%;*/\n/*height:27px;*/\n/*}*/\n/*.ant-card-body .ant-tabs-bar .ant-tabs-ink-bar-animated{*/\n/*display: none !important;*/\n/*}*/\n\n.table-page-search-submitButtons .ant-btn {\n  background: linear-gradient(180deg, rgba(115, 128, 255, 1), rgba(47, 86, 255, 1)) repeat scroll 0% 0%;\n}\n\n.table-page-search-submitButtons .ant-btn svg {\n  fill: cyan;\n}\n\n[v-cloak] {\n  display: none;\n}\n\n",{"version":3,"sources":["taskHaveDone.vue"],"names":[],"mappings":";;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"taskHaveDone.vue","sourceRoot":"src/views/mytask","sourcesContent":["<style lang=\"scss\" scoped>\r\n\r\n  .ant-input {\r\n    background-color: #f0f5fc;\r\n  }\r\n\r\n  .ant-select-selection--single {\r\n    background-color: #f0f5fc !important;\r\n  }\r\n\r\n  .ant-table-thead > tr > th {\r\n    color: #fff;\r\n    background-color: #006db9;\r\n    border: none !important;\r\n  }\r\n\r\n  /deep/ .ant-table-middle .ant-table-tbody > tr:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .light-row {\r\n    background-color: #fff;\r\n  }\r\n\r\n\r\n  .dark-row {\r\n    /*background:linear-gradient(to bottom,rgb(221,221,255),rgb(167,196,255)) repeat scroll 0% 0%;*/\r\n    background-color: #c2d9f8;\r\n  }\r\n\r\n  .dark-row:hover {\r\n    background-color: #ffadd2;\r\n  }\r\n\r\n  .ant-table-middle .ant-table-tbody .ant-table-row-selected {\r\n    background-color: #000 !important;\r\n  }\r\n\r\n  /*.ant-tabs-nav-scroll{*/\r\n  /*height:39px;*/\r\n  /*}*/\r\n\r\n  /*.ant-card-body .ant-tabs-bar{*/\r\n  /*border:none;*/\r\n  /*}*/\r\n\r\n  /*.ant-card-body .ant-tabs-nav{*/\r\n  /*!*background-color: #ffadd2;*!*/\r\n  /*border:1px solid #909090;*/\r\n  /*border-radius: 25%;*/\r\n  /*height: 27px;*/\r\n  /*top: 5px;*/\r\n  /*}*/\r\n\r\n  /*.ant-card-body .ant-tabs-bar .ant-tabs-tab{*/\r\n  /*font-size: 14px;*/\r\n  /*padding-top: 2px;*/\r\n  /*margin-right: 0px;*/\r\n  /*bottom: 1px;*/\r\n  /*}*/\r\n\r\n  /*.ant-card-body .ant-tabs-bar .ant-tabs-tab:hover{*/\r\n  /*color: #0061cb;*/\r\n  /*}*/\r\n\r\n  /*.ant-card-body .ant-tabs-bar .ant-tabs-tab-active{*/\r\n  /*color: #fff;*/\r\n  /*background-color: #7d70ff;*/\r\n  /*border-radius: 27%;*/\r\n  /*height:27px;*/\r\n  /*}*/\r\n  /*.ant-card-body .ant-tabs-bar .ant-tabs-ink-bar-animated{*/\r\n  /*display: none !important;*/\r\n  /*}*/\r\n\r\n  .table-page-search-submitButtons .ant-btn {\r\n    background: linear-gradient(180deg, rgba(115, 128, 255, 1), rgba(47, 86, 255, 1)) repeat scroll 0% 0%;\r\n  }\r\n\r\n  .table-page-search-submitButtons .ant-btn svg {\r\n    fill: cyan;\r\n  }\r\n\r\n  [v-cloak] {\r\n    display: none;\r\n  }\r\n\r\n</style>\r\n\r\n<template>\r\n  <a-card :bordered=\"false\">\r\n\r\n    <!-- 查询区域 -->\r\n    <div class=\"table-page-search-wrapper\">\r\n      <a-form layout=\"inline\">\r\n        <a-row :gutter=\"24\">\r\n          <a-col :md=\"6\" :sm=\"8\">\r\n            <a-form-item label=\"标题\">\r\n              <a-input placeholder=\"标题\" v-model=\"queryParam.dataTitle\"></a-input>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :md=\"6\" :sm=\"8\">\r\n            <a-form-item label=\"文件字号\">\r\n              <a-input placeholder=\"文件字号\" v-model=\"queryParam.fileNum\"></a-input>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :md=\"4\" :sm=\"5\">\r\n            <a-form-item label=\"是否领导关注\">\r\n              <a-select style=\"width: 80px\" v-model=\"queryParam.iImport\">\r\n                <a-select-option value=\"1\">是</a-select-option>\r\n                <a-select-option value=\"0\">否</a-select-option>\r\n              </a-select>\r\n            </a-form-item>\r\n          </a-col>\r\n\r\n\r\n          <template v-if=\"toggleSearchStatus\">\r\n            <a-col :md=\"6\" :sm=\"8\">\r\n              <a-form-item label=\"拟稿人\">\r\n                <a-input placeholder=\"拟稿人\" v-model=\"queryParam.createName\"></a-input>\r\n              </a-form-item>\r\n            </a-col>\r\n\r\n            <a-col :md=\"6\" :sm=\"8\">\r\n\r\n              <a-form-item label=\"任务类型\">\r\n                <a-select style=\"width: 150px\" @change=\"taskTypeChange\" v-model=\"queryParam.taskType\">\r\n                  <a-select-option value=\"全部\">全部</a-select-option>\r\n                  <a-select-option value=\"传阅\">传阅</a-select-option>\r\n                  <a-select-option value=\"主办\">主办</a-select-option>\r\n                  <a-select-option value=\"辅办\">辅办</a-select-option>\r\n                </a-select>\r\n              </a-form-item>\r\n            </a-col>\r\n            <a-col :md=\"6\" :sm=\"8\">\r\n              <a-form-item label=\"主办部门\">\r\n                <a-input placeholder=\"主办部门\" v-model=\"queryParam.mainDept\"></a-input>\r\n              </a-form-item>\r\n            </a-col>\r\n\r\n            <a-col :md=\"6\" :sm=\"8\">\r\n              <a-form-item label=\"开始时间\">\r\n                <a-date-picker showTime format=\"YYYY-MM-DD HH:mm:ss\" placeholder=\"请选择开始时间\"\r\n                               v-model='queryParam.startTimeFake' @change=\"startTime\"/>\r\n              </a-form-item>\r\n            </a-col>\r\n            <a-col :md=\"6\" :sm=\"8\">\r\n              <a-form-item label=\"结束时间\">\r\n                <a-date-picker showTime format=\"YYYY-MM-DD HH:mm:ss\" placeholder=\"请选择结束时间\"\r\n                               v-model='queryParam.endTimeFake' @change=\"endTime\"/>\r\n              </a-form-item>\r\n            </a-col>\r\n\r\n          </template>\r\n\r\n\r\n          <a-col :md=\"6\" :sm=\"8\">\r\n            <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\r\n              <a-button type=\"primary\" ref=\"reSearchQuery\" @click=\"collapseListOrNot\" icon=\"search\">查询</a-button>\r\n              <a-button type=\"primary\" @click=\"searchResetMy\" icon=\"reload\" style=\"margin-left: 8px\">重置</a-button>\r\n              <a @click=\"handleToggleSearch\" style=\"margin-left: 8px\">\r\n                {{ toggleSearchStatus ? '收起' : '展开' }}\r\n                <a-icon :type=\"toggleSearchStatus ? 'up' : 'down'\"/>\r\n              </a>\r\n            </span>\r\n          </a-col>\r\n\r\n        </a-row>\r\n      </a-form>\r\n    </div>\r\n\r\n    <!-- 操作按钮区域 -->\r\n    <div class=\"table-operator\">\r\n\r\n\r\n    </div>\r\n\r\n    <!-- table区域-begin -->\r\n    <div v-if=\"iisFold == 0\">\r\n      <a-table\r\n        size=\"middle\"\r\n        :columns=\"columns\"\r\n        :dataSource=\"dataSource\"\r\n        :pagination=\"pagination\"\r\n        :loading=\"loading\"\r\n        :showAlertInfo=\"false\"\r\n        bordered\r\n        rowKey=\"id\"\r\n        :customRow=\"doTask\"\r\n        @change=\"(page,pageSize) => {\r\n               handleTableChange(page)\r\n          }\"\r\n        :rowClassName=\"(record,index) => {\r\n              let className  = 'light-row';\r\n              if (index % 2 === 1) className = 'dark-row';\r\n              return className;\r\n          }\"\r\n      >\r\n\r\n                <span slot=\"action\" slot-scope=\"text, record\">\r\n          <a @click.stop=\"unDo(record)\">未办理信息</a>\r\n\r\n          <br>\r\n                  <!--<a-divider type=\"vertical\"/>-->\r\n          <a @click.stop=\"showPic(record)\">查看流程图</a>\r\n        </span>\r\n\r\n      </a-table>\r\n    </div>\r\n\r\n    <div v-if=\"iisFold == 1\">\r\n      <a-table\r\n        v-once\r\n        :columns=\"columnes\"\r\n        :dataSource=\"dataSources\"\r\n        :pagination=\"false\"\r\n        :showAlertInfo=\"false\"\r\n        :showHeader=\"false\"\r\n        :expandIconAsCell=\"false\"\r\n        bordered\r\n        @expand=\"(expanded, record) => {\r\n            getExpandRecords(expanded, record);\r\n        }\"\r\n        @expandedRowsChange=\"(expandedRows) => {\r\n            getPgSecondList(expandedRows);\r\n          }\"\r\n      >\r\n\r\n        <a-table\r\n          slot=\"expandedRowRender\"\r\n          slot-scope=\"record,index,indent,expanded\"\r\n          size=\"middle\"\r\n          :columns=\"columns\"\r\n          :dataSource=\"dataSource007\"\r\n          :pagination=\"false\"\r\n          :loading=\"loading\"\r\n          :showAlertInfo=\"false\"\r\n          :rowKey=\"record => record.key\"\r\n          :customRow=\"doTask\"\r\n          :rowClassName=\"(record,index) => {\r\n              let className  = 'light-row';\r\n              if (index % 2 === 1) className = 'dark-row';\r\n              return className;\r\n          }\"\r\n        >\r\n\r\n                <span slot=\"action\" slot-scope=\"text, record\">\r\n          <a @click.stop=\"unDo(record)\">未办理信息</a>\r\n\r\n          <br>\r\n                  <!--<a-divider type=\"vertical\"/>-->\r\n          <a @click.stop=\"showPic(record)\">查看流程图</a>\r\n        </span>\r\n\r\n\r\n        </a-table>\r\n\r\n      </a-table>\r\n    </div>\r\n    <!-- table区域-end -->\r\n\r\n    <!-- 表单区域 -->\r\n    <pic2-modal ref=\"pic2Modal\" @ok=\"modalFormOk\"></pic2-modal>\r\n    <new-task-modal ref=\"newTask\"></new-task-modal>\r\n\r\n\r\n    <!--业务页面-->\r\n    <detail-file ref=\"detailFile\"></detail-file>\r\n    <a-modal\r\n      :title=\"moreTask\"\r\n      :width=\"600\"\r\n      :visible=\"haveMore\"\r\n      :confirmLoading=\"false\"\r\n      @ok=\"confirm2\"\r\n      @cancel=\"cancel2\"\r\n      destroyOnClose\r\n      okText=\"确认\"\r\n      cancelText=\"取消\">\r\n\r\n\r\n      <a-table\r\n        ref=\"table\"\r\n        size=\"small\"\r\n        bordered\r\n        rowKey=\"key\"\r\n        :loading=\"loading\"\r\n        :columns=\"columns3\"\r\n        :dataSource=\"dataSource3\"\r\n        :pagination=\"false\"\r\n        :rowSelection=\"{selectedRowKeys: selectedRowKeys2,selectedRows:selectedRows2, onChange: onSelectChangeMy2,type:'radio'}\"\r\n        @change=\"handleTableChange\"\r\n      >\r\n      </a-table>\r\n    </a-modal>\r\n\r\n\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\n  // import Vue from 'vue'\r\n  // import {JeecgListMixin} from '@/mixins/JeecgListMixin'\r\n  // import {ACCESS_TOKEN} from \"../../store/mutation-types\"\r\n  // import {getAction, getRoleList, getServiceList, getUserList, httpAction, postAction} from '@/api/manage'\r\n  // import pic2Modal from '../../views/mytask/modules/pic2Modal'\r\n  // import STable from '@/components/table/'\r\n  // import ATextarea from \"ant-design-vue/es/input/TextArea\"\r\n  // import AInput from \"ant-design-vue/es/input/Input\"\r\n  // import ARadioGroup from \"ant-design-vue/es/radio/Group\"\r\n  // import moment from \"moment\"\r\n\r\n  import Vue from 'vue'\r\n  import {JeecgListMixin} from '@/mixins/JeecgListMixin'\r\n  import {ACCESS_TOKEN} from \"../../store/mutation-types\";\r\n  import {getAction, postAction} from \"../../api/manage\";\r\n  import pic2Modal from './modules/pic2Modal'\r\n\r\n  //业务页面\r\n  // import DetailFile from \"@/views/mytask/taskList/detailFile\"\r\n  // import backModal from '@/views/mytask/modules/backModal'\r\n\r\n  import detailFile from './taskList/detailFile'\r\n\r\n  export default {\r\n    name: \"taskHaveDone\",\r\n    mixins: [JeecgListMixin],\r\n    components: {\r\n      pic2Modal,\r\n      //业务\r\n      detailFile\r\n    },\r\n    data() {\r\n      return {\r\n        headers: {'X-Access-Token': Vue.ls.get(ACCESS_TOKEN)},\r\n        description: '已办任务',\r\n        // visibleCreateModal: false,\r\n        // visible: false,\r\n        iisFold: 0,\r\n        // getPageList: [],\r\n        // conditionList: [],\r\n        // resetConditionList: {},\r\n        // setConditionList: {},\r\n        // selectList: [],\r\n        // timeList: [],\r\n        // modelId: '',\r\n        // tableName: '',\r\n        // searchColumns: [],\r\n        // searchList: [],\r\n        // model: {pageDetailList: [{}]},\r\n        // labelCol: {\r\n        //   xs: {span: 24},\r\n        //   sm: {span: 5},\r\n        // },\r\n        // wrapperCol: {\r\n        //   xs: {span: 24},\r\n        //   sm: {span: 16},\r\n        // },\r\n        // confirmLoading: false,\r\n        // mdl: {\r\n        //   dataIndex: 'description',\r\n        // },\r\n\r\n        // 高级搜索 展开/关闭\r\n        // advanced: true,\r\n        // 查询参数\r\n        queryParam: {\r\n          dataTitle: '',\r\n          fileNum: '',\r\n          createName: '',\r\n          mainDept: '',\r\n          taskType: null,\r\n          startTimeFake: null,\r\n          endTimeFake: null\r\n        },\r\n        // 表头\r\n        columns: [],\r\n        columnes: [],\r\n        dataSource: [],\r\n        dataSource007: [],\r\n        taskKey: [],//缓急返回值\r\n        taskNames: [],\r\n        taskArray: [],\r\n        taskSearch: [],\r\n        // selectedRowKeys: [],\r\n        // selectedRows: [],\r\n        dataSources: [],\r\n        loginInfo: '',\r\n        url: {\r\n          // busDataAndColums: 'oaBus/oaBusdata/queryBusdataById',\r\n          // getModelIdByUrl: '/oaBus/busModel/getModelIdByUrl',\r\n          // getConditionByFunId: '/oaBus/busPageDetail/getConditionByFunId',\r\n\r\n          busDataAndColums: 'oaBus/oaBusdata/queryBusdataById',\r\n          list: \"/wf/task/queryTask?operstatus=task_done\",\r\n          doTask: \"/wf/process/processDel\",\r\n          currentUnDo: '/wf/task/queryTaskUnDoCurrent'\r\n        },\r\n        // loading: false,\r\n        // toggleSearchStatus: false,\r\n        //任务环节选择\r\n        taskRecord: null,\r\n        haveMore: false,\r\n        selectedRowKeys2: [],\r\n        selectedRows2: [],\r\n        dataSource3: [],\r\n        columns3: [\r\n          {\r\n            title: '环节名称',\r\n            align: \"center\",\r\n            dataIndex: 'name'\r\n          }\r\n        ],\r\n        moreTask: '',\r\n      }\r\n    },\r\n    created() {\r\n      // this.init();\r\n\r\n      //默认不带部门类型\r\n      this.queryParam.isDept = false\r\n      getAction(\"/sys/user/getLoginInfo\").then(res => {\r\n        this.loginInfo = res\r\n      })\r\n      this.collapseListOrNot();\r\n    },\r\n    destroyed() {\r\n      this.dataDestroy();\r\n    },\r\n    computed: {\r\n      importExcelUrl: function () {\r\n        return `${window._CONFIG['domianURL']}/${this.url.importExcelUrl}`;\r\n      }\r\n    },\r\n    methods: {\r\n      //清空其他排序条件\r\n      nullOther(type) {\r\n        let orderColums = ['orederByWenHao', 'orederByTile', 'orederByHuanJie', 'orederByDrafter', 'orederByTime']\r\n        for (let i in orderColums) {\r\n          if (i != type) {\r\n            this.queryParam[orderColums[i]] = undefined\r\n          }\r\n        }\r\n      },\r\n      unDo(record) {\r\n        let procInstId = record.processInstanceId\r\n        getAction(this.url.currentUnDo, {\r\n          procInstId: procInstId\r\n        }).then(res => {\r\n          if (res.success) {\r\n\r\n            const h = this.$createElement;\r\n            let content = []\r\n            for (let i in res.result) {\r\n              let msg = res.result[i]\r\n              content.push(h('p', `【${msg.taskDefName}】 ${msg.deptName} ：${msg.userName}`))\r\n            }\r\n\r\n            let content_ = h('div', {}, content)\r\n\r\n            const modal = this.$success({\r\n              title: '未办理信息',\r\n              content: content_,\r\n            });\r\n          } else {\r\n            this.$message.error(res.message)\r\n          }\r\n        })\r\n\r\n\r\n      },\r\n      //类型选择\r\n      taskTypeChange(type) {\r\n        if (type != '全部') {\r\n          this.queryParam.isDept = true\r\n        } else {\r\n          this.queryParam.isDept = false\r\n        }\r\n        this.queryParam.deptType = type\r\n      },\r\n      searchQueryMy() {\r\n        this.queryParam.tableOrder = false\r\n        this.searchQuery()\r\n        this.selectionRows = []\r\n        this.selectedRowKeys = []\r\n\r\n      },\r\n      searchResetMy() {\r\n        this.queryParam.tableOrder = false\r\n        if (this.iisFold == 1) {\r\n\r\n          this.getPgFirstList();\r\n\r\n        } else {\r\n\r\n          this.searchReset();\r\n\r\n        }\r\n        this.queryParam.taskType = null\r\n        this.queryParam.startTimeFake = null\r\n        this.queryParam.endTimeFake = null\r\n        this.queryParam.isDept = false\r\n        this.selectionRows = []\r\n        this.selectedRowKeys = []\r\n      },\r\n      endTime(a, time) {\r\n        this.queryParam.endQueryTime = time\r\n      },\r\n      startTime(a, time) {\r\n        this.queryParam.startQueryTime = time\r\n      },\r\n      reload() {\r\n        this.loading = true;\r\n        getAction(this.url.list).then((res) => {\r\n          if (res.success) {\r\n            this.dataSource = res.result.records;\r\n            this.ipagination.total = res.result.total;\r\n          }\r\n          if (res.code === 510) {\r\n            this.$message.warning(res.message)\r\n          }\r\n          this.loading = false;\r\n        })\r\n      },\r\n      cancel() {\r\n        console.log('------->取消选择')\r\n      },\r\n      showPic(record) {\r\n        this.$refs.pic2Modal.show(record)\r\n        this.$refs.pic2Modal.title = '当前环节'\r\n      },\r\n      // changFunId(index) {\r\n      //   index = index - 1;\r\n      //   this.resetPgConditionList();\r\n      //   getAction(this.url.getConditionByFunId, {functionId: this.selectList[index].iid}).then((res) => {\r\n      //     this.conditionList = res;\r\n      //     this.queryParam = Object.assign({}, this.setConditionList);\r\n      //     for (let i = 0; i < this.conditionList.length; i++) {\r\n      //       this.queryParam = Object.assign({}, this.queryParam, {[this.conditionList[i].s_table_column]: \"\"});\r\n      //     }\r\n      //     this.queryParam.function_id = this.selectList[index].iid;\r\n      //     this.resetConditionList = Object.assign({}, this.queryParam);\r\n      //     this.pagination.current = 1;\r\n      //     this.columns = [];\r\n      //     this.columnes = [];\r\n      //     this.dataSource = [];\r\n      //     this.dataSources = [];\r\n      //     this.collapseListOrNot();\r\n      //   });\r\n      // },\r\n      // init() {\r\n      //   let path = this.$route.path;\r\n      //   let paths = path.split('/')\r\n      //   let str = paths[paths.length - 1]\r\n      //   this.getModelIdByUrl(str);\r\n      // },\r\n      // clearData() {\r\n      //   this.conditionList = [];\r\n      //   this.selectList = [];\r\n      //   this.columns = [];\r\n      //   this.columnes = [];\r\n      //   this.dataSource = [];\r\n      //   this.dataSources = [];\r\n      // },\r\n      // getQueryParams() {\r\n      //   let param = Object.assign({}, this.queryParam, this.isorter);\r\n      //   param.field = this.getQueryField();\r\n      //   param.current = this.ipagination.current;\r\n      //   param.pageSize = this.ipagination.pageSize;\r\n      //   return filterObj(param);\r\n      // },\r\n      // getQueryField() {\r\n      //   let str = \"id,\";\r\n      //   for (let i = 0; i < this.columns.length; i++) {\r\n      //     str += \",\" + this.columns[i].dataIndex;\r\n      //   }\r\n      //   return str;\r\n      // },\r\n      //\r\n      // handleEdit(record) {\r\n      //   this.mdl = Object.assign({}, record);\r\n      //   console.log(this.mdl);\r\n      //   this.visible = true;\r\n      // },\r\n      // handleOk() {\r\n      //\r\n      // },\r\n\r\n      //添加逻辑\r\n      // handleModalVisible(isVisible) {\r\n      //   this.visibleCreateModal = isVisible;\r\n      // },\r\n      //\r\n      // handleCreateModalCancel() {\r\n      //   this.visibleCreateModal = false;\r\n      // },\r\n      //\r\n      // onChange(row) {\r\n      //   this.selectedRowKeys = row.selectedRowKeys;\r\n      //   this.selectedRows = row.selectedRows;\r\n      //   // console.log(this.$refs.table)\r\n      // },\r\n      // toggleAdvanced() {\r\n      //   this.advanced = !this.advanced\r\n      // },\r\n      //\r\n      // resetSearchForm() {\r\n      //   this.queryParam = {\r\n      //     date: moment(new Date())\r\n      //   }\r\n      // },\r\n      // handleTableChange(page) {\r\n      //   this.pagination.current = page.current;\r\n      //   this.pagination.pageSize = page.pageSize;\r\n      //   this.collapseListOrNot();\r\n      // },\r\n      // getModelIdByUrl(str) {\r\n      //   //let url = \"/papertitle/docNumSet/busModelList\";\r\n      //   getAction(this.url.getModelIdByUrl, {str: 'electronicFile'}).then((res) => {\r\n      //     this.modelId = res;\r\n      //     this.getPgConditionList();\r\n\r\n      //this.getPgSearchList();\r\n      //   });\r\n      // },\r\n      // getPgConditionList() {\r\n      //   let url = \"/oaBus/oaBusdata/queryFunSelByModelId\";\r\n      //   postAction(url, {modelId: this.modelId, function_id: this.queryParam.function_id}).then((res) => {\r\n      //     this.clearData();\r\n      //     this.conditionList = res.colList;\r\n      //     this.selectList = res.funList;\r\n      //     this.tableName = res.tableName;\r\n      //     this.timeList = res.d_create_time;\r\n      //     this.queryParam.function_id = this.selectList[0].iid;\r\n      //     this.setConditionList = Object.assign({}, this.queryParam);\r\n      //     for (let i = 0; i < this.conditionList.length; i++) {\r\n      //       this.queryParam = Object.assign({}, this.queryParam, {[this.conditionList[i].s_table_column]: \"\"});\r\n      //     }\r\n      //     this.resetConditionList = Object.assign({}, this.queryParam);\r\n\r\n      // console.log('----------------------------------------------------------');\r\n      // console.log(this.queryParam);\r\n\r\n      // this.collapseListOrNot();\r\n      //   });\r\n      // },\r\n      getPgFirstList() {\r\n        this.columnes = [];\r\n        this.dataSources = [];\r\n        this.taskKey = [];\r\n        // this.chooseSearch();\r\n\r\n        let url = \"/sys/dict/getDictByKeyObj\";\r\n        getAction(url, {dictKey: 'urgencyDegree'}).then((res) => {\r\n\r\n          this.columnes.push({\r\n            dataIndex: 'wenHao',\r\n          });\r\n\r\n          for (let i = 0; i < res.result.length; i++) {\r\n            this.taskKey.push(res.result[i].value);\r\n            let url = \"urgency/degree/queryTask\";\r\n            let Urgency = res;\r\n            getAction(url, {operstatus: 'task_done', urgencyDegree: this.taskKey[i], jY: 1}).then((res) => {\r\n              if (res.result.total > 0) {\r\n                this.dataSources.push({\r\n                  key: i,\r\n                  wenHao: Urgency.result[i].text,\r\n                });\r\n              }\r\n            })\r\n          }\r\n\r\n          // console.log('-----------------------<><><><><><><><><><><><><>--------------------------');\r\n          // console.log(this.taskKey);\r\n          // console.log('------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------');\r\n          // console.log(this.dataSources);\r\n\r\n        });\r\n\r\n        console.log('------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------');\r\n        console.log(this.dataSource007.length);\r\n\r\n        if (this.dataSource007.length > 0) {\r\n          this.getSearchList();\r\n        } else {\r\n          return;\r\n        }\r\n\r\n      },\r\n      getExpandRecords(expanded, record) {\r\n        if (expanded == false) {\r\n          this.dataSource007 = [];\r\n        }\r\n      },\r\n      getCaption(obj, state) {\r\n        let index = obj.lastIndexOf(\"\\-\");\r\n        if (state == 0) {\r\n          obj = obj.substring(0, index);\r\n        } else {\r\n          obj = obj.substring(index + 1, obj.length)\r\n        }\r\n        return obj;\r\n      },\r\n      getPgSecondList(taskNames) {\r\n        this.taskNames = taskNames[taskNames.length - 1];\r\n        taskNames.length = 0;\r\n        this.taskSearch = this.taskKey[this.taskNames];\r\n        this.columns = [];\r\n        this.dataSource007 = [];\r\n        let url = \"urgency/degree/queryTask\";\r\n        getAction(url, {\r\n          operstatus: 'task_done',\r\n          urgencyDegree: this.taskKey[this.taskNames],\r\n          dataTitle: this.queryParam.dataTitle,\r\n          fileNum: this.queryParam.fileNum,\r\n          createName: this.queryParam.createName,\r\n          mainDept: this.queryParam.mainDept,\r\n          taskType: this.queryParam.taskType,\r\n          startTimeFake: this.queryParam.startTimeFake,\r\n          endTimeFake: this.queryParam.endTimeFake\r\n        }).then((res) => {\r\n          // this.searchColumns = JSON.parse(res.records);\r\n\r\n          //   for (let i = 1; i < this.searchColumns.length; i++) {\r\n          //     this.columnes.push({\r\n          //       title: this.searchColumns[i].s_column_name,\r\n          //       dataIndex: this.searchColumns[i].s_table_column,\r\n          //       align: \"center\",\r\n          //     });\r\n          //   }\r\n          this.columns.push({\r\n              title: '序号',\r\n              dataIndex: '',\r\n              key: 'rowIndex',\r\n              width: 60,\r\n              align: \"center\",\r\n              customRender: function (t, r, index) {\r\n                return parseInt(index) + 1;\r\n              }\r\n            },\r\n            {\r\n              title: '文号',\r\n              align: \"center\",\r\n              width: 150,\r\n              sorter: (i, ii, type) => {\r\n\r\n                this.queryParam.tableOrder = true\r\n                this.nullOther('orederByWenHao')\r\n\r\n                this.queryParam.orederByWenHao = type == 'descend' ? -1 : 1;\r\n                return true\r\n              },\r\n              dataIndex: 'wenHao'\r\n            },\r\n            {\r\n              title: '标题',\r\n              sorter: (i, ii, type) => {\r\n                //descend倒叙\r\n                //ascend正序\r\n\r\n                this.queryParam.tableOrder = true\r\n                //置空其他环节\r\n                this.nullOther('orederByTile')\r\n                this.queryParam.orederByTile = type == 'descend' ? -1 : 1;\r\n                return true\r\n              },\r\n              width: 400,\r\n              align: \"left\",\r\n              dataIndex: 'title'\r\n            },\r\n            // {\r\n            //   title: '流程名称',\r\n            //   align: \"center\",\r\n            //   dataIndex: 'proDefName'\r\n            // },\r\n            {\r\n              title: '当前环节',\r\n              width: 180,\r\n              sorter: (i, ii, type) => {\r\n                this.queryParam.tableOrder = true\r\n                this.nullOther('orederByHuanJie')\r\n\r\n                this.queryParam.orederByHuanJie = type == 'descend' ? -1 : 1\r\n                return true\r\n              },\r\n              align: \"center\",\r\n              dataIndex: 'taskDefinitionKeyName'\r\n            },\r\n            {\r\n              title: '拟稿人',\r\n              width: 100,\r\n              sorter: (i, ii, type) => {\r\n                this.queryParam.tableOrder = true\r\n                this.nullOther('orederByDrafter')\r\n\r\n                this.queryParam.orederByDrafter = type == 'descend' ? -1 : 1;\r\n                return true\r\n              },\r\n              align: \"center\",\r\n              dataIndex: 'drafter'\r\n            },\r\n            {\r\n              title: '办理时间',\r\n              width: 160,\r\n              sorter: (i, ii, type) => {\r\n                this.queryParam.tableOrder = true\r\n                this.nullOther('orederByTime')\r\n\r\n                this.queryParam.orederByTime = type == 'descend' ? -1 : 1;\r\n                return true\r\n              },\r\n              align: \"center\",\r\n              dataIndex: 'startTime'\r\n            },\r\n            {\r\n              title: '操作',\r\n              width: 115,\r\n              dataIndex: 'action',\r\n              align: \"center\",\r\n              scopedSlots: {customRender: 'action'},\r\n            });\r\n\r\n          // this.dataSources = res.result.dataList;\r\n\r\n\r\n          this.dataSource007 = res.result.records;\r\n          for (let i = 0; i < this.dataSource007.length; i++) {\r\n            this.dataSource007[i].key = this.dataSource007[i].id;\r\n          }\r\n\r\n          // console.log('-------------++++++++++++++++++++++++++++++---------------');\r\n          // console.log(this.dataSource);\r\n\r\n        });\r\n      },\r\n      getSearchList() {\r\n        this.dataSource007 = [];\r\n        let url = \"urgency/degree/queryTask\";\r\n        getAction(url, {\r\n          operstatus: 'task_done',\r\n          urgencyDegree: this.taskSearch,\r\n          dataTitle: this.queryParam.dataTitle,\r\n          fileNum: this.queryParam.fileNum,\r\n          createName: this.queryParam.createName,\r\n          mainDept: this.queryParam.mainDept,\r\n          taskType: this.queryParam.taskType,\r\n          startTimeFake: this.queryParam.startTimeFake,\r\n          endTimeFake: this.queryParam.endTimeFake\r\n        }).then((res) => {\r\n          this.dataSource007 = res.result.records;\r\n          for (let i = 0; i < this.dataSource007.length; i++) {\r\n            this.dataSource007[i].key = this.dataSource007[i].id;\r\n          }\r\n        })\r\n      },\r\n      getPgSearchList() {\r\n        this.columns = [];\r\n        this.dataSource = [];\r\n        // this.chooseSearch();\r\n        // let url = \"urgency/degree/queryTask\";\r\n        // getAction(url, {operstatus: 'jump', urgencyDegree: 'null'}).then((res) => {\r\n        // this.searchColumns = JSON.parse(res.message);\r\n        // this.searchList = res.result;\r\n        // this.pagination.current = this.searchList.current;\r\n        // this.pagination.pageSize = this.searchList.size;\r\n        // this.pagination.total = this.searchList.total;\r\n\r\n        // this.dataSource = this.searchList.records;\r\n        // for (let i = 0; i < this.searchColumns.length; i++) {\r\n        //   if (this.searchColumns[i].s_table_column != 'i_id') {\r\n        //     if(this.searchColumns[i].s_table_column =='i_is_state'){\r\n        //       this.columns.push({\r\n        //         title: this.searchColumns[i].s_column_name,\r\n        //         dataIndex: this.searchColumns[i].s_table_column,\r\n        //         align: \"center\",\r\n        //         customRender: (text) => {\r\n        //           if(text == true){\r\n        //             return '已办结'\r\n        //           }else if(text == false){\r\n        //             return '未办结'\r\n        //           }else{\r\n        //             return text\r\n        //           }\r\n        //         }\r\n        //       });\r\n        //     }else{\r\n        //       this.columns.push({\r\n        //         title: this.searchColumns[i].s_column_name,\r\n        //         dataIndex: this.searchColumns[i].s_table_column,\r\n        //         align: \"center\",\r\n        //       });\r\n        //     }\r\n\r\n        //   }\r\n        // }\r\n\r\n        this.columns.push({\r\n            title: '序号',\r\n            dataIndex: '',\r\n            key: 'rowIndex',\r\n            width: 60,\r\n            align: \"center\",\r\n            customRender: function (t, r, index) {\r\n              return parseInt(index) + 1;\r\n            }\r\n          },\r\n          {\r\n            title: '文号',\r\n            align: \"center\",\r\n            width: 150,\r\n            sorter: (i, ii, type) => {\r\n\r\n              this.queryParam.tableOrder = true\r\n              this.nullOther('orederByWenHao')\r\n\r\n              this.queryParam.orederByWenHao = type == 'descend' ? -1 : 1;\r\n              return true\r\n            },\r\n            dataIndex: 'wenHao'\r\n          },\r\n          {\r\n            title: '标题',\r\n            sorter: (i, ii, type) => {\r\n              //descend倒叙\r\n              //ascend正序\r\n\r\n              this.queryParam.tableOrder = true\r\n              //置空其他环节\r\n              this.nullOther('orederByTile')\r\n              this.queryParam.orederByTile = type == 'descend' ? -1 : 1;\r\n              return true\r\n            },\r\n            width: 400,\r\n            align: \"left\",\r\n            dataIndex: 'title'\r\n          },\r\n          // {\r\n          //   title: '流程名称',\r\n          //   align: \"center\",\r\n          //   dataIndex: 'proDefName'\r\n          // },\r\n          {\r\n            title: '已办环节',\r\n            width: 180,\r\n            sorter: (i, ii, type) => {\r\n              this.queryParam.tableOrder = true\r\n              this.nullOther('orederByHuanJie')\r\n\r\n              this.queryParam.orederByHuanJie = type == 'descend' ? -1 : 1\r\n              return true\r\n            },\r\n            align: \"center\",\r\n            dataIndex: 'taskDefinitionKeyName'\r\n          },\r\n          {\r\n            title: '拟稿人',\r\n            width: 100,\r\n            sorter: (i, ii, type) => {\r\n              this.queryParam.tableOrder = true\r\n              this.nullOther('orederByDrafter')\r\n\r\n              this.queryParam.orederByDrafter = type == 'descend' ? -1 : 1;\r\n              return true\r\n            },\r\n            align: \"center\",\r\n            dataIndex: 'drafter'\r\n          },\r\n          {\r\n            title: '办理时间',\r\n            width: 160,\r\n            sorter: (i, ii, type) => {\r\n              this.queryParam.tableOrder = true\r\n              this.nullOther('orederByTime')\r\n\r\n              this.queryParam.orederByTime = type == 'descend' ? -1 : 1;\r\n              return true\r\n            },\r\n            align: \"center\",\r\n            dataIndex: 'startTime'\r\n          },\r\n          {\r\n            title: '操作',\r\n            width: 115,\r\n            dataIndex: 'action',\r\n            align: \"center\",\r\n            scopedSlots: {customRender: 'action'},\r\n          });\r\n\r\n        // this.dataSource = res.result.records;\r\n\r\n        this.searchQuery();\r\n\r\n\r\n        // });\r\n\r\n      },\r\n      // changeInput(event, obj) {\r\n      //   this.queryParam[obj] = event.currentTarget.value;\r\n      // console.log('----------------------------------------------------------');\r\n      // console.log(\"object: \" + obj + \" value: \" + event);\r\n      // console.log('----------------------------------------------------------');\r\n      // console.log(this.queryParam);\r\n      // },\r\n      // changeSelect(event, obj) {\r\n      // this.queryParam[obj] = event.toString();\r\n      // console.log('----------------------------------------------------------');\r\n      // console.log(\"object: \" + obj + \" value: \" + event);\r\n      // console.log('----------------------------------------------------------');\r\n      // console.log(this.queryParam);\r\n      // },\r\n      // onClick(record, index) {\r\n      //   return {\r\n      //     on: {\r\n      //       click: (event) => {\r\n      //         //查询---业务数据--流程信息\r\n      //         let param = {tableName: this.tableName, busdataId: record.i_id};\r\n      //         this.$refs.detailFile.show(param)\r\n\r\n      // this.$router.push({path:'/mytask/taskList/Test-detailFile',query:param})\r\n      //       }\r\n      //     }\r\n      //   }\r\n      // },\r\n      confirm2() {\r\n        if (this.selectedRowKeys2.length <= 0) {\r\n          this.$message.error(\"请选择环节\")\r\n          return\r\n        }\r\n        let status = 'done'\r\n        this.taskRecord.taskDefinitionKey = this.selectedRowKeys2[0]\r\n        this.taskRecord.taskDefinitionKeyName = this.selectedRows2[0].name\r\n        if (this.selectedRows2[0].status != undefined && this.selectedRows2[0].status == 'todo') {\r\n\r\n          this.taskRecord.id = this.selectedRows2[0].id\r\n          this.taskRecord.hiTaskId=undefined\r\n          status = 'todo'\r\n        } else {\r\n          this.taskRecord.hiTaskId = this.selectedRows2[0].id\r\n        }\r\n\r\n\r\n        window.open(window.location.origin + '/mytask/taskList/Test-detailFile?tableName='\r\n          + this.taskRecord.table + '&busdataId=' + this.taskRecord.tableId\r\n          + '&status=' + status + '&navisshow=false&haveTask=true&task=' + JSON.stringify(this.taskRecord))\r\n        this.haveMore = false\r\n\r\n\r\n      },\r\n      cancel2() {\r\n        this.haveMore = false\r\n      },\r\n      onSelectChangeMy2(rowKeys, rows) {\r\n        this.selectedRowKeys2 = rowKeys\r\n        this.selectedRows2 = rows\r\n      },\r\n      doTask(record, index) {\r\n        return {\r\n          on: {\r\n            click: (event) => {\r\n              this.taskRecord = record\r\n\r\n              //查询是否有待办环节\r\n              getAction('/wf/task/currentUserTodos?processInstanceId=' + record.processInstanceId).then(res => {\r\n\r\n                if (res.success) {\r\n                  if (res.result.length > 0) {\r\n                    //提示是否以待办身份进入\r\n                    var r = window.confirm(\"您有此任务的待办,是否以待办身份进入\");\r\n\r\n                    //TODO 方式待完善\r\n                    // var r = this.$confirm({\r\n                    //   title: '提示',\r\n                    //   content: '您有此任务的待办,是否以待办身份进入?',\r\n                    //   confirmButtonText: '确定',\r\n                    //   cancelButtonText: '取消',\r\n                    //   type: 'warning'\r\n                    //\r\n                    // })\r\n\r\n                    console.log(r)\r\n                    if (r) {\r\n\r\n                      if (res.result.length == 1) {\r\n                        this.taskRecord.id = res.result[0].id\r\n                        this.taskRecord.name = res.result[0].name\r\n                        this.taskRecord.taskDefinitionKey = res.result[0].taskDefinitionKey\r\n                        window.open(window.location.origin + '/mytask/taskList/Test-detailFile?tableName='\r\n                          + this.taskRecord.table + '&busdataId=' + this.taskRecord.tableId\r\n                          + '&status=todo&navisshow=false&haveTask=true&task=' + JSON.stringify(this.taskRecord))\r\n                      }\r\n\r\n                      if (res.result.length > 1) {\r\n                        this.dataSource3 = []\r\n                        for (let i in res.result) {\r\n                          let act = res.result[i]\r\n                          let actMSg = {\r\n                            key: act.taskDefinitionKey,\r\n                            name: act.name,\r\n                            id: act.id,\r\n                            status: 'todo'\r\n                          }\r\n                          this.dataSource3.push(actMSg)\r\n                          this.haveMore = true\r\n                          this.moreTask = '您当前有多个环节的待办，请选择一个环节'\r\n                        }\r\n                      }\r\n\r\n                    } else {\r\n                      this.moreHiTask();\r\n                    }\r\n\r\n\r\n                  } else {\r\n                    this.moreHiTask();\r\n                  }\r\n                } else {\r\n                  this.$message.error(res.message)\r\n                }\r\n              })\r\n\r\n\r\n            }\r\n          }\r\n        }\r\n\r\n      },\r\n      moreHiTask() {\r\n        if (this.taskRecord.hiTaskId.indexOf(',') >= 0) {\r\n          let keys = this.taskRecord.taskDefinitionKey.split(\",\")\r\n          let names = this.taskRecord.allNames.split(\",\")\r\n          let ids = this.taskRecord.hiTaskId.split(\",\")\r\n          this.dataSource3 = []\r\n          let map = {}\r\n          for (let i in keys) {\r\n            //构造集合 去重 同一环节去id最大的\r\n            let data = {key: keys[i], name: names[i], id: ids[i]}\r\n            let act = map[keys[i]]\r\n            if (act == undefined) {\r\n              map[keys[i]] = data\r\n            } else {\r\n              if (parseInt(ids[i]) > parseInt(act.id)) {\r\n                map[keys[i]] = data\r\n              }\r\n            }\r\n          }\r\n          //如果去重之后只有一个\r\n          if (Object.values(map).length > 1) {\r\n            this.dataSource3 = Object.values(map)\r\n            this.haveMore = true\r\n            this.moreTask = '您当前有多个环节的已办，请选择一个环节'\r\n\r\n          }\r\n          if (Object.values(map).length == 1) {\r\n\r\n            let record2 = Object.values(map)[0]\r\n            this.taskRecord.taskDefinitionKey = record2.key\r\n            this.taskRecord.name = record2.name\r\n            this.taskRecord.hiTaskId = record2.id\r\n            window.open(window.location.origin + '/mytask/taskList/Test-detailFile?tableName=' + this.taskRecord.table\r\n              + '&busdataId=' + this.taskRecord.tableId\r\n              + '&status=done&navisshow=false&haveTask=true&task=' + JSON.stringify(this.taskRecord))\r\n          }\r\n        } else {\r\n          window.open(window.location.origin + '/mytask/taskList/Test-detailFile?tableName='\r\n            + this.taskRecord.table + '&busdataId=' + this.taskRecord.tableId\r\n            + '&status=done&navisshow=false&haveTask=true&task=' + JSON.stringify(this.taskRecord))\r\n        }\r\n      },\r\n      dataDestroy() {\r\n        // this.searchColumns = [];\r\n        this.searchList = [];\r\n        this.columns = [];\r\n        this.columnes = [];\r\n        this.dataSource = [];\r\n        this.dataSource007 = [];\r\n        this.dataSources = [];\r\n      },\r\n      // resetPgConditionList() {\r\n      //   this.queryParam = Object.assign({}, this.resetConditionList);\r\n      //   for (let i = 0; i < this.$refs.inputs.length; i++) {\r\n      //     this.$refs.inputs[i].stateValue = '';\r\n      //   }\r\n      // },\r\n      collapseListOrNot() {\r\n        const userid = JSON.parse(localStorage.getItem('userdata')).userInfo.id;\r\n        getAction('/testt/sysUserSet/queryByUserId', {userId: userid}).then((res) => {\r\n          this.iisFold = res.result.iisFold;\r\n          if (this.iisFold == 1) {\r\n            this.getPgFirstList();\r\n          } else {\r\n            this.getPgSearchList();\r\n          }\r\n        })\r\n      }\r\n    },\r\n    watch: {\r\n\r\n      // '$route.path': {\r\n      //   handler(newPath, oldPath) {\r\n      //     //this.init();\r\n      //     let path = newPath;\r\n      //     let paths = path.split('/')\r\n      //     let str = paths[paths.length - 1]\r\n      //     this.getModelIdByUrl(str);\r\n      //     // console.log('---------------------------------', newPath);\r\n      //     // console.log('---------------------------------', oldPath);\r\n      //   },\r\n      //   immediate: false,\r\n      //   deep: true,\r\n      // }\r\n\r\n      /* this.$route.path:{\r\n\r\n     }*/\r\n      /*\r\n      'selectedRows': function (selectedRows) {\r\n        this.needTotalList = this.needTotalList.map(item => {\r\n          return {\r\n            ...item,\r\n            total: selectedRows.reduce( (sum, val) => {\r\n              return sum + val[item.dataIndex]\r\n            }, 0)\r\n          }\r\n        })\r\n      }\r\n      */\r\n    }\r\n  }\r\n</script>"]}]}