{"remainingRequest":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\SelectUserModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\SelectUserModal.vue","mtime":1568535267133},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883562},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858740},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883562},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696677}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {filterObj} from '@/utils/util'\nimport {getAction} from '@/api/manage'\n\nexport default {\n  name: \"SelectUserModal\",\n  data() {\n    return {\n      title: \"添加已有用户\",\n      names: [],\n      visible: false,\n      placement: 'right',\n      description: '',\n      // 查询条件\n      queryParam: {},\n      // 表头\n      columns1: [\n        {\n          title: '#',\n          dataIndex: '',\n          key: 'rowIndex',\n          width: 50,\n          align: \"center\",\n          customRender: function (t, r, index) {\n            return parseInt(index) + 1;\n          }\n        },\n        {\n          title: '用户账号',\n          align: \"center\",\n          width: 113,\n          dataIndex: 'username'\n        },\n        {\n          title: '用户名称',\n          align: \"center\",\n          width: 100,\n          dataIndex: 'realname'\n        },\n        {\n          title: '状态',\n          align: \"center\",\n          width: 100,\n          dataIndex: 'status'\n        }\n      ],\n      columns2: [\n        {\n          title: '用户账号',\n          align: \"center\",\n          dataIndex: 'username',\n\n        },\n        {\n          title: '用户名称',\n          align: \"center\",\n          dataIndex: 'realname',\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          align: \"center\",\n          width: 100,\n          scopedSlots: {customRender: 'action'},\n        }\n      ],\n      //数据集\n      dataSource1: [],\n      dataSource2: [],\n      // 分页参数\n      ipagination: {\n        current: 1,\n        pageSize: 10,\n        pageSizeOptions: ['10', '20', '30'],\n        showTotal: (total, range) => {\n          return range[0] + \"-\" + range[1] + \" 共\" + total + \"条\"\n        },\n        showQuickJumper: true,\n        showSizeChanger: true,\n        total: 0\n      },\n      isorter: {\n        column: 'createTime',\n        order: 'desc',\n      },\n      loading: false,\n      selectedRowKeys: [],\n      selectedRows: [],\n      url: {\n        list: \"/sys/user/list\",\n      }\n    }\n  },\n  created() {\n    this.loadData();\n  },\n  methods: {\n    searchQuery() {\n      this.loadData(1);\n    },\n    searchReset() {\n      this.queryParam = {};\n      this.loadData(1);\n    },\n    handleCancel() {\n      this.visible = false;\n    },\n    handleOk() {\n      this.dataSource2 = this.selectedRowKeys;\n      console.log(\"data:\" + this.dataSource2);\n      this.$emit(\"selectFinished\", this.dataSource2);\n      this.visible = false;\n    },\n    add() {\n      this.visible = true;\n    },\n    loadData(arg) {\n      //加载数据 若传入参数1则加载第一页的内容\n      if (arg === 1) {\n        this.ipagination.current = 1;\n      }\n      var params = this.getQueryParams();//查询条件\n      getAction(this.url.list, params).then((res) => {\n        if (res.success) {\n          this.dataSource1 = res.result.records;\n          this.ipagination.total = res.result.total;\n        }\n      })\n    },\n    getQueryParams() {\n      var param = Object.assign({}, this.queryParam, this.isorter);\n      param.field = this.getQueryField();\n      param.pageNo = this.ipagination.current;\n      param.pageSize = this.ipagination.pageSize;\n      return filterObj(param);\n    },\n    getQueryField() {\n      //TODO 字段权限控制\n    },\n    onSelectAll(selected, selectedRows, changeRows) {\n      if (selected === true) {\n        for (var a = 0; a < changeRows.length; a++) {\n          this.dataSource2.push(changeRows[a]);\n        }\n      } else {\n        for (var b = 0; b < changeRows.length; b++) {\n          this.dataSource2.splice(this.dataSource2.indexOf(changeRows[b]), 1);\n        }\n      }\n      // console.log(selected, selectedRows, changeRows);\n    },\n    onSelect(record, selected) {\n      if (selected === true) {\n        this.dataSource2.push(record);\n      } else {\n        var index = this.dataSource2.indexOf(record);\n        //console.log();\n        if (index >= 0) {\n          this.dataSource2.splice(this.dataSource2.indexOf(record), 1);\n        }\n\n      }\n    },\n    onSelectChange(selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys;\n      this.selectionRows = selectedRows;\n    },\n    onClearSelected() {\n      this.selectedRowKeys = [];\n      this.selectionRows = [];\n    },\n    handleDelete: function (record) {\n      this.dataSource2.splice(this.dataSource2.indexOf(record), 1);\n    },\n    handleTableChange(pagination, filters, sorter) {\n      //分页、排序、筛选变化时触发\n      console.log(sorter);\n      //TODO 筛选\n      if (Object.keys(sorter).length > 0) {\n        this.isorter.column = sorter.field;\n        this.isorter.order = \"ascend\" == sorter.order ? \"asc\" : \"desc\"\n      }\n      this.ipagination = pagination;\n      this.loadData();\n    }\n  }\n}\n",{"version":3,"sources":["SelectUserModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"SelectUserModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\r\n  <div>\r\n    <a-modal\r\n      centered\r\n      :title=\"title\"\r\n      :width=\"1000\"\r\n      :visible=\"visible\"\r\n      @ok=\"handleOk\"\r\n      @cancel=\"handleCancel\"\r\n      cancelText=\"关闭\">\r\n\r\n\r\n      <!-- 查询区域 -->\r\n      <div class=\"table-page-search-wrapper\">\r\n        <a-form layout=\"inline\">\r\n          <a-row :gutter=\"24\">\r\n\r\n            <a-col :span=\"10\">\r\n              <a-form-item label=\"姓名\">\r\n                <a-input placeholder=\"请输入姓名\" v-model=\"queryParam.username\"></a-input>\r\n              </a-form-item>\r\n            </a-col>\r\n            <a-col :span=\"8\">\r\n                    <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\r\n                      <a-button type=\"primary\" @click=\"searchQuery\" icon=\"search\">查询</a-button>\r\n                      <a-button type=\"primary\" @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px\">重置</a-button>\r\n                    </span>\r\n            </a-col>\r\n\r\n          </a-row>\r\n        </a-form>\r\n      </div>\r\n      <!-- table区域-begin -->\r\n      <div>\r\n        <a-table\r\n          size=\"small\"\r\n          bordered\r\n          rowKey=\"id\"\r\n          :columns=\"columns1\"\r\n          :dataSource=\"dataSource1\"\r\n          :pagination=\"ipagination\"\r\n          :loading=\"loading\"\r\n          :scroll=\"{ y: 240 }\"\r\n          :rowSelection=\"{selectedRowKeys: selectedRowKeys,onSelectAll:onSelectAll,onSelect:onSelect,onChange: onSelectChange}\"\r\n          @change=\"handleTableChange\">\r\n\r\n        </a-table>\r\n      </div>\r\n      <!-- table区域-end -->\r\n\r\n\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {filterObj} from '@/utils/util'\r\n  import {getAction} from '@/api/manage'\r\n\r\n  export default {\r\n    name: \"SelectUserModal\",\r\n    data() {\r\n      return {\r\n        title: \"添加已有用户\",\r\n        names: [],\r\n        visible: false,\r\n        placement: 'right',\r\n        description: '',\r\n        // 查询条件\r\n        queryParam: {},\r\n        // 表头\r\n        columns1: [\r\n          {\r\n            title: '#',\r\n            dataIndex: '',\r\n            key: 'rowIndex',\r\n            width: 50,\r\n            align: \"center\",\r\n            customRender: function (t, r, index) {\r\n              return parseInt(index) + 1;\r\n            }\r\n          },\r\n          {\r\n            title: '用户账号',\r\n            align: \"center\",\r\n            width: 113,\r\n            dataIndex: 'username'\r\n          },\r\n          {\r\n            title: '用户名称',\r\n            align: \"center\",\r\n            width: 100,\r\n            dataIndex: 'realname'\r\n          },\r\n          {\r\n            title: '状态',\r\n            align: \"center\",\r\n            width: 100,\r\n            dataIndex: 'status'\r\n          }\r\n        ],\r\n        columns2: [\r\n          {\r\n            title: '用户账号',\r\n            align: \"center\",\r\n            dataIndex: 'username',\r\n\r\n          },\r\n          {\r\n            title: '用户名称',\r\n            align: \"center\",\r\n            dataIndex: 'realname',\r\n          },\r\n          {\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            align: \"center\",\r\n            width: 100,\r\n            scopedSlots: {customRender: 'action'},\r\n          }\r\n        ],\r\n        //数据集\r\n        dataSource1: [],\r\n        dataSource2: [],\r\n        // 分页参数\r\n        ipagination: {\r\n          current: 1,\r\n          pageSize: 10,\r\n          pageSizeOptions: ['10', '20', '30'],\r\n          showTotal: (total, range) => {\r\n            return range[0] + \"-\" + range[1] + \" 共\" + total + \"条\"\r\n          },\r\n          showQuickJumper: true,\r\n          showSizeChanger: true,\r\n          total: 0\r\n        },\r\n        isorter: {\r\n          column: 'createTime',\r\n          order: 'desc',\r\n        },\r\n        loading: false,\r\n        selectedRowKeys: [],\r\n        selectedRows: [],\r\n        url: {\r\n          list: \"/sys/user/list\",\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.loadData();\r\n    },\r\n    methods: {\r\n      searchQuery() {\r\n        this.loadData(1);\r\n      },\r\n      searchReset() {\r\n        this.queryParam = {};\r\n        this.loadData(1);\r\n      },\r\n      handleCancel() {\r\n        this.visible = false;\r\n      },\r\n      handleOk() {\r\n        this.dataSource2 = this.selectedRowKeys;\r\n        console.log(\"data:\" + this.dataSource2);\r\n        this.$emit(\"selectFinished\", this.dataSource2);\r\n        this.visible = false;\r\n      },\r\n      add() {\r\n        this.visible = true;\r\n      },\r\n      loadData(arg) {\r\n        //加载数据 若传入参数1则加载第一页的内容\r\n        if (arg === 1) {\r\n          this.ipagination.current = 1;\r\n        }\r\n        var params = this.getQueryParams();//查询条件\r\n        getAction(this.url.list, params).then((res) => {\r\n          if (res.success) {\r\n            this.dataSource1 = res.result.records;\r\n            this.ipagination.total = res.result.total;\r\n          }\r\n        })\r\n      },\r\n      getQueryParams() {\r\n        var param = Object.assign({}, this.queryParam, this.isorter);\r\n        param.field = this.getQueryField();\r\n        param.pageNo = this.ipagination.current;\r\n        param.pageSize = this.ipagination.pageSize;\r\n        return filterObj(param);\r\n      },\r\n      getQueryField() {\r\n        //TODO 字段权限控制\r\n      },\r\n      onSelectAll(selected, selectedRows, changeRows) {\r\n        if (selected === true) {\r\n          for (var a = 0; a < changeRows.length; a++) {\r\n            this.dataSource2.push(changeRows[a]);\r\n          }\r\n        } else {\r\n          for (var b = 0; b < changeRows.length; b++) {\r\n            this.dataSource2.splice(this.dataSource2.indexOf(changeRows[b]), 1);\r\n          }\r\n        }\r\n        // console.log(selected, selectedRows, changeRows);\r\n      },\r\n      onSelect(record, selected) {\r\n        if (selected === true) {\r\n          this.dataSource2.push(record);\r\n        } else {\r\n          var index = this.dataSource2.indexOf(record);\r\n          //console.log();\r\n          if (index >= 0) {\r\n            this.dataSource2.splice(this.dataSource2.indexOf(record), 1);\r\n          }\r\n\r\n        }\r\n      },\r\n      onSelectChange(selectedRowKeys, selectedRows) {\r\n        this.selectedRowKeys = selectedRowKeys;\r\n        this.selectionRows = selectedRows;\r\n      },\r\n      onClearSelected() {\r\n        this.selectedRowKeys = [];\r\n        this.selectionRows = [];\r\n      },\r\n      handleDelete: function (record) {\r\n        this.dataSource2.splice(this.dataSource2.indexOf(record), 1);\r\n      },\r\n      handleTableChange(pagination, filters, sorter) {\r\n        //分页、排序、筛选变化时触发\r\n        console.log(sorter);\r\n        //TODO 筛选\r\n        if (Object.keys(sorter).length > 0) {\r\n          this.isorter.column = sorter.field;\r\n          this.isorter.order = \"ascend\" == sorter.order ? \"asc\" : \"desc\"\r\n        }\r\n        this.ipagination = pagination;\r\n        this.loadData();\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"less\" scoped>\r\n  .ant-card-body .table-operator {\r\n    margin-bottom: 18px;\r\n  }\r\n\r\n  .ant-table-tbody .ant-table-row td {\r\n    padding-top: 15px;\r\n    padding-bottom: 15px;\r\n  }\r\n\r\n  .anty-row-operator button {\r\n    margin: 0 5px\r\n  }\r\n\r\n  .ant-btn-danger {\r\n    background-color: #ffffff\r\n  }\r\n\r\n  .ant-modal-cust-warp {\r\n    height: 100%\r\n  }\r\n\r\n  .ant-modal-cust-warp .ant-modal-body {\r\n    height: calc(100% - 110px) !important;\r\n    overflow-y: auto\r\n  }\r\n\r\n  .ant-modal-cust-warp .ant-modal-content {\r\n    height: 90% !important;\r\n    overflow-y: hidden\r\n  }\r\n</style>"]}]}