{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\components\\layouts\\TabLayout.vue?vue&type=style&index=0&id=2fc1f699&lang=scss&scoped=true&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\components\\layouts\\TabLayout.vue","mtime":1581255485601},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\css-loader\\index.js","mtime":1570780111199},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1570779225817},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\postcss-loader\\src\\index.js","mtime":1570780438513},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\sass-loader\\lib\\loader.js","mtime":1570780529612},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n .navbox {\n   width: 100%;\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n\n\n }\n\n .detailFileItemBox {\n   width: 20%;\n   height: 50px;\n   background: #ffffff;\n   display: flex;\n   align-items: center;\n   /*background: darkcyan;*/\n   margin: 0 auto;\n   /*overflow-x: scroll;*/\n\n   .itemBox {\n     height: 100%;\n     line-height: 50px;\n     margin-left: 45px;\n\n     .active {\n       color: #2eabff;\n     }\n\n     .close:hover {\n       color: #999999;\n       cursor: pointer;\n     }\n\n     .text:hover {\n       color: #2eabff;\n       cursor: pointer;\n     }\n\n\n   }\n\n   .dropdown {\n     width: 100%;\n     height: 100%;\n   }\n\n   /*.navLists{*/\n   /*width: 92%;*/\n   /*height: 100%;*/\n   /*background: darkgoldenrod;*/\n\n   /*.swiper-slide{*/\n   /*width: 150px !important;*/\n   /*!*background: darkcyan;*!*/\n   /*display: flex;*/\n   /*align-items: center;*/\n   /*justify-content: space-around;*/\n\n   /*.close:hover{*/\n   /*color: #999999;*/\n   /*cursor: pointer;*/\n   /*}*/\n   /*.text:hover{*/\n   /*color: #2eabff;*/\n   /*cursor: pointer;*/\n   /*}*/\n   /*}*/\n   /*}*/\n }\n\n /*\n* The following styles are auto-applied to elements with\n* transition=\"page-transition\" when their visibility is toggled\n* by Vue.js.\n*\n* You can easily play with the page transition by editing\n* these styles.\n*/\n\n .page-transition-enter {\n   opacity: 0;\n }\n\n .page-transition-leave-active {\n   opacity: 0;\n }\n\n .page-transition-enter .page-transition-container,\n .page-transition-leave-active .page-transition-container {\n   -webkit-transform: scale(1.1);\n   transform: scale(1.1);\n }\n\n /*美化弹出Tab样式*/\n .ant-tabs-nav-container {\n   margin-top: 4px;\n }\n\n /* 修改 ant-tabs 样式 */\n .tab-layout-tabs.ant-tabs {\n   width: 100%;\n   border-bottom: 1px solid #ccc;\n   border-left: 1px solid #ccc;\n   background-color: white;\n   padding: 0 20px;\n\n   .ant-tabs-bar {\n     margin: 4px 0 0;\n     border: none;\n   }\n\n }\n\n .ant-tabs {\n\n   &.ant-tabs-card .ant-tabs-tab {\n\n     padding: 0 24px !important;\n     background-color: white !important;\n     margin-right: 10px !important;\n\n     .ant-tabs-close-x {\n       width: 12px !important;\n       height: 12px !important;\n       opacity: 0 !important;\n       cursor: pointer !important;\n       font-size: 12px !important;\n       margin: 0 !important;\n       position: absolute;\n       top: 36%;\n       right: 6px;\n     }\n\n     &:hover .ant-tabs-close-x {\n       opacity: 1 !important;\n     }\n\n   }\n\n }\n\n .ant-tabs.ant-tabs-card > .ant-tabs-bar {\n   .ant-tabs-tab {\n     border: none !important;\n     border-bottom: 1px solid transparent !important;\n   }\n\n   .ant-tabs-tab-active {\n     border-color: #1890ff !important;\n   }\n }\n\n\n",{"version":3,"sources":["TabLayout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoVA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"TabLayout.vue","sourceRoot":"src/components/layouts","sourcesContent":["<template>\r\n  <global-layout @dynamicRouterShow=\"dynamicRouterShow\">\r\n    <contextmenu :itemList=\"menuItemList\" :visible.sync=\"menuVisible\" @select=\"onMenuSelect\"/>\r\n\r\n    <div class=\"navbox\"  v-show=\"navisshow\">\r\n      <a-tabs\r\n        @contextmenu.native=\"e => onContextmenu(e)\"\r\n        v-if=\"multipage\"\r\n        :active-key=\"activePage\"\r\n        class=\"tab-layout-tabs\"\r\n        style=\"height:52px\"\r\n        :hide-add=\"true\"\r\n        type=\"editable-card\"\r\n        @change=\"changePage\"\r\n        @edit=\"editPage\">\r\n        <a-tab-pane :id=\"page.fullPath\" :key=\"page.fullPath\" v-for=\"page in pageList\">\r\n          <span slot=\"tab\" :pagekey=\"page.fullPath\" class=\"close\">{{ page.meta.title }}</span>\r\n        </a-tab-pane>\r\n      </a-tabs>\r\n    </div>\r\n\r\n\r\n    <div style=\"margin: 12px 12px 0;\">\r\n      <transition name=\"page-toggle\">\r\n        <keep-alive v-if=\"multipage\">\r\n          <router-view/>\r\n        </keep-alive>\r\n        <router-view v-else/>\r\n      </transition>\r\n    </div>\r\n  </global-layout>\r\n</template>\r\n\r\n<script>\r\n  import Swiper from 'swiper/js/swiper.min.js'\r\n  import 'swiper/css/swiper.min.css'\r\n  import GlobalLayout from '@/components/page/GlobalLayout'\r\n  import Contextmenu from '@/components/menu/Contextmenu'\r\n  import {mixin, mixinDevice} from '@/utils/mixin.js'\r\n  import {getAction, postAction} from \"../../api/manage\";\r\n\r\n  const indexKey = '/dashboard/analysis'\r\n\r\n  export default {\r\n    name: 'TabLayout',\r\n    inject: ['reload'],\r\n    components: {\r\n      GlobalLayout,\r\n      Contextmenu\r\n    },\r\n    mixins: [mixin, mixinDevice],\r\n    data() {\r\n      return {\r\n        navisshow:true,\r\n        pageList: [],\r\n        linkList: [],\r\n        activePage: '',\r\n        menuVisible: false,\r\n        menuItemList: [\r\n          {key: '1', icon: 'arrow-left', text: '关闭左侧'},\r\n          {key: '2', icon: 'arrow-right', text: '关闭右侧'},\r\n          {key: '3', icon: 'close', text: '关闭其它'}\r\n        ],\r\n        fileLists: '',   //获取store 中的值  this.$store.state.postDetialLists\r\n        currtentRouterBusdataId: this.$route.query.busdataId,\r\n        currtentRouterTableName: this.$route.query.tableName,\r\n        currtentRouterName: this.$route.path,   //\r\n        // navState:this.$store.state.navState     // 切换路由  监控不是“跳转测试”时  关闭大详情导航\r\n        navState: true,  // 切换路由  监控不是“跳转测试”时  关闭大详情导航\r\n\r\n        url: {\r\n          optionAndBtn: '/oaBus/newTask/optionAndBtn',\r\n          isHaveSaveBtn: '/oaBus/oaBusdata/haveSavePermission'\r\n\r\n        }\r\n\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      multipage() {\r\n        //判断如果是手机模式，自动切换为单页面模式\r\n        if (this.isMobile()) {\r\n          return false\r\n        } else {\r\n          return this.$store.state.app.multipage\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n\r\n      if(!this.$route.query.navisshow){\r\n        this.navisshow = true\r\n      }else{\r\n        this.navisshow = false\r\n      }\r\n\r\n\r\n      this.fileLists = this.$store.state.postDetialLists;\r\n      // console.log(this.currtentRouterName);\r\n      if (this.$route.path != indexKey) {\r\n        this.pageList.push({\r\n          name: 'dashboard-analysis',\r\n          path: indexKey,\r\n          fullPath: indexKey,\r\n          meta: {\r\n            icon: 'dashboard',\r\n            title: '首页'\r\n          }\r\n        })\r\n        this.linkList.push(indexKey)\r\n      }\r\n      this.pageList.push(this.$route)\r\n      this.linkList.push(this.$route.fullPath)\r\n      this.activePage = this.$route.fullPath\r\n\r\n\r\n    },\r\n\r\n    watch: {\r\n      '$route': function (newRoute) {\r\n\r\n        // console.log(this.$store.state.postDetialLists);\r\n        // this.fileLists = this.$store.state.postDetialLists\r\n        // 禁止跳转测试nav 按钮显示在到导航栏\r\n        // console.log(newRoute.path.includes('Test-detailFile'));\r\n        // alert(newRoute.path.includes('Test-detailFile'))\r\n        console.log(this.pageList);\r\n\r\n\r\n        this.navState = newRoute.path.includes('Test-detailFile');\r\n\r\n\r\n        this.activePage = newRoute.fullPath\r\n        if (!this.multipage) {\r\n          this.linkList = [newRoute.fullPath]\r\n          this.pageList = [Object.assign({}, newRoute)]\r\n        } else if (this.linkList.indexOf(newRoute.fullPath) < 0) {\r\n          this.linkList.push(newRoute.fullPath)\r\n          this.pageList.push(Object.assign({}, newRoute))\r\n        } else if (this.linkList.indexOf(newRoute.fullPath) >= 0) {\r\n          let oldIndex = this.linkList.indexOf(newRoute.fullPath)\r\n          let oldPositionRoute = this.pageList[oldIndex]\r\n          this.pageList.splice(oldIndex, 1, Object.assign({}, newRoute, {meta: oldPositionRoute.meta}))\r\n        }\r\n\r\n\r\n      },\r\n      'activePage': function (key) {\r\n        let index = this.linkList.lastIndexOf(key)\r\n        let waitRouter = this.pageList[index]\r\n        this.$router.push(Object.assign({}, waitRouter));\r\n      },\r\n      'multipage': function (newVal) {\r\n        if (!newVal) {\r\n          this.linkList = [this.$route.fullPath]\r\n          this.pageList = [this.$route]\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n\r\n      beforeRouteLeave(to) {\r\n        alert(to)\r\n      },\r\n\r\n      //打开大详情\r\n      openEachDetialFile(index, tableName, id) {\r\n        // 点击大详情列表  判断是否在大详情本页面\r\n        let postDetialPage = this.$route.path.includes('Test-detailFile');\r\n        if (postDetialPage) {\r\n          //--------------------判断是否需要提醒----------------------\r\n          //判断用户当前大详情是否有保存权限\r\n          getAction(this.url.isHaveSaveBtn, {table: tableName, id: id}).then(res => {\r\n            //返回值为true  时   弹窗提醒   相反则直接跳转不提醒\r\n            // alert(1212)\r\n            if (res.result) {\r\n              this.$confirm({\r\n                title: '请确认数据已保存！',\r\n                onOk: () => {\r\n                  let params = {tableName: tableName, busdataId: id};\r\n                  this.$store.commit('changeDetialLast', params)\r\n                  this.$router.push({path: '/mytask/taskList/Test-detailFile'})\r\n                  this.reload()\r\n                },\r\n              })\r\n            } else {\r\n              let params = {tableName: tableName, busdataId: id};\r\n              this.$store.commit('changeDetialLast', params)\r\n              this.$router.push({path: '/mytask/taskList/Test-detailFile'})\r\n              this.reload()\r\n            }\r\n          })\r\n        } else {\r\n          let params = {tableName: tableName, busdataId: id};\r\n          this.$store.commit('changeDetialLast', params)\r\n          // this.$store.commit('pushNewDetial',params)\r\n          this.$router.push({path: '/mytask/taskList/Test-detailFile'})\r\n          this.reload()\r\n        }\r\n\r\n\r\n      },\r\n\r\n      //删除该业务详情\r\n      cancelThisFile(index) {\r\n        console.log(index);\r\n        this.$store.commit('spliceThisArr', index)\r\n        // console.log(this.$store.state.postDetialLists);\r\n        let postDetialLists = this.$store.state.postDetialLists;\r\n        let lastFile = this.$store.state.postDetialLists.length - 1\r\n        // console.log(postDetialLists);\r\n        // console.log(lastFile);\r\n        // console.log(postDetialLists[lastFile]);\r\n        if (postDetialLists.length == 1) {\r\n          this.reload();\r\n        } else {\r\n          this.$router.push({path: '/mytask/taskList/Test-detailFile', query: postDetialLists[lastFile]})\r\n\r\n        }\r\n      },\r\n      changePage(key) {\r\n        this.activePage = key\r\n      },\r\n      editPage(key, action) {\r\n        this[action](key)\r\n      },\r\n      removeQueryParams() {\r\n        console.log('=====>>>>>>>>>>>>清除记录的缓存：：')\r\n        let path = this.$route.path\r\n        let userInfo = localStorage.getItem('userdata');\r\n        if (userInfo == undefined) return\r\n        let user = JSON.parse(userInfo)\r\n        let uid = user.userInfo.id\r\n        //清除记录的缓存\r\n        localStorage.removeItem(uid + path)\r\n\r\n      },\r\n      remove(key) {\r\n        if (key == indexKey) {\r\n          this.$message.warning('首页不能关闭!')\r\n          return\r\n        }\r\n        if (this.pageList.length === 1) {\r\n          this.$message.warning('这是最后一页，不能再关闭了啦')\r\n          return\r\n        }\r\n        this.removeQueryParams();\r\n\r\n        this.pageList = this.pageList.filter(item => item.fullPath !== key)\r\n        let index = this.linkList.indexOf(key)\r\n        this.linkList = this.linkList.filter(item => item !== key)\r\n        index = index >= this.linkList.length ? this.linkList.length - 1 : index\r\n        this.activePage = this.linkList[index]\r\n      },\r\n      onContextmenu(e) {\r\n        const pagekey = this.getPageKey(e.target)\r\n        if (pagekey !== null) {\r\n          e.preventDefault()\r\n          this.menuVisible = true\r\n        }\r\n      },\r\n      getPageKey(target, depth) {\r\n        depth = depth || 0\r\n        if (depth > 2) {\r\n          return null\r\n        }\r\n        let pageKey = target.getAttribute('pagekey')\r\n        pageKey = pageKey || (target.previousElementSibling ? target.previousElementSibling.getAttribute('pagekey') : null)\r\n        return pageKey || (target.firstElementChild ? this.getPageKey(target.firstElementChild, ++depth) : null)\r\n      },\r\n      onMenuSelect(key, target) {\r\n        let pageKey = this.getPageKey(target)\r\n        switch (key) {\r\n          case '1':\r\n            this.closeLeft(pageKey)\r\n            break\r\n          case '2':\r\n            this.closeRight(pageKey)\r\n            break\r\n          case '3':\r\n            this.closeOthers(pageKey)\r\n            break\r\n          default:\r\n            break\r\n        }\r\n      },\r\n      closeOthers(pageKey) {\r\n        let index = this.linkList.indexOf(pageKey)\r\n        if (pageKey == indexKey) {\r\n          this.linkList = this.linkList.slice(index, index + 1)\r\n          this.pageList = this.pageList.slice(index, index + 1)\r\n          this.activePage = this.linkList[0]\r\n        } else {\r\n          let indexContent = this.pageList.slice(0, 1)[0]\r\n          this.linkList = this.linkList.slice(index, index + 1)\r\n          this.pageList = this.pageList.slice(index, index + 1)\r\n          this.linkList.unshift(indexKey)\r\n          this.pageList.unshift(indexContent)\r\n          this.activePage = this.linkList[1]\r\n        }\r\n      },\r\n      closeLeft(pageKey) {\r\n        if (pageKey == indexKey) {\r\n          return\r\n        }\r\n        let tempList = [...this.pageList]\r\n        let indexContent = tempList.slice(0, 1)[0]\r\n        let index = this.linkList.indexOf(pageKey)\r\n        this.linkList = this.linkList.slice(index)\r\n        this.pageList = this.pageList.slice(index)\r\n        this.linkList.unshift(indexKey)\r\n        this.pageList.unshift(indexContent)\r\n        if (this.linkList.indexOf(this.activePage) < 0) {\r\n          this.activePage = this.linkList[0]\r\n        }\r\n      },\r\n      closeRight(pageKey) {\r\n        let index = this.linkList.indexOf(pageKey)\r\n        this.linkList = this.linkList.slice(0, index + 1)\r\n        this.pageList = this.pageList.slice(0, index + 1)\r\n        if (this.linkList.indexOf(this.activePage < 0)) {\r\n          this.activePage = this.linkList[this.linkList.length - 1]\r\n        }\r\n      },\r\n      //update-begin-author:taoyan date:20190430 for:动态路由title显示配置的菜单title而不是其对应路由的title\r\n      dynamicRouterShow(key, title) {\r\n        let keyIndex = this.linkList.indexOf(key)\r\n        if (keyIndex >= 0) {\r\n          let currRouter = this.pageList[keyIndex]\r\n          let meta = Object.assign({}, currRouter.meta, {title: title})\r\n          this.pageList.splice(keyIndex, 1, Object.assign({}, currRouter, {meta: meta}))\r\n        }\r\n      }\r\n      //update-end-author:taoyan date:20190430 for:动态路由title显示配置的菜单title而不是其对应路由的title\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .navbox {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n\r\n  }\r\n\r\n  .detailFileItemBox {\r\n    width: 20%;\r\n    height: 50px;\r\n    background: #ffffff;\r\n    display: flex;\r\n    align-items: center;\r\n    /*background: darkcyan;*/\r\n    margin: 0 auto;\r\n    /*overflow-x: scroll;*/\r\n\r\n    .itemBox {\r\n      height: 100%;\r\n      line-height: 50px;\r\n      margin-left: 45px;\r\n\r\n      .active {\r\n        color: #2eabff;\r\n      }\r\n\r\n      .close:hover {\r\n        color: #999999;\r\n        cursor: pointer;\r\n      }\r\n\r\n      .text:hover {\r\n        color: #2eabff;\r\n        cursor: pointer;\r\n      }\r\n\r\n\r\n    }\r\n\r\n    .dropdown {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    /*.navLists{*/\r\n    /*width: 92%;*/\r\n    /*height: 100%;*/\r\n    /*background: darkgoldenrod;*/\r\n\r\n    /*.swiper-slide{*/\r\n    /*width: 150px !important;*/\r\n    /*!*background: darkcyan;*!*/\r\n    /*display: flex;*/\r\n    /*align-items: center;*/\r\n    /*justify-content: space-around;*/\r\n\r\n    /*.close:hover{*/\r\n    /*color: #999999;*/\r\n    /*cursor: pointer;*/\r\n    /*}*/\r\n    /*.text:hover{*/\r\n    /*color: #2eabff;*/\r\n    /*cursor: pointer;*/\r\n    /*}*/\r\n    /*}*/\r\n    /*}*/\r\n  }\r\n\r\n  /*\r\n * The following styles are auto-applied to elements with\r\n * transition=\"page-transition\" when their visibility is toggled\r\n * by Vue.js.\r\n *\r\n * You can easily play with the page transition by editing\r\n * these styles.\r\n */\r\n\r\n  .page-transition-enter {\r\n    opacity: 0;\r\n  }\r\n\r\n  .page-transition-leave-active {\r\n    opacity: 0;\r\n  }\r\n\r\n  .page-transition-enter .page-transition-container,\r\n  .page-transition-leave-active .page-transition-container {\r\n    -webkit-transform: scale(1.1);\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  /*美化弹出Tab样式*/\r\n  .ant-tabs-nav-container {\r\n    margin-top: 4px;\r\n  }\r\n\r\n  /* 修改 ant-tabs 样式 */\r\n  .tab-layout-tabs.ant-tabs {\r\n    width: 100%;\r\n    border-bottom: 1px solid #ccc;\r\n    border-left: 1px solid #ccc;\r\n    background-color: white;\r\n    padding: 0 20px;\r\n\r\n    .ant-tabs-bar {\r\n      margin: 4px 0 0;\r\n      border: none;\r\n    }\r\n\r\n  }\r\n\r\n  .ant-tabs {\r\n\r\n    &.ant-tabs-card .ant-tabs-tab {\r\n\r\n      padding: 0 24px !important;\r\n      background-color: white !important;\r\n      margin-right: 10px !important;\r\n\r\n      .ant-tabs-close-x {\r\n        width: 12px !important;\r\n        height: 12px !important;\r\n        opacity: 0 !important;\r\n        cursor: pointer !important;\r\n        font-size: 12px !important;\r\n        margin: 0 !important;\r\n        position: absolute;\r\n        top: 36%;\r\n        right: 6px;\r\n      }\r\n\r\n      &:hover .ant-tabs-close-x {\r\n        opacity: 1 !important;\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  .ant-tabs.ant-tabs-card > .ant-tabs-bar {\r\n    .ant-tabs-tab {\r\n      border: none !important;\r\n      border-bottom: 1px solid transparent !important;\r\n    }\r\n\r\n    .ant-tabs-tab-active {\r\n      border-color: #1890ff !important;\r\n    }\r\n  }\r\n\r\n\r\n</style>"]}]}