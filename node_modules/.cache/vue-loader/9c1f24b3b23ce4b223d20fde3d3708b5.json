{"remainingRequest":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\dict\\JMultiSelectTag.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\dict\\JMultiSelectTag.vue","mtime":1568535198112},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883562},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858740},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883562},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696677}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {ajaxGetDictItems} from '@/api/api'\nexport default {\n  name: 'JMultiSelectTag',\n  props: {\n    dictCode: String,\n    placeholder: String,\n    disabled: Boolean,\n    value: String,\n    type: String,\n    options:Array\n  },\n  data() {\n    return {\n      dictOptions: [],\n      tagType:\"\",\n      arrayValue:!this.value?[]:this.value.split(\",\")\n    }\n  },\n  created() {\n    if(!this.type || this.type===\"list_multi\"){\n      this.tagType = \"select\"\n    }else{\n      this.tagType = this.type\n    }\n    //获取字典数据\n    this.initDictData();\n  },\n  watch:{\n    options: function(val){\n      this.setCurrentDictOptions(val);\n    },\n    value (val) {\n      if(!val){\n        this.arrayValue = []\n      }else{\n        this.arrayValue = this.value.split(\",\")\n      }\n    }\n  },\n  methods: {\n    initDictData() {\n      if(this.options && this.options.length>0){\n        this.dictOptions = [...this.options]\n      }else{\n        //根据字典Code, 初始化字典数组\n        ajaxGetDictItems(this.dictCode, null).then((res) => {\n          if (res.success) {\n            this.dictOptions = res.result;\n          }\n        })\n      }\n\n    },\n    onChange (selectedValue) {\n      this.$emit('change', selectedValue.join(\",\"));\n    },\n    setCurrentDictOptions(dictOptions){\n      this.dictOptions = dictOptions\n    },\n    getCurrentDictOptions(){\n      return this.dictOptions\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n}\n",{"version":3,"sources":["JMultiSelectTag.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JMultiSelectTag.vue","sourceRoot":"src/components/dict","sourcesContent":["<template>\r\n  <a-checkbox-group v-if=\"tagType=='checkbox'\" @change=\"onChange\" :value=\"arrayValue\" :disabled=\"disabled\">\r\n    <a-checkbox v-for=\"(item, key) in dictOptions\" :key=\"key\" :value=\"item.value\">{{ item.text || item.label }}</a-checkbox>\r\n  </a-checkbox-group>\r\n\r\n  <a-select\r\n    v-else-if=\"tagType=='select'\"\r\n    :value=\"arrayValue\"\r\n    @change=\"onChange\"\r\n    :disabled=\"disabled\"\r\n    mode=\"multiple\"\r\n    :placeholder=\"placeholder\">\r\n    <a-select-option\r\n      v-for=\"(item,index) in dictOptions\"\r\n      :key=\"index\"\r\n      :value=\"item.value\">\r\n      <span style=\"display: inline-block;width: 100%\" :title=\" item.text || item.label \">\r\n        {{ item.text || item.label }}\r\n      </span>\r\n    </a-select-option>\r\n  </a-select>\r\n\r\n</template>\r\n\r\n<script>\r\n  import {ajaxGetDictItems} from '@/api/api'\r\n  export default {\r\n    name: 'JMultiSelectTag',\r\n    props: {\r\n      dictCode: String,\r\n      placeholder: String,\r\n      disabled: Boolean,\r\n      value: String,\r\n      type: String,\r\n      options:Array\r\n    },\r\n    data() {\r\n      return {\r\n        dictOptions: [],\r\n        tagType:\"\",\r\n        arrayValue:!this.value?[]:this.value.split(\",\")\r\n      }\r\n    },\r\n    created() {\r\n      if(!this.type || this.type===\"list_multi\"){\r\n        this.tagType = \"select\"\r\n      }else{\r\n        this.tagType = this.type\r\n      }\r\n      //获取字典数据\r\n      this.initDictData();\r\n    },\r\n    watch:{\r\n      options: function(val){\r\n        this.setCurrentDictOptions(val);\r\n      },\r\n      value (val) {\r\n        if(!val){\r\n          this.arrayValue = []\r\n        }else{\r\n          this.arrayValue = this.value.split(\",\")\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      initDictData() {\r\n        if(this.options && this.options.length>0){\r\n          this.dictOptions = [...this.options]\r\n        }else{\r\n          //根据字典Code, 初始化字典数组\r\n          ajaxGetDictItems(this.dictCode, null).then((res) => {\r\n            if (res.success) {\r\n              this.dictOptions = res.result;\r\n            }\r\n          })\r\n        }\r\n\r\n      },\r\n      onChange (selectedValue) {\r\n        this.$emit('change', selectedValue.join(\",\"));\r\n      },\r\n      setCurrentDictOptions(dictOptions){\r\n        this.dictOptions = dictOptions\r\n      },\r\n      getCurrentDictOptions(){\r\n        return this.dictOptions\r\n      }\r\n    },\r\n    model: {\r\n      prop: 'value',\r\n      event: 'change'\r\n    }\r\n  }\r\n</script>\r\n"]}]}