{"remainingRequest":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\table\\StandardTable.vue?vue&type=style&index=0&id=1de75ee0&scoped=true&lang=css&","dependencies":[{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\table\\StandardTable.vue","mtime":1568535214681},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\css-loader\\index.js","mtime":1568345719555},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1568345696677},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\postcss-loader\\src\\index.js","mtime":1568345891990},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883562},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696677}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.alert {\n    margin-bottom: 16px;\n}\n",{"version":3,"sources":["StandardTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwPA;AACA;AACA","file":"StandardTable.vue","sourceRoot":"src/components/table","sourcesContent":["<template>\r\n  <div class=\"standard-table\">\r\n    <div class=\"alert\">\r\n      <a-alert type=\"info\" :show-icon=\"true\">\r\n        <div slot=\"message\">\r\n          已选择&nbsp;<a style=\"font-weight: 600\">{{ selectedRows.length }}</a>&nbsp;&nbsp;\r\n          <template v-for=\"(item, index) in needTotalList\" v-if=\"item.needTotal\">\r\n            {{ item.title }} 总计&nbsp;\r\n            <a :key=\"index\" style=\"font-weight: 600\">\r\n              {{ item.customRender ? item.customRender(item.total) : item.total }}\r\n            </a>&nbsp;&nbsp;\r\n          </template>\r\n          <a style=\"margin-left: 24px\" @click=\"onClearSelected\">清空</a>\r\n        </div>\r\n      </a-alert>\r\n    </div>\r\n    <a-table\r\n      :size=\"size\"\r\n      :bordered=\"bordered\"\r\n      :loading=\"loading\"\r\n      :columns=\"columns\"\r\n      :dataSource=\"current\"\r\n      :rowKey=\"rowKey\"\r\n      :pagination=\"pagination\"\r\n      :rowSelection=\"{ selectedRowKeys: selectedRowKeys, onChange: updateSelect }\"\r\n    >\r\n    </a-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"StandardTable\",\r\n    // props: ['bordered', 'loading', 'columns', 'data', 'rowKey', 'pagination', 'selectedRows'],\r\n    props: {\r\n\r\n      /**\r\n       * 数据加载函数，返回值必须是 Promise\r\n       * 默认情况下必须传递 data 参数；\r\n       *    如果使用本地数据渲染表格，业务代码中将获取本地数据包装为 Promise 即可。\r\n       *\r\n       * currentData 用于向外暴露表格当前渲染的数据，\r\n       * 业务开发中也可以直接修改 currentData，从而重新渲染表格（仅推荐用于客户端排序、数据过滤等场景）\r\n       */\r\n      data: {\r\n        type: Function,\r\n        required: true\r\n      },\r\n      dataSource: {\r\n        type: Array,\r\n        default () {\r\n          return []\r\n        }\r\n      },\r\n      columns: {\r\n        type: Array,\r\n        required: true\r\n      },\r\n/*      pagination: {\r\n        type: Object,\r\n        default () {\r\n          return {}\r\n        }\r\n      },*/\r\n      pageSize: {\r\n        type: Number,\r\n        default: 10\r\n      },\r\n      pageNum: {\r\n        type: Number,\r\n        default: 1\r\n      },\r\n      pageSizeOptions: {\r\n        type: Array,\r\n        default () {\r\n          return ['10', '20', '30', '40', '50']\r\n        }\r\n      },\r\n      responseParamsName: {\r\n        type: Object,\r\n        default () {\r\n          return {}\r\n        }\r\n      },\r\n      bordered: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      /**\r\n       * 表格大小风格，default, middle, small\r\n       */\r\n      size: {\r\n        type: String,\r\n        default: 'default'\r\n      },\r\n      rowKey: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      selectedRows: {\r\n        type: Array,\r\n        default: null\r\n      }\r\n    },\r\n    data () {\r\n      return {\r\n        needTotalList: [],\r\n        selectedRowKeys: [],\r\n\r\n        loading: true,\r\n\r\n        total: 0,\r\n        pageNumber: this.pageNum,\r\n        currentPageSize: this.pageSize,\r\n        defaultCurrent: 1,\r\n        sortParams: {},\r\n\r\n        current: [],\r\n        pagination: {},\r\n        paramsName: {},\r\n      }\r\n    },\r\n    created () {\r\n      //数据请求参数配置\r\n      this.paramsName = Object.assign(\r\n        {},\r\n        {\r\n          pageNumber: \"pageNo\",\r\n          pageSize: \"pageSize\",\r\n          total: \"totalCount\",\r\n          results: \"data\",\r\n          sortColumns: \"sortColumns\"\r\n        },\r\n        this.responseParamsName\r\n      );\r\n\r\n      this.needTotalList = this.initTotalList(this.columns)\r\n\r\n      // load data\r\n      this.loadData( { pageNum: this.pageNumber } )\r\n    },\r\n    methods: {\r\n      updateSelect (selectedRowKeys, selectedRows) {\r\n        this.selectedRowKeys = selectedRowKeys\r\n        let list = this.needTotalList\r\n        this.needTotalList = list.map(item => {\r\n          return {\r\n            ...item,\r\n            total: selectedRows.reduce((sum, val) => {\r\n              return sum + val[item.dataIndex]\r\n            }, 0)\r\n          }\r\n        })\r\n        this.$emit('change', selectedRowKeys, selectedRows)\r\n      },\r\n      initTotalList (columns) {\r\n        const totalList = []\r\n        columns.forEach(column => {\r\n          if (column.needTotal) {\r\n            totalList.push({ ...column, total: 0 })\r\n          }\r\n        })\r\n        return totalList\r\n      },\r\n\r\n      loadData (params) {\r\n        let that = this\r\n        that.loading = true\r\n        params = Object.assign({}, params)\r\n        const remoteParams = Object.assign({}, that.sortParams)\r\n        remoteParams[that.paramsName.pageNumber] = params.pageNum || that.pageNumber\r\n        remoteParams[that.paramsName.pageSize] = params.pageSize || that.currentPageSize\r\n\r\n        if (params.pageNum) {\r\n          that.pageNumber = params.pageNum\r\n        }\r\n        if (params.pageSize) {\r\n          that.currentPageSize = params.pageSize\r\n        }\r\n\r\n        let dataPromise = that.data(remoteParams)\r\n\r\n        dataPromise.then( response => {\r\n          if (!response) {\r\n            that.loading = false\r\n            return\r\n          }\r\n          let results = response[that.paramsName.results]\r\n          results = (results instanceof Array && results) || []\r\n\r\n          that.current = results\r\n\r\n          that.$emit(\"update:currentData\", that.current.slice())\r\n          that.$emit(\"dataloaded\", that.current.slice())\r\n\r\n          that.total = response[that.paramsName.total] * 1\r\n          that.pagination = that.pager()\r\n          that.loading = false\r\n        }, () => {\r\n          // error callback\r\n          that.loading = false\r\n        })\r\n      },\r\n      // eslint-disable-next-line\r\n      onPagerChange (page, pageSize) {\r\n        this.pageNumber = page\r\n        this.loadData({ pageNum: page })\r\n      },\r\n      onPagerSizeChange (current, size) {\r\n        this.currentPageSize = size\r\n        /*\r\n        if (current === this.pageNumber) this.loadData()\r\n        console.log('page-size-change', current, size)\r\n        */\r\n      },\r\n      onClearSelected () {\r\n        this.selectedRowKeys = []\r\n        this.updateSelect([], [])\r\n      },\r\n      pager () {\r\n        return {\r\n          total: this.total,\r\n          showTotal: total => `共有 ${total} 条`,\r\n          showSizeChanger: true,\r\n          pageSizeOptions: this.pageSizeOptions,\r\n          pageSize: this.pageSize,\r\n          defaultCurrent: this.defaultCurrent,\r\n          onChange: this.onPagerChange,\r\n          onShowSizeChange: this.onPagerSizeChange\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      'selectedRows': function (selectedRows) {\r\n        this.needTotalList = this.needTotalList.map(item => {\r\n          return {\r\n            ...item,\r\n            total: selectedRows.reduce( (sum, val) => {\r\n              return sum + val[item.dataIndex]\r\n            }, 0)\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n    .alert {\r\n        margin-bottom: 16px;\r\n    }\r\n</style>"]}]}