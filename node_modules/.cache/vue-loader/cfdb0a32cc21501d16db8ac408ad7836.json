{"remainingRequest":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\PermissionDataRuleModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\PermissionDataRuleModal.vue","mtime":1568535265487},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883562},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858740},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883562},{"path":"D:\\ProgramFiles\\ideaIUWork\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696677}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { httpAction } from '@/api/manage'\nimport pick from 'lodash.pick'\n\nexport default {\n  name: 'PermissionDataRuleModal',\n  data() {\n    return {\n      queryParam: {},\n      title: '操作',\n      visible: false,\n      model: {},\n      ruleConditionList: [],\n      labelCol: {\n        xs: {span: 24},\n        sm: {span: 5}\n      },\n      wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 16}\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      permissionId: '',\n      validatorRules: {\n        ruleConditions: {rules: [{required: true, message: '请选择条件!'}]},\n        ruleName: {rules: [{required: true, message: '请输入规则名称!'}]},\n        ruleValue: {rules: [{required: true, message: '请输入规则值!'}]},\n        ruleColumn: {rules: []}\n      },\n      url: {\n        list: '/sys/dictItem/list',\n        add: '/sys/permission/addPermissionRule',\n        edit: '/sys/permission/editPermissionRule'\n      },\n      showRuleColumn:true\n    }\n  },\n  created() {\n  },\n  methods: {\n    add(permId) {\n      this.permissionId = permId\n      this.edit({})\n    },\n    edit(record) {\n      this.form.resetFields()\n      this.model = Object.assign({}, record)\n      if (record.permissionId) {\n        this.model.permissionId = record.permissionId\n      } else {\n        this.model.permissionId = this.permissionId\n      }\n      this.visible = true\n      this.initRuleCondition()\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model, 'status','ruleName', 'ruleColumn', 'ruleConditions', 'ruleValue'))\n      })\n    },\n    close() {\n      this.$emit('close')\n      this.visible = false\n    },\n    handleOk() {\n      const that = this\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true\n          let httpurl = ''\n          let method = ''\n          if (!this.model.id) {\n            httpurl += this.url.add\n            method = 'post'\n          } else {\n            httpurl += this.url.edit\n            method = 'put'\n          }\n          let formData = Object.assign(this.model, values)\n          if(formData.ruleColumn && formData.ruleColumn.length>0){\n            formData.ruleColumn = formData.ruleColumn.trim()\n          }\n          if(formData.ruleValue && formData.ruleValue.length>0){\n            formData.ruleValue = formData.ruleValue.trim()\n          }\n          httpAction(httpurl, formData, method).then((res) => {\n            if (res.success) {\n              that.$message.success(res.message)\n              that.$emit('ok')\n            } else {\n              that.$message.warning(res.message)\n            }\n          }).finally(() => {\n            that.confirmLoading = false\n            that.close()\n          })\n        }\n      })\n    },\n    handleCancel() {\n      this.close()\n    },\n    initRuleCondition(){\n      if(this.model.ruleConditions && this.model.ruleConditions=='USE_SQL_RULES'){\n        this.showRuleColumn = false\n      }else{\n        this.showRuleColumn = true\n      }\n    },\n    handleChangeRuleCondition(val){\n      if(val=='USE_SQL_RULES'){\n        this.form.setFieldsValue({\n          ruleColumn:''\n        })\n        this.showRuleColumn = false\n      }else{\n        this.showRuleColumn = true\n      }\n    }\n  }\n}\n",{"version":3,"sources":["PermissionDataRuleModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PermissionDataRuleModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"1000\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"规则名称\">\r\n          <a-input placeholder=\"请输入规则名称\" v-decorator=\"['ruleName', validatorRules.ruleName]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          v-show=\"showRuleColumn\"\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"规则字段\">\r\n          <a-input placeholder=\"请输入规则字段\" v-decorator=\"['ruleColumn', validatorRules.ruleColumn]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"条件规则\">\r\n          <j-dict-select-tag @change=\"handleChangeRuleCondition\" v-decorator=\"['ruleConditions', validatorRules.ruleConditions]\" placeholder=\"请输入条件规则\" :triggerChange=\"true\" dictCode=\"rule_conditions\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"规则值\">\r\n          <a-input placeholder=\"请输入规则值\" v-decorator=\"['ruleValue', validatorRules.ruleValue]\"/>\r\n        </a-form-item>\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"状态\">\r\n          <a-radio-group buttonStyle=\"solid\" v-decorator=\"['status',{initialValue:'1'}]\">\r\n            <a-radio-button value=\"1\">有效</a-radio-button>\r\n            <a-radio-button value=\"0\">无效</a-radio-button>\r\n          </a-radio-group>\r\n        </a-form-item>\r\n\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n<script>\r\n  import { httpAction } from '@/api/manage'\r\n  import pick from 'lodash.pick'\r\n\r\n  export default {\r\n    name: 'PermissionDataRuleModal',\r\n    data() {\r\n      return {\r\n        queryParam: {},\r\n        title: '操作',\r\n        visible: false,\r\n        model: {},\r\n        ruleConditionList: [],\r\n        labelCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 5}\r\n        },\r\n        wrapperCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 16}\r\n        },\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        permissionId: '',\r\n        validatorRules: {\r\n          ruleConditions: {rules: [{required: true, message: '请选择条件!'}]},\r\n          ruleName: {rules: [{required: true, message: '请输入规则名称!'}]},\r\n          ruleValue: {rules: [{required: true, message: '请输入规则值!'}]},\r\n          ruleColumn: {rules: []}\r\n        },\r\n        url: {\r\n          list: '/sys/dictItem/list',\r\n          add: '/sys/permission/addPermissionRule',\r\n          edit: '/sys/permission/editPermissionRule'\r\n        },\r\n        showRuleColumn:true\r\n      }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n      add(permId) {\r\n        this.permissionId = permId\r\n        this.edit({})\r\n      },\r\n      edit(record) {\r\n        this.form.resetFields()\r\n        this.model = Object.assign({}, record)\r\n        if (record.permissionId) {\r\n          this.model.permissionId = record.permissionId\r\n        } else {\r\n          this.model.permissionId = this.permissionId\r\n        }\r\n        this.visible = true\r\n        this.initRuleCondition()\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue(pick(this.model, 'status','ruleName', 'ruleColumn', 'ruleConditions', 'ruleValue'))\r\n        })\r\n      },\r\n      close() {\r\n        this.$emit('close')\r\n        this.visible = false\r\n      },\r\n      handleOk() {\r\n        const that = this\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true\r\n            let httpurl = ''\r\n            let method = ''\r\n            if (!this.model.id) {\r\n              httpurl += this.url.add\r\n              method = 'post'\r\n            } else {\r\n              httpurl += this.url.edit\r\n              method = 'put'\r\n            }\r\n            let formData = Object.assign(this.model, values)\r\n            if(formData.ruleColumn && formData.ruleColumn.length>0){\r\n              formData.ruleColumn = formData.ruleColumn.trim()\r\n            }\r\n            if(formData.ruleValue && formData.ruleValue.length>0){\r\n              formData.ruleValue = formData.ruleValue.trim()\r\n            }\r\n            httpAction(httpurl, formData, method).then((res) => {\r\n              if (res.success) {\r\n                that.$message.success(res.message)\r\n                that.$emit('ok')\r\n              } else {\r\n                that.$message.warning(res.message)\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false\r\n              that.close()\r\n            })\r\n          }\r\n        })\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n      initRuleCondition(){\r\n        if(this.model.ruleConditions && this.model.ruleConditions=='USE_SQL_RULES'){\r\n          this.showRuleColumn = false\r\n        }else{\r\n          this.showRuleColumn = true\r\n        }\r\n      },\r\n      handleChangeRuleCondition(val){\r\n        if(val=='USE_SQL_RULES'){\r\n          this.form.setFieldsValue({\r\n            ruleColumn:''\r\n          })\r\n          this.showRuleColumn = false\r\n        }else{\r\n          this.showRuleColumn = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}