{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\buttons\\CatOpinionListModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\buttons\\CatOpinionListModal.vue","mtime":1576655828026},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1570779245522},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {httpAction} from '@/api/manage'\nimport {getAction} from '@/api/manage'\n\nexport default {\n  name: \"UpdatePaperTitle\",\n  data() {\n    return {\n      title: \"操作\",\n      visible: false,\n      model: {},\n      dataSource: [],\n      index: [],\n      length: [],\n      columns: [\n        {\n          title: '部门',\n          width: 100,\n          align: \"center\",\n          dataIndex: 'sdeptName',\n          customRender: (value, row, index) => {\n            index = row.iid\n            const obj = {\n              children: value,\n              attrs: {}\n            };\n            let merge = [];\n            for (let i = 0; i < this.index.length; i += this.length[i]) {\n              merge.push(this.index[i]);\n            }\n            for (let i = 0; i < merge.length; i++) {\n              if (index === merge[i]) {\n                obj.attrs.rowSpan = this.length[merge[i]];\n              }\n\n              for (let j = 1; j < this.length[merge[i]]; j++) {\n                if (index === this.index[merge[i] + this.length[merge[i]] - j]) {\n                  obj.attrs.rowSpan = 0;\n                }\n              }\n            }\n            return obj\n          }\n        },\n        {\n          title: '姓名',\n          align: \"center\",\n          width: 130,\n          dataIndex: 'sname'\n        },\n        {\n          title: '意见',\n          align: \"center\",\n          width: 150,\n          dataIndex: 'sopinion',\n        }\n      ],\n      labelCol: {\n        xs: {span: 24},\n        sm: {span: 5},\n      },\n      wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 16},\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {},\n      url: {\n        opinion: \"/oaBus/oaBusdataOpinion/getOpinionList\"\n      },\n    }\n  },\n  created() {\n\n  },\n  methods: {\n    show(record) {\n      console.log(record)\n      this.visible = true;\n      this.getOpinionList(record);\n    },\n    getOpinionList(record) {\n      let url = this.url.opinion;\n      getAction(url, {table:record.opinionTable, iBusdataId:record.i_id, sTaskdefKey:record.sTaskdefKey}).then((res) => {\n        this.dataSource = res.result;\n\n        var map = {}\n        let collation = this.dataSource\n        //type\n        for (let i in collation) {\n          let optionType = collation[i]\n          //type-data\n          for (let oaIndex in optionType.oa) {\n            let key = optionType.name + '-' + optionType.oa[oaIndex].sdeptName\n            if (map[key] == undefined) {\n              map[key] = []\n              map[key].push(optionType.oa[oaIndex])\n            } else {\n              map[key].push(optionType.oa[oaIndex])\n            }\n          }\n        }\n        // console.log('-------->>>>',JSON.stringify(map))\n        let opinionData = JSON.parse(JSON.stringify(map));\n        for (let i = 0; i < this.dataSource.length; i++) {\n          for (let j = 0; j < this.dataSource[i].oa.length; j++) {\n            this.index.push(this.dataSource[i].oa[j].iid);\n            this.length.push(opinionData[this.dataSource[i].oa[j].opinionName + '-' + this.dataSource[i].oa[j].sdeptName].length);\n          }\n\n        }\n      })\n    },\n    close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk() {\n      const that = this;\n      that.close();\n    },\n    handleCancel() {\n      this.close()\n    },\n\n\n  }\n}\n",{"version":3,"sources":["CatOpinionListModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"CatOpinionListModal.vue","sourceRoot":"src/views/buttons","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"1000\"\r\n    :visible=\"visible\"\r\n    @ok=\"handleOk\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n    <div v-for=\"(item,index) in dataSource\">\r\n      <p class=\"title\"><span>{{item.name}}</span></p>\r\n      <a-table ref=\"table\"\r\n               size=\"middle\"\r\n               bordered\r\n               :columns=\"columns\"\r\n               :dataSource=\"item.oa\"\r\n               :pagination=\"false\"\r\n      >\r\n      </a-table>\r\n    </div>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import {httpAction} from '@/api/manage'\r\n  import {getAction} from '@/api/manage'\r\n\r\n  export default {\r\n    name: \"UpdatePaperTitle\",\r\n    data() {\r\n      return {\r\n        title: \"操作\",\r\n        visible: false,\r\n        model: {},\r\n        dataSource: [],\r\n        index: [],\r\n        length: [],\r\n        columns: [\r\n          {\r\n            title: '部门',\r\n            width: 100,\r\n            align: \"center\",\r\n            dataIndex: 'sdeptName',\r\n            customRender: (value, row, index) => {\r\n              index = row.iid\r\n              const obj = {\r\n                children: value,\r\n                attrs: {}\r\n              };\r\n              let merge = [];\r\n              for (let i = 0; i < this.index.length; i += this.length[i]) {\r\n                merge.push(this.index[i]);\r\n              }\r\n              for (let i = 0; i < merge.length; i++) {\r\n                if (index === merge[i]) {\r\n                  obj.attrs.rowSpan = this.length[merge[i]];\r\n                }\r\n\r\n                for (let j = 1; j < this.length[merge[i]]; j++) {\r\n                  if (index === this.index[merge[i] + this.length[merge[i]] - j]) {\r\n                    obj.attrs.rowSpan = 0;\r\n                  }\r\n                }\r\n              }\r\n              return obj\r\n            }\r\n          },\r\n          {\r\n            title: '姓名',\r\n            align: \"center\",\r\n            width: 130,\r\n            dataIndex: 'sname'\r\n          },\r\n          {\r\n            title: '意见',\r\n            align: \"center\",\r\n            width: 150,\r\n            dataIndex: 'sopinion',\r\n          }\r\n        ],\r\n        labelCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 5},\r\n        },\r\n        wrapperCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 16},\r\n        },\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        validatorRules: {},\r\n        url: {\r\n          opinion: \"/oaBus/oaBusdataOpinion/getOpinionList\"\r\n        },\r\n      }\r\n    },\r\n    created() {\r\n\r\n    },\r\n    methods: {\r\n      show(record) {\r\n        console.log(record)\r\n        this.visible = true;\r\n        this.getOpinionList(record);\r\n      },\r\n      getOpinionList(record) {\r\n        let url = this.url.opinion;\r\n        getAction(url, {table:record.opinionTable, iBusdataId:record.i_id, sTaskdefKey:record.sTaskdefKey}).then((res) => {\r\n          this.dataSource = res.result;\r\n\r\n          var map = {}\r\n          let collation = this.dataSource\r\n          //type\r\n          for (let i in collation) {\r\n            let optionType = collation[i]\r\n            //type-data\r\n            for (let oaIndex in optionType.oa) {\r\n              let key = optionType.name + '-' + optionType.oa[oaIndex].sdeptName\r\n              if (map[key] == undefined) {\r\n                map[key] = []\r\n                map[key].push(optionType.oa[oaIndex])\r\n              } else {\r\n                map[key].push(optionType.oa[oaIndex])\r\n              }\r\n            }\r\n          }\r\n          // console.log('-------->>>>',JSON.stringify(map))\r\n          let opinionData = JSON.parse(JSON.stringify(map));\r\n          for (let i = 0; i < this.dataSource.length; i++) {\r\n            for (let j = 0; j < this.dataSource[i].oa.length; j++) {\r\n              this.index.push(this.dataSource[i].oa[j].iid);\r\n              this.length.push(opinionData[this.dataSource[i].oa[j].opinionName + '-' + this.dataSource[i].oa[j].sdeptName].length);\r\n            }\r\n\r\n          }\r\n        })\r\n      },\r\n      close() {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      },\r\n      handleOk() {\r\n        const that = this;\r\n        that.close();\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  .title {\r\n    width: 100%;\r\n    height: 40px;\r\n    background: #2eabff;\r\n    color: #ffffff;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    /*letter-spacing: 20px;*/\r\n    margin-top: 10px;\r\n\r\n    span {\r\n      margin-left: 20px;\r\n    }\r\n  }\r\n\r\n</style>"]}]}