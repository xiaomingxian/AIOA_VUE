{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\workflow\\modules\\uploadProc.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\workflow\\modules\\uploadProc.vue","mtime":1579413597657},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1570779245522},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport {httpAction, getAction, postAction, uploadProc} from '@/api/manage'\nimport Vue from 'vue'\nimport {ACCESS_TOKEN} from '@/store/mutation-types'\nimport InputElement from \"ant-design-vue/es/auto-complete/InputElement\";\nimport ATextarea from \"ant-design-vue/es/input/TextArea\";\n\nexport default {\n  name: \"uploadProc\",\n  components: {ATextarea, InputElement},\n  data() {\n    return {\n      haveClick:false,\n      form: this.$form.createForm(this),\n      labelCol: {\n        xs: {span: 24},\n        sm: {span: 5},\n      },\n      wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 16},\n      },\n      headers: {\n        'X-Access-Token': Vue.ls.get(ACCESS_TOKEN),\n        'Content-Type': 'multipart/form-data'\n      },\n      fileList: [],\n      confirmLoading: false,\n      visible: false,\n      uploadUrl: '/wf/process/deploy',\n      scrHeight: window.innerHeight - 300 + 'px'\n    }\n  },\n  created() {\n\n\n  },\n  methods: {\n    show() {\n      this.fileList = []\n      this.visible = true\n    },\n    handleChange(info) {\n      this.fileList = info.fileList\n\n\n      if (info.file.status == 'done') {\n\n        this.$message.success(`${info.file.name} 文件上传成功`)\n\n        this.reload()\n      } else if (info.file.status == 'error') {\n        this.$message.error(`${info.file.name} 文件上传失败`)\n        this.reload()\n      }\n      // this.fileList=[]\n\n    },\n    beforeUpload: function (file, fileList) {\n      this.fileList = [...this.fileList, file];\n      return false;\n    },\n    upload() {\n\n      if (this.haveClick) {\n        this.$message.error('请勿重复点击')\n        return\n      }\n      this.haveClick=true\n      const {fileList} = this;\n      const data = new FormData();\n\n      if(this.fileList.length<=0){\n        this.$message.error('请选择要上传的文件')\n        return\n      }\n      for(let i in fileList){\n        data.append('file', fileList[i].originFileObj);\n      }\n\n\n      let url=this.uploadUrl\n      let method='post'\n\n      this.axios({ headers:{\n          'Content-Type': 'multipart/form-data'\n        },url, method, data,processData: false}).then(res => {\n          if (res.success) {\n            this.$message.success(res.message)\n            this.haveClick=false\n            this.$emit('reload')\n            this.handleCancel()\n          } else {\n            this.fileList = []\n            this.$message.error(res.message)\n          }\n      })\n\n\n\n    },\n\n    handleCancel() {\n      this.$emit('close');\n      this.visible = false;\n    }\n\n\n  }\n}\n",{"version":3,"sources":["uploadProc.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA","file":"uploadProc.vue","sourceRoot":"src/views/workflow/modules","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"500\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"upload\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"取消\"\r\n    okText=\"上传\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n        >\r\n\r\n            <a-upload name=\"file\" :multiple=\"true\" :action=\"uploadUrl\" :fileList=\"fileList\"\r\n                      :beforeUpload=\"beforeUpload\" @change=\"handleChange\">\r\n              <a-button type=\"primary\" icon=\"plus\">\r\n                <a-icon typeof=\"upload\"/>\r\n                选择文件\r\n              </a-button>\r\n            </a-upload>\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n\r\n  import {httpAction, getAction, postAction, uploadProc} from '@/api/manage'\r\n  import Vue from 'vue'\r\n  import {ACCESS_TOKEN} from '@/store/mutation-types'\r\n  import InputElement from \"ant-design-vue/es/auto-complete/InputElement\";\r\n  import ATextarea from \"ant-design-vue/es/input/TextArea\";\r\n\r\n  export default {\r\n    name: \"uploadProc\",\r\n    components: {ATextarea, InputElement},\r\n    data() {\r\n      return {\r\n        haveClick:false,\r\n        form: this.$form.createForm(this),\r\n        labelCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 5},\r\n        },\r\n        wrapperCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 16},\r\n        },\r\n        headers: {\r\n          'X-Access-Token': Vue.ls.get(ACCESS_TOKEN),\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        fileList: [],\r\n        confirmLoading: false,\r\n        visible: false,\r\n        uploadUrl: '/wf/process/deploy',\r\n        scrHeight: window.innerHeight - 300 + 'px'\r\n      }\r\n    },\r\n    created() {\r\n\r\n\r\n    },\r\n    methods: {\r\n      show() {\r\n        this.fileList = []\r\n        this.visible = true\r\n      },\r\n      handleChange(info) {\r\n        this.fileList = info.fileList\r\n\r\n\r\n        if (info.file.status == 'done') {\r\n\r\n          this.$message.success(`${info.file.name} 文件上传成功`)\r\n\r\n          this.reload()\r\n        } else if (info.file.status == 'error') {\r\n          this.$message.error(`${info.file.name} 文件上传失败`)\r\n          this.reload()\r\n        }\r\n        // this.fileList=[]\r\n\r\n      },\r\n      beforeUpload: function (file, fileList) {\r\n        this.fileList = [...this.fileList, file];\r\n        return false;\r\n      },\r\n      upload() {\r\n\r\n        if (this.haveClick) {\r\n          this.$message.error('请勿重复点击')\r\n          return\r\n        }\r\n        this.haveClick=true\r\n        const {fileList} = this;\r\n        const data = new FormData();\r\n\r\n        if(this.fileList.length<=0){\r\n          this.$message.error('请选择要上传的文件')\r\n          return\r\n        }\r\n        for(let i in fileList){\r\n          data.append('file', fileList[i].originFileObj);\r\n        }\r\n\r\n\r\n        let url=this.uploadUrl\r\n        let method='post'\r\n\r\n        this.axios({ headers:{\r\n            'Content-Type': 'multipart/form-data'\r\n          },url, method, data,processData: false}).then(res => {\r\n            if (res.success) {\r\n              this.$message.success(res.message)\r\n              this.haveClick=false\r\n              this.$emit('reload')\r\n              this.handleCancel()\r\n            } else {\r\n              this.fileList = []\r\n              this.$message.error(res.message)\r\n            }\r\n        })\r\n\r\n\r\n\r\n      },\r\n\r\n      handleCancel() {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"]}]}