{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js!C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\system\\modules\\UserModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\system\\modules\\UserModal.vue","mtime":1579052728708},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1570779245522},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pick from 'lodash.pick';\nimport moment from 'moment';\nimport Vue from 'vue'; // 引入搜索部门弹出框的组件\n\nimport departWindow from \"./SelectDepartWindow\";\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\";\nimport { getAction } from '@/api/manage';\nimport { addUser, editUser, queryUserRole, queryall } from '@/api/api';\nimport { disabledAuthFilter } from \"@/utils/authFilter\";\nimport { duplicateCheck } from '@/api/api';\nexport default {\n  name: \"RoleModal\",\n  components: {\n    departWindow: departWindow\n  },\n  data: function data() {\n    return {\n      departDisabled: false,\n      //是否是我的部门调用该页面\n      roleDisabled: false,\n      //是否是角色维护调用该页面\n      modalWidth: 800,\n      drawerWidth: 700,\n      modaltoggleFlag: true,\n      confirmDirty: false,\n      selectedDepartKeys: [],\n      //保存用户选择部门id\n      checkedDepartKeys: [],\n      checkedDepartNames: [],\n      // 保存部门的名称 =>title\n      checkedDepartNameString: \"\",\n      // 保存部门的名称 =>title\n      userId: \"\",\n      //保存用户id\n      disableSubmit: false,\n      userDepartModel: {\n        userId: '',\n        departIdList: []\n      },\n      // 保存SysUserDepart的用户部门中间表数据需要的对象\n      dateFormat: \"YYYY-MM-DD\",\n      validatorRules: {\n        username: {\n          rules: [{\n            required: true,\n            message: '请输入用户账号!'\n          }, {\n            validator: this.validateUsername\n          }]\n        },\n        showOrder: {\n          rules: [{\n            validator: this.validateshowOrder\n          }]\n        },\n        password: {\n          initialValue: '123456',\n          rules: [{\n            required: true,\n            //pattern:/^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/,\n            pattern: /^(?=.*[a-zA-Z~!@#$%^&*()_+`\\-={}:\";'<>?,./\\d]).{6,}$/,\n            //message: '密码由8位数字、大小写字母和特殊符号组成!'\n            message: '密码由至少6位字符组成!'\n          }, {\n            validator: this.validateToNextPassword\n          }]\n        },\n        confirmpassword: {\n          initialValue: '123456',\n          rules: [{\n            required: true,\n            message: '请重新输入登陆密码!'\n          }, {\n            validator: this.compareToFirstPassword\n          }]\n        },\n        realname: {\n          rules: [{\n            required: true,\n            message: '请输入用户名称!'\n          }]\n        },\n        phone: {\n          rules: [{\n            validator: this.validatePhone\n          }]\n        },\n        email: {\n          rules: [{\n            validator: this.validateEmail\n          }]\n        },\n        roles: {},\n        avatar: {\n          rules: [{\n            validator: this.validateAvatar\n          }]\n        } //  sex:{initialValue:((!this.model.sex)?\"\": (this.model.sex+\"\"))}\n\n      },\n      title: \"操作\",\n      visible: false,\n      model: {},\n      roleList: [],\n      selectedRole: [],\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      uploadLoading: false,\n      confirmLoading: false,\n      headers: {},\n      form: this.$form.createForm(this),\n      picUrl: \"\",\n      url: {\n        fileUpload: window._CONFIG['domianURL'] + \"/sys/common/upload\",\n        imgerver: window._CONFIG['domianURL'] + \"/sys/common/view\",\n        userWithDepart: \"/sys/user/userDepartList\",\n        // 引入为指定用户查看部门信息需要的url\n        userId: \"/sys/user/generateUserId\",\n        // 引入生成添加用户情况下的url\n        syncUserByUserName: \"/process/extActProcess/doSyncUserByUserName\" //同步用户到工作流\n\n      }\n    };\n  },\n  created: function created() {\n    var token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\n      \"X-Access-Token\": token\n    };\n  },\n  computed: {\n    uploadAction: function uploadAction() {\n      return this.url.fileUpload;\n    }\n  },\n  methods: {\n    isDisabledAuth: function isDisabledAuth(code) {\n      return disabledAuthFilter(code);\n    },\n    //窗口最大化切换\n    toggleScreen: function toggleScreen() {\n      if (this.modaltoggleFlag) {\n        this.modalWidth = window.innerWidth;\n      } else {\n        this.modalWidth = 800;\n      }\n\n      this.modaltoggleFlag = !this.modaltoggleFlag;\n    },\n    initialRoleList: function initialRoleList() {\n      var _this = this;\n\n      queryall().then(function (res) {\n        if (res.success) {\n          _this.roleList = res.result;\n        } else {\n          console.log(res.message);\n        }\n      });\n    },\n    loadUserRoles: function loadUserRoles(userid) {\n      var _this2 = this;\n\n      queryUserRole({\n        userid: userid\n      }).then(function (res) {\n        if (res.success) {\n          _this2.selectedRole = res.result;\n        } else {\n          console.log(res.message);\n        }\n      });\n    },\n    refresh: function refresh() {\n      this.selectedDepartKeys = [];\n      this.checkedDepartKeys = [];\n      this.checkedDepartNames = [];\n      this.checkedDepartNameString = \"\";\n      this.userId = \"\";\n    },\n    add: function add() {\n      this.picUrl = \"\";\n      this.refresh();\n      this.edit({\n        activitiSync: '1'\n      });\n    },\n    edit: function edit(record) {\n      var _this3 = this;\n\n      this.resetScreenSize(); // 调用此方法,根据屏幕宽度自适应调整抽屉的宽度\n\n      var that = this;\n      that.initialRoleList();\n      that.checkedDepartNameString = \"\";\n      that.form.resetFields();\n\n      if (record.hasOwnProperty(\"id\")) {\n        that.loadUserRoles(record.id);\n        this.picUrl = \"Has no pic url yet\";\n      }\n\n      that.userId = record.id;\n      that.visible = true;\n      that.model = Object.assign({}, record);\n      that.$nextTick(function () {\n        that.form.setFieldsValue(pick(_this3.model, 'username', 'sex', 'realname', 'email', 'phone', 'avatar', 'activitiSync'));\n      }); // 调用查询用户对应的部门信息的方法\n\n      that.checkedDepartKeys = [];\n      that.loadCheckedDeparts();\n    },\n    //\n    loadCheckedDeparts: function loadCheckedDeparts() {\n      var _this4 = this;\n\n      var that = this;\n\n      if (!that.userId) {\n        return;\n      }\n\n      getAction(that.url.userWithDepart, {\n        userId: that.userId\n      }).then(function (res) {\n        that.checkedDepartNames = [];\n\n        if (res.success) {\n          for (var i = 0; i < res.result.length; i++) {\n            that.checkedDepartNames.push(res.result[i].title);\n            _this4.checkedDepartNameString = _this4.checkedDepartNames.join(\",\");\n            that.checkedDepartKeys.push(res.result[i].key);\n          }\n\n          that.userDepartModel.departIdList = that.checkedDepartKeys;\n        } else {\n          console.log(res.message);\n        }\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false;\n      this.selectedRole = [];\n      this.userDepartModel = {\n        userId: '',\n        departIdList: []\n      };\n      this.checkedDepartNames = [];\n      this.checkedDepartNameString = '';\n      this.checkedDepartKeys = [];\n      this.selectedDepartKeys = [];\n    },\n    moment: moment,\n    handleSubmit: function handleSubmit() {\n      var _this5 = this;\n\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true; // let avatar = that.model.avatar;\n\n          if (!values.birthday) {\n            values.birthday = '';\n          } else {\n            values.birthday = values.birthday.format(_this5.dateFormat);\n          }\n\n          var formData = Object.assign(_this5.model, values); // formData.avatar = avatar;\n\n          formData.selectedroles = _this5.selectedRole.length > 0 ? _this5.selectedRole.join(\",\") : '';\n          formData.selecteddeparts = _this5.userDepartModel.departIdList.length > 0 ? _this5.userDepartModel.departIdList.join(\",\") : ''; // that.addDepartsToUser(that,formData); // 调用根据当前用户添加部门信息的方法\n\n          var obj;\n\n          if (!_this5.model.id) {\n            formData.id = _this5.userId;\n            obj = addUser(formData);\n          } else {\n            obj = editUser(formData);\n          }\n\n          obj.then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.checkedDepartNames = [];\n            that.userDepartModel.departIdList = {\n              userId: '',\n              departIdList: []\n            };\n            that.close();\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    validateToNextPassword: function validateToNextPassword(rule, value, callback) {\n      var form = this.form;\n      var confirmpassword = form.getFieldValue('confirmpassword');\n\n      if (value && confirmpassword && value !== confirmpassword) {\n        callback('两次输入的密码不一样！');\n      }\n\n      if (value && this.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    },\n    compareToFirstPassword: function compareToFirstPassword(rule, value, callback) {\n      var form = this.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入的密码不一样！');\n      } else {\n        callback();\n      }\n    },\n    validatePhone: function validatePhone(rule, value, callback) {\n      if (!value) {\n        callback();\n      } else {\n        if (new RegExp(/^1[3|4|5|7|8][0-9]\\d{8}$/).test(value)) {\n          var params = {\n            tableName: 'sys_user',\n            fieldName: 'phone',\n            fieldVal: value,\n            dataId: this.userId\n          };\n          duplicateCheck(params).then(function (res) {\n            if (res.success) {\n              callback();\n            } else {\n              callback(\"手机号已存在!\");\n            }\n          });\n        } else {\n          callback(\"请输入正确格式的联系方式!\");\n        }\n      }\n    },\n    validateEmail: function validateEmail(rule, value, callback) {\n      if (!value) {\n        callback();\n      } else {\n        if (new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).test(value)) {\n          var params = {\n            tableName: 'sys_user',\n            fieldName: 'email',\n            fieldVal: value,\n            dataId: this.userId\n          };\n          duplicateCheck(params).then(function (res) {\n            console.log(res);\n\n            if (res.success) {\n              callback();\n            } else {\n              callback(\"邮箱已存在!\");\n            }\n          });\n        } else {\n          callback(\"请输入正确格式的邮箱!\");\n        }\n      }\n    },\n    validateUsername: function validateUsername(rule, value, callback) {\n      var params = {\n        tableName: 'sys_user',\n        fieldName: 'username',\n        fieldVal: value,\n        dataId: this.userId\n      };\n      duplicateCheck(params).then(function (res) {\n        if (res.success) {\n          callback();\n        } else {\n          callback(\"用户名已存在!\");\n        }\n      });\n    },\n    handleConfirmBlur: function handleConfirmBlur(e) {\n      var value = e.target.value;\n      this.confirmDirty = this.confirmDirty || !!value;\n    },\n    normFile: function normFile(e) {\n      console.log('Upload event:', e);\n\n      if (Array.isArray(e)) {\n        return e;\n      }\n\n      return e && e.fileList;\n    },\n    beforeUpload: function beforeUpload(file) {\n      var fileType = file.type;\n\n      if (fileType.indexOf('image') < 0) {\n        this.$message.warning('请上传图片');\n        return false;\n      } //TODO 验证文件大小\n\n    },\n    handleChange: function handleChange(info) {\n      this.picUrl = \"\";\n\n      if (info.file.status === 'uploading') {\n        this.uploadLoading = true;\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        var response = info.file.response;\n        this.uploadLoading = false;\n        console.log(response);\n\n        if (response.success) {\n          this.model.avatar = response.message;\n          this.picUrl = \"Has no pic url yet\";\n        } else {\n          this.$message.warning(response.message);\n        }\n      }\n    },\n    getAvatarView: function getAvatarView() {\n      return this.url.imgerver + \"/\" + this.model.avatar;\n    },\n    // 搜索用户对应的部门API\n    onSearch: function onSearch() {\n      this.$refs.departWindow.add(this.checkedDepartKeys, this.userId);\n    },\n    // 获取用户对应部门弹出框提交给返回的数据\n    modalFormOk: function modalFormOk(formData) {\n      this.checkedDepartNames = [];\n      this.selectedDepartKeys = [];\n      this.checkedDepartNameString = '';\n      this.userId = formData.userId;\n      this.userDepartModel.userId = formData.userId;\n\n      for (var i = 0; i < formData.departIdList.length; i++) {\n        this.selectedDepartKeys.push(formData.departIdList[i].key);\n        this.checkedDepartNames.push(formData.departIdList[i].title);\n        this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\n      }\n\n      this.userDepartModel.departIdList = this.selectedDepartKeys;\n      this.checkedDepartKeys = this.selectedDepartKeys; //更新当前的选择keys\n    },\n    // 根据屏幕变化,设置抽屉尺寸\n    resetScreenSize: function resetScreenSize() {\n      var screenWidth = document.body.clientWidth;\n\n      if (screenWidth < 500) {\n        this.drawerWidth = screenWidth;\n      } else {\n        this.drawerWidth = 700;\n      }\n    }\n  }\n};",{"version":3,"sources":["UserModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-drawer\r\n    :title=\"title\"\r\n    :maskClosable=\"true\"\r\n    :width=\"drawerWidth\"\r\n    placement=\"right\"\r\n    :closable=\"true\"\r\n    @close=\"handleCancel\"\r\n    :visible=\"visible\"\r\n    style=\"height: calc(100% - 55px);overflow: auto;padding-bottom: 53px;\">\r\n\r\n    <template slot=\"title\">\r\n      <div style=\"width: 100%;\">\r\n        <span>{{ title }}</span>\r\n        <span style=\"display:inline-block;width:calc(100% - 51px);padding-right:10px;text-align: right\">\r\n          <a-button @click=\"toggleScreen\" icon=\"appstore\" style=\"height:20px;width:20px;border:0px\"></a-button>\r\n        </span>\r\n      </div>\r\n\r\n    </template>\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <a-form-item label=\"用户账号\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input placeholder=\"请输入用户账号\" v-decorator=\"[ 'username', validatorRules.username]\" :readOnly=\"!!model.id\"/>\r\n        </a-form-item>\r\n\r\n        <template v-if=\"!model.id\">\r\n          <a-form-item label=\"登陆密码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" >\r\n            <a-input type=\"password\" placeholder=\"请输入登陆密码\" v-decorator=\"[ 'password', validatorRules.password]\" />\r\n          </a-form-item>\r\n\r\n          <a-form-item label=\"确认密码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" >\r\n            <a-input type=\"password\" @blur=\"handleConfirmBlur\" placeholder=\"请重新输入登陆密码\" v-decorator=\"[ 'confirmpassword', validatorRules.confirmpassword]\"/>\r\n          </a-form-item>\r\n        </template>\r\n\r\n        <a-form-item label=\"用户名字\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" >\r\n          <a-input placeholder=\"请输入用户名称\" v-decorator=\"[ 'realname', validatorRules.realname]\" />\r\n        </a-form-item>\r\n\r\n        <a-form-item label=\"角色分配\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" v-show=\"!roleDisabled\" >\r\n          <a-select\r\n            mode=\"multiple\"\r\n            style=\"width: 100%\"\r\n            placeholder=\"请选择用户角色\"\r\n            optionFilterProp = \"children\"\r\n            v-model=\"selectedRole\">\r\n            <a-select-option v-for=\"(role,roleindex) in roleList\" :key=\"roleindex.toString()\" :value=\"role.id\">\r\n              {{ role.roleName }}\r\n            </a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n\r\n        <!--部门分配-->\r\n        <a-form-item label=\"部门分配\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" v-show=\"!departDisabled\">\r\n          <a-input-search\r\n            placeholder=\"点击右侧按钮选择部门\"\r\n            v-model=\"checkedDepartNameString\"\r\n            disabled\r\n            @search=\"onSearch\">\r\n            <a-button slot=\"enterButton\" icon=\"search\">选择</a-button>\r\n          </a-input-search>\r\n        </a-form-item>\r\n       <!-- <a-form-item label=\"头像\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-upload\r\n            listType=\"picture-card\"\r\n            class=\"avatar-uploader\"\r\n            :showUploadList=\"false\"\r\n            :action=\"uploadAction\"\r\n            :data=\"{'isup':1}\"\r\n            :headers=\"headers\"\r\n            :beforeUpload=\"beforeUpload\"\r\n            @change=\"handleChange\"\r\n          >\r\n            <img v-if=\"picUrl\" :src=\"getAvatarView()\" alt=\"头像\" style=\"height:104px;max-width:300px\"/>\r\n            <div v-else>\r\n              <a-icon :type=\"uploadLoading ? 'loading' : 'plus'\" />\r\n              <div class=\"ant-upload-text\">上传</div>\r\n            </div>\r\n          </a-upload>\r\n        </a-form-item>-->\r\n\r\n        <a-form-item label=\"顺序号\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input type=\"number\" placeholder=\"请输入顺序\" v-decorator=\"[ 'showOrder', validatorRules.showOrder]\" />\r\n        </a-form-item>\r\n\r\n       <!-- <a-form-item label=\"生日\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-date-picker\r\n            style=\"width: 100%\"\r\n            placeholder=\"请选择生日\"\r\n            v-decorator=\"['birthday', {initialValue:!model.birthday?null:moment(model.birthday,dateFormat)}]\"/>\r\n        </a-form-item>\r\n\r\n        <a-form-item label=\"性别\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-select v-decorator=\"[ 'sex', {}]\" placeholder=\"请选择性别\">\r\n            <a-select-option :value=\"1\">男</a-select-option>\r\n            <a-select-option :value=\"2\">女</a-select-option>\r\n          </a-select>\r\n        </a-form-item>-->\r\n\r\n        <a-form-item label=\"IP地址\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input placeholder=\"请输入IP地址\" v-decorator=\"[ 'avatar', validatorRules.avatar]\" />\r\n        </a-form-item>\r\n\r\n        <a-form-item label=\"邮箱\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input placeholder=\"请输入邮箱\" v-decorator=\"[ 'email', validatorRules.email]\" />\r\n        </a-form-item>\r\n\r\n        <a-form-item label=\"联系方式\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input placeholder=\"请输入联系方式\" :disabled=\"isDisabledAuth('user:form:phone')\" v-decorator=\"[ 'phone', validatorRules.phone]\" />\r\n        </a-form-item>\r\n        <!--\r\n                <a-form-item label=\"工作流引擎\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n                  <j-dict-select-tag  v-decorator=\"['activitiSync', {}]\" placeholder=\"请选择是否同步工作流引擎\" :type=\"'radio'\" :triggerChange=\"true\" dictCode=\"activiti_sync\"/>\r\n                </a-form-item>-->\r\n\r\n      </a-form>\r\n    </a-spin>\r\n    <depart-window ref=\"departWindow\" @ok=\"modalFormOk\"></depart-window>\r\n\r\n    <div class=\"drawer-bootom-button\" v-show=\"!disableSubmit\">\r\n      <a-popconfirm title=\"确定放弃编辑？\" @confirm=\"handleCancel\" okText=\"确定\" cancelText=\"取消\">\r\n        <a-button style=\"margin-right: .8rem\">取消</a-button>\r\n      </a-popconfirm>\r\n      <a-button @click=\"handleSubmit\" type=\"primary\" :loading=\"confirmLoading\">提交</a-button>\r\n    </div>\r\n  </a-drawer>\r\n</template>\r\n\r\n<script>\r\n  import pick from 'lodash.pick'\r\n  import moment from 'moment'\r\n  import Vue from 'vue'\r\n  // 引入搜索部门弹出框的组件\r\n  import departWindow from './SelectDepartWindow'\r\n  import { ACCESS_TOKEN } from \"@/store/mutation-types\"\r\n  import { getAction } from '@/api/manage'\r\n  import {addUser,editUser,queryUserRole,queryall } from '@/api/api'\r\n  import { disabledAuthFilter } from \"@/utils/authFilter\"\r\n  import {duplicateCheck } from '@/api/api'\r\n\r\n  export default {\r\n    name: \"RoleModal\",\r\n    components: {\r\n      departWindow,\r\n    },\r\n    data () {\r\n      return {\r\n        departDisabled: false, //是否是我的部门调用该页面\r\n        roleDisabled: false, //是否是角色维护调用该页面\r\n        modalWidth:800,\r\n        drawerWidth:700,\r\n        modaltoggleFlag:true,\r\n        confirmDirty: false,\r\n        selectedDepartKeys:[], //保存用户选择部门id\r\n        checkedDepartKeys:[],\r\n        checkedDepartNames:[], // 保存部门的名称 =>title\r\n        checkedDepartNameString:\"\", // 保存部门的名称 =>title\r\n        userId:\"\", //保存用户id\r\n        disableSubmit:false,\r\n        userDepartModel:{userId:'',departIdList:[]}, // 保存SysUserDepart的用户部门中间表数据需要的对象\r\n        dateFormat:\"YYYY-MM-DD\",\r\n        validatorRules:{\r\n          username:{\r\n            rules: [{\r\n              required: true, message: '请输入用户账号!'\r\n            },{\r\n              validator: this.validateUsername,\r\n            }]\r\n          },\r\n          showOrder:{\r\n            rules: [{\r\n              validator: this.validateshowOrder}\r\n            ]},\r\n          password:{\r\n            initialValue:'123456',\r\n            rules: [{\r\n              required: true,\r\n              //pattern:/^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/,\r\n              pattern:/^(?=.*[a-zA-Z~!@#$%^&*()_+`\\-={}:\";'<>?,./\\d]).{6,}$/,\r\n              //message: '密码由8位数字、大小写字母和特殊符号组成!'\r\n              message: '密码由至少6位字符组成!'\r\n            }, {\r\n              validator: this.validateToNextPassword,\r\n            }],\r\n          },\r\n          confirmpassword:{\r\n            initialValue:'123456',\r\n            rules: [{\r\n              required: true, message: '请重新输入登陆密码!',\r\n            }, {\r\n              validator: this.compareToFirstPassword,\r\n            }],\r\n          },\r\n          realname:{rules: [{ required: true, message: '请输入用户名称!' }]},\r\n\r\n          phone:{rules: [{validator: this.validatePhone}]},\r\n          email:{\r\n            rules: [{\r\n              validator: this.validateEmail\r\n            }],\r\n          },\r\n          roles:{},\r\n          avatar:{\r\n            rules: [{\r\n              validator: this.validateAvatar\r\n            }],\r\n          },\r\n          //  sex:{initialValue:((!this.model.sex)?\"\": (this.model.sex+\"\"))}\r\n        },\r\n        title:\"操作\",\r\n        visible: false,\r\n        model: {},\r\n        roleList:[],\r\n        selectedRole:[],\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n        uploadLoading:false,\r\n        confirmLoading: false,\r\n        headers:{},\r\n        form:this.$form.createForm(this),\r\n        picUrl: \"\",\r\n        url: {\r\n          fileUpload: window._CONFIG['domianURL']+\"/sys/common/upload\",\r\n          imgerver: window._CONFIG['domianURL']+\"/sys/common/view\",\r\n          userWithDepart: \"/sys/user/userDepartList\", // 引入为指定用户查看部门信息需要的url\r\n          userId:\"/sys/user/generateUserId\", // 引入生成添加用户情况下的url\r\n          syncUserByUserName:\"/process/extActProcess/doSyncUserByUserName\",//同步用户到工作流\r\n        },\r\n      }\r\n    },\r\n    created () {\r\n      const token = Vue.ls.get(ACCESS_TOKEN);\r\n      this.headers = {\"X-Access-Token\":token}\r\n\r\n    },\r\n    computed:{\r\n      uploadAction:function () {\r\n        return this.url.fileUpload;\r\n      }\r\n    },\r\n    methods: {\r\n      isDisabledAuth(code){\r\n        return disabledAuthFilter(code);\r\n      },\r\n      //窗口最大化切换\r\n      toggleScreen(){\r\n        if(this.modaltoggleFlag){\r\n          this.modalWidth = window.innerWidth;\r\n        }else{\r\n          this.modalWidth = 800;\r\n        }\r\n        this.modaltoggleFlag = !this.modaltoggleFlag;\r\n      },\r\n      initialRoleList: function () {\r\n        queryall().then((res) => {\r\n          if (res.success) {\r\n            this.roleList = res.result;\r\n          } else {\r\n            console.log(res.message);\r\n          }\r\n        });\r\n      },\r\n      loadUserRoles(userid){\r\n        queryUserRole({userid:userid}).then((res)=>{\r\n          if(res.success){\r\n            this.selectedRole = res.result;\r\n          }else{\r\n            console.log(res.message);\r\n          }\r\n        });\r\n      },\r\n      refresh () {\r\n          this.selectedDepartKeys=[];\r\n          this.checkedDepartKeys=[];\r\n          this.checkedDepartNames=[];\r\n          this.checkedDepartNameString = \"\";\r\n          this.userId=\"\"\r\n      },\r\n      add () {\r\n        this.picUrl = \"\";\r\n        this.refresh();\r\n        this.edit({activitiSync:'1'});\r\n      },\r\n      edit (record) {\r\n        this.resetScreenSize(); // 调用此方法,根据屏幕宽度自适应调整抽屉的宽度\r\n        let that = this;\r\n        that.initialRoleList();\r\n        that.checkedDepartNameString = \"\";\r\n        that.form.resetFields();\r\n        if(record.hasOwnProperty(\"id\")){\r\n          that.loadUserRoles(record.id);\r\n          this.picUrl = \"Has no pic url yet\";\r\n        }\r\n        that.userId = record.id;\r\n        that.visible = true;\r\n        that.model = Object.assign({}, record);\r\n        that.$nextTick(() => {\r\n          that.form.setFieldsValue(pick(this.model,'username','sex','realname','email','phone','avatar','activitiSync'))\r\n        });\r\n        // 调用查询用户对应的部门信息的方法\r\n        that.checkedDepartKeys = [];\r\n        that.loadCheckedDeparts();\r\n      },\r\n      //\r\n      loadCheckedDeparts(){\r\n        let that = this;\r\n        if(!that.userId){return}\r\n        getAction(that.url.userWithDepart,{userId:that.userId}).then((res)=>{\r\n          that.checkedDepartNames = [];\r\n          if(res.success){\r\n            for (let i = 0; i < res.result.length; i++) {\r\n              that.checkedDepartNames.push(res.result[i].title);\r\n              this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\r\n              that.checkedDepartKeys.push(res.result[i].key);\r\n            }\r\n            that.userDepartModel.departIdList = that.checkedDepartKeys\r\n          }else{\r\n            console.log(res.message);\r\n          }\r\n        })\r\n      },\r\n      close () {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n        this.disableSubmit = false;\r\n        this.selectedRole = [];\r\n        this.userDepartModel = {userId:'',departIdList:[]};\r\n        this.checkedDepartNames = [];\r\n        this.checkedDepartNameString='';\r\n        this.checkedDepartKeys = [];\r\n        this.selectedDepartKeys = [];\r\n      },\r\n      moment,\r\n      handleSubmit () {\r\n\r\n        const that = this;\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true;\r\n            // let avatar = that.model.avatar;\r\n            if(!values.birthday){\r\n              values.birthday = '';\r\n            }else{\r\n              values.birthday = values.birthday.format(this.dateFormat);\r\n            }\r\n            let formData = Object.assign(this.model, values);\r\n            // formData.avatar = avatar;\r\n            formData.selectedroles = this.selectedRole.length>0?this.selectedRole.join(\",\"):'';\r\n            formData.selecteddeparts = this.userDepartModel.departIdList.length>0?this.userDepartModel.departIdList.join(\",\"):'';\r\n\r\n            // that.addDepartsToUser(that,formData); // 调用根据当前用户添加部门信息的方法\r\n            let obj;\r\n            if(!this.model.id){\r\n              formData.id = this.userId;\r\n              obj=addUser(formData);\r\n            }else{\r\n              obj=editUser(formData);\r\n            }\r\n            obj.then((res)=>{\r\n              if(res.success){\r\n                that.$message.success(res.message);\r\n                that.$emit('ok');\r\n              }else{\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n              that.checkedDepartNames = [];\r\n              that.userDepartModel.departIdList = {userId:'',departIdList:[]};\r\n\r\n              that.close();\r\n            })\r\n\r\n          }\r\n        })\r\n      },\r\n      handleCancel () {\r\n        this.close()\r\n      },\r\n      validateToNextPassword  (rule, value, callback) {\r\n        const form = this.form;\r\n        const confirmpassword=form.getFieldValue('confirmpassword');\r\n\r\n        if (value && confirmpassword && value !== confirmpassword) {\r\n          callback('两次输入的密码不一样！');\r\n        }\r\n        if (value && this.confirmDirty) {\r\n          form.validateFields(['confirm'], { force: true })\r\n        }\r\n        callback();\r\n      },\r\n      compareToFirstPassword  (rule, value, callback) {\r\n        const form = this.form;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n          callback('两次输入的密码不一样！');\r\n        } else {\r\n          callback()\r\n        }\r\n      },\r\n      validatePhone(rule, value, callback){\r\n        if(!value){\r\n          callback()\r\n        }else{\r\n          if(new RegExp(/^1[3|4|5|7|8][0-9]\\d{8}$/).test(value)){\r\n            var params = {\r\n              tableName: 'sys_user',\r\n              fieldName: 'phone',\r\n              fieldVal: value,\r\n              dataId: this.userId\r\n            };\r\n            duplicateCheck(params).then((res) => {\r\n              if (res.success) {\r\n                callback()\r\n              } else {\r\n                callback(\"手机号已存在!\")\r\n              }\r\n            })\r\n          }else{\r\n            callback(\"请输入正确格式的联系方式!\");\r\n          }\r\n        }\r\n      },\r\n      validateEmail(rule, value, callback){\r\n        if(!value){\r\n          callback()\r\n        }else{\r\n          if(new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).test(value)){\r\n            var params = {\r\n              tableName: 'sys_user',\r\n              fieldName: 'email',\r\n              fieldVal: value,\r\n              dataId: this.userId\r\n            };\r\n            duplicateCheck(params).then((res) => {\r\n              console.log(res)\r\n              if (res.success) {\r\n                callback()\r\n              } else {\r\n                callback(\"邮箱已存在!\")\r\n              }\r\n            })\r\n          }else{\r\n            callback(\"请输入正确格式的邮箱!\")\r\n          }\r\n        }\r\n      },\r\n      validateUsername(rule, value, callback){\r\n        var params = {\r\n          tableName: 'sys_user',\r\n          fieldName: 'username',\r\n          fieldVal: value,\r\n          dataId: this.userId\r\n        };\r\n        duplicateCheck(params).then((res) => {\r\n          if (res.success) {\r\n          callback()\r\n        } else {\r\n          callback(\"用户名已存在!\")\r\n        }\r\n      })\r\n      },\r\n      handleConfirmBlur  (e) {\r\n        const value = e.target.value;\r\n        this.confirmDirty = this.confirmDirty || !!value\r\n      },\r\n\r\n      normFile  (e) {\r\n        console.log('Upload event:', e);\r\n        if (Array.isArray(e)) {\r\n          return e\r\n        }\r\n        return e && e.fileList\r\n      },\r\n      beforeUpload: function(file){\r\n        var fileType = file.type;\r\n        if(fileType.indexOf('image')<0){\r\n          this.$message.warning('请上传图片');\r\n          return false;\r\n        }\r\n        //TODO 验证文件大小\r\n      },\r\n      handleChange (info) {\r\n        this.picUrl = \"\";\r\n        if (info.file.status === 'uploading') {\r\n          this.uploadLoading = true;\r\n          return\r\n        }\r\n        if (info.file.status === 'done') {\r\n          var response = info.file.response;\r\n          this.uploadLoading = false;\r\n          console.log(response);\r\n          if(response.success){\r\n            this.model.avatar = response.message;\r\n            this.picUrl = \"Has no pic url yet\";\r\n          }else{\r\n            this.$message.warning(response.message);\r\n          }\r\n        }\r\n      },\r\n      getAvatarView(){\r\n        return this.url.imgerver +\"/\"+ this.model.avatar;\r\n      },\r\n      // 搜索用户对应的部门API\r\n      onSearch(){\r\n        this.$refs.departWindow.add(this.checkedDepartKeys,this.userId);\r\n      },\r\n\r\n      // 获取用户对应部门弹出框提交给返回的数据\r\n      modalFormOk (formData) {\r\n        this.checkedDepartNames = [];\r\n        this.selectedDepartKeys = [];\r\n        this.checkedDepartNameString = '';\r\n        this.userId = formData.userId;\r\n        this.userDepartModel.userId = formData.userId;\r\n        for (let i = 0; i < formData.departIdList.length; i++) {\r\n          this.selectedDepartKeys.push(formData.departIdList[i].key);\r\n          this.checkedDepartNames.push(formData.departIdList[i].title);\r\n          this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\r\n        }\r\n        this.userDepartModel.departIdList = this.selectedDepartKeys;\r\n        this.checkedDepartKeys = this.selectedDepartKeys  //更新当前的选择keys\r\n       },\r\n      // 根据屏幕变化,设置抽屉尺寸\r\n      resetScreenSize(){\r\n        let screenWidth = document.body.clientWidth;\r\n        if(screenWidth < 500){\r\n          this.drawerWidth = screenWidth;\r\n        }else{\r\n          this.drawerWidth = 700;\r\n        }\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .avatar-uploader > .ant-upload {\r\n    width:104px;\r\n    height:104px;\r\n  }\r\n  .ant-upload-select-picture-card i {\r\n    font-size: 49px;\r\n    color: #999;\r\n  }\r\n\r\n  .ant-upload-select-picture-card .ant-upload-text {\r\n    margin-top: 8px;\r\n    color: #666;\r\n  }\r\n\r\n  .ant-table-tbody .ant-table-row td{\r\n    padding-top:10px;\r\n    padding-bottom:10px;\r\n  }\r\n\r\n  .drawer-bootom-button {\r\n    position: absolute;\r\n    bottom: -8px;\r\n    width: 100%;\r\n    border-top: 1px solid #e8e8e8;\r\n    padding: 10px 16px;\r\n    text-align: right;\r\n    left: 0;\r\n    background: #fff;\r\n    border-radius: 0 0 2px 2px;\r\n  }\r\n</style>"],"sourceRoot":"src/views/system/modules"}]}