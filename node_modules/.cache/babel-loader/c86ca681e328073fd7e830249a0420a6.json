{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js!C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\oaBus\\modules\\BusModelPermitModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\oaBus\\modules\\BusModelPermitModal.vue","mtime":1578204447560},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1570779245522},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"C:\\\\xxm\\\\work\\\\jd\\\\fore\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpAction } from '@/api/manage';\nimport { getAction } from '@/api/manage';\nimport pick from 'lodash.pick'; // 引入搜索部门弹出框的组件\n\nimport departWindow from \"../../system/modules/DepartWindow\";\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\";\nimport { addUser, editUser, queryUserRole, queryall } from '@/api/api';\nimport { disabledAuthFilter } from \"@/utils/authFilter\";\nimport { duplicateCheck } from '@/api/api';\nimport JSelectUserByDep from '@/components/jeecgbiz/JSelectUserByDep';\nimport Vue from 'vue';\nexport default {\n  name: \"BusModelPermitModal\",\n  components: {\n    departWindow: departWindow,\n    JSelectUserByDep: JSelectUserByDep\n  },\n  data: function data() {\n    return {\n      isno: [{\n        typename: '所有人',\n        value: '0'\n      }, {\n        typename: '角色',\n        value: '1'\n      }, {\n        typename: '部门',\n        value: '2'\n      }, {\n        typename: '人员',\n        value: '3'\n      }],\n      ibusModelId: '',\n      //提交时所需参数\n      itypeName: '',\n      // 角色或人员或部门的名字\n      spermitType: '',\n      // 范围类型\n      selectvalue: 1,\n      //是否选中\n      title: \"操作\",\n      visible: false,\n      model: {\n        iid: '',\n        ibusModelId: '',\n        itypeId: '' // 角色或人员或部门的id\n\n      },\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      selectData: [],\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {\n        iId: {\n          rules: [{\n            required: true,\n            message: '请输入主键id!'\n          }]\n        }\n      },\n      selectedModel: null,\n      selectedFunction: null,\n      typeModel: null,\n      roleList: [],\n      selectedRole: '',\n      userRealName: '',\n      selectedUser: [],\n      userList: [],\n      //部门控件\n      departDisabled: false,\n      //是否是我的部门调用该页面\n      roleDisabled: false,\n      //是否是角色维护调用该页面\n      modalWidth: 800,\n      drawerWidth: 700,\n      modaltoggleFlag: true,\n      confirmDirty: false,\n      selectedDepartKeys: [],\n      //保存用户选择部门id\n      checkedDepartKeys: [],\n      checkedDepartNames: [],\n      // 保存部门的名称 =>title\n      checkedDepartNameString: \"\",\n      // 保存部门的名称 =>title\n      userId: \"\",\n      //保存用户id\n      disableSubmit: false,\n      userDepartModel: {\n        userId: '',\n        departIdList: []\n      },\n      // 保存SysUserDepart的用户部门中间表数据需要的对象\n      url: {\n        add: \"/oaBus/busModelPermit/add\",\n        edit: \"/oaBus/busModelPermit/edit\"\n      },\n      //用来判断弹框是用来新增或是编辑两种状态\n      isadd: false\n    };\n  },\n  created: function created() {\n    this.initialRoleList();\n    this.initialUserList();\n    var token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\n      \"X-Access-Token\": token\n    };\n  },\n  watch: _defineProperty({\n    typeModel: 'initialRoleList'\n  }, \"typeModel\", 'initialUserList'),\n  methods: {\n    senUserId: function senUserId(ids) {\n      this.model.itypeId = ids.toString();\n    },\n    // 获取范围类型\n    getTypeVal: function getTypeVal(e) {\n      this.spermitType = e;\n\n      if (e == '1') {\n        this.selectedRole = '';\n      } else if (e == '3') {\n        this.userRealName = '';\n      }\n    },\n    //修改角色或者人员 获取角色id\n    getRole: function getRole(e) {\n      this.model.itypeId = e;\n    },\n    add1: function add1(ibusModelId, sname, data) {\n      var _this = this;\n\n      this.isadd = true;\n      this.model.ibusModelId = ibusModelId;\n      console.log(data); //判断类型为非零时  不可选所有人\n\n      if (data.length != 0) {\n        data.forEach(function (item) {\n          if (item.spermitType != 0) {\n            _this.isno = [// {typename:'所有人',value:'0'},\n            {\n              typename: '角色',\n              value: '1'\n            }, {\n              typename: '部门',\n              value: '2'\n            }, {\n              typename: '人员',\n              value: '3'\n            }];\n          } else {\n            _this.isno = [{\n              typename: '所有人',\n              value: '0'\n            }, {\n              typename: '角色',\n              value: '1'\n            }, {\n              typename: '部门',\n              value: '2'\n            }, {\n              typename: '人员',\n              value: '3'\n            }];\n          }\n        });\n      } else {\n        this.isno = [{\n          typename: '所有人',\n          value: '0'\n        }, {\n          typename: '角色',\n          value: '1'\n        }, {\n          typename: '部门',\n          value: '2'\n        }, {\n          typename: '人员',\n          value: '3'\n        }];\n      }\n\n      this.visible = true;\n      this.title = sname;\n      this.form.resetFields(); //this.model = Object.assign({}, record2);\n    },\n    //获取部门子组件树形弹窗返回的对象\n    sendPartsList: function sendPartsList(partsLists) {\n      console.log(partsLists);\n\n      if (Array.isArray(partsLists)) {\n        // this.checkedDepartNameString\n        var itypeIdLists = '';\n        var itypeNanesLists = '';\n        partsLists.map(function (part) {\n          itypeNanesLists += part.title + '  ';\n          itypeIdLists += part.value + ',';\n        });\n        this.model.itypeId = itypeIdLists;\n        this.checkedDepartNameString = itypeNanesLists;\n      } else {\n        this.model.itypeId = partsLists.value;\n        this.checkedDepartNameString = partsLists.title;\n      }\n    },\n    //初始换数据渲染\n    update: function update(record, isedit) {\n      var _this2 = this;\n\n      if (isedit) {\n        this.isno = [{\n          typename: '所有人',\n          value: '0'\n        }, {\n          typename: '角色',\n          value: '1'\n        }, {\n          typename: '部门',\n          value: '2'\n        }, {\n          typename: '人员',\n          value: '3'\n        }];\n      }\n\n      this.isadd = false;\n      this.spermitType = record.spermitType;\n      this.title = record.sname;\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.selectvalue = Number(this.model.sdisplay); //范围类型\n\n      this.typeModel = this.model.spermitType;\n\n      if (this.typeModel == '1') {\n        setTimeout(function () {\n          _this2.selectedRole = _this2.model.itypeName;\n          console.log(_this2.selectedRole);\n        }, 1000);\n      } else if (this.typeModel == '2') {\n        this.checkedDepartNameString = this.model.itypeName;\n      } else if (this.typeModel == '3') {\n        this.userRealName = this.model.itypeName;\n      }\n    },\n    initialRoleList: function initialRoleList() {\n      var _this3 = this;\n\n      var url = \"/oaBus/busFunctionPermit/findRoleByCode\";\n      getAction(url).then(function (res) {\n        _this3.roleList = res.result;\n      });\n    },\n    initialUserList: function initialUserList() {\n      var _this4 = this;\n\n      var url = \"/oaBus/busFunctionPermit/userList\";\n      getAction(url).then(function (res) {\n        _this4.userList = res.result;\n      });\n    },\n    loadCheckDeparts: function loadCheckDeparts() {\n      var _this5 = this;\n\n      var that = this;\n\n      if (!that.userId) {\n        return;\n      }\n\n      getAction(that.url.userWithDepart, {\n        userId: that.userId\n      }).then(function (res) {\n        that.checkedDepartNames = [];\n\n        if (res.success) {\n          for (var i = 0; i < res.result.length; i++) {\n            that.checkedDepartNames.push(res.result[i].title);\n            _this5.checkedDepartNameString = _this5.checkedDepartNames.join(\",\");\n            that.checkedDepartKeys.push(res.result[i].key);\n          }\n\n          that.userDepartModel.departIdList = that.checkedDepartKeys;\n        } else {\n          console.log(res.message);\n        }\n      });\n    },\n    // 搜索用户对应的部门API\n    onSearch: function onSearch() {\n      // this.$refs.departWindow.add(this.checkedDepartKeys, this.userId);\n      this.$refs.departWindow.add(this.model.itypeId, this.isadd);\n    },\n    // 获取用户对应部门弹出框提交给返回的数据\n    modalFormOk: function modalFormOk(formData) {\n      this.checkedDepartNames = [];\n      this.selectedDepartKeys = [];\n      this.checkedDepartNameString = '';\n      this.userId = formData.userId;\n      this.userDepartModel.userId = formData.userId;\n\n      for (var i = 0; i < formData.departIdList.length; i++) {\n        this.selectedDepartKeys.push(formData.departIdList[i].key);\n        this.checkedDepartNames.push(formData.departIdList[i].title);\n        this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\n      }\n\n      this.userDepartModel.departIdList = this.selectedDepartKeys;\n      this.checkedDepartKeys = this.selectedDepartKeys; //更新当前的选择keys\n\n      console.log(\"=====>\" + this.checkedDepartKeys);\n    },\n    refresh: function refresh() {\n      this.selectedDepartKeys = [];\n      this.checkedDepartKeys = [];\n      this.checkedDepartNames = [];\n      this.checkedDepartNameString = \"\";\n      this.userId = \"\";\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false;\n      this.userDepartModel = {\n        userId: '',\n        departIdList: []\n      };\n      this.checkedDepartNames = [];\n      this.checkedDepartNameString = '';\n      this.checkedDepartKeys = [];\n      this.selectedDepartKeys = [];\n    },\n    //获取人员下拉框 所选用户id\n    getPeople: function getPeople(e) {\n      console.log(e);\n      this.model.itypeId = e;\n    },\n    //获取用户点击的是否单选\n    getisnot: function getisnot(e) {\n      console.log(e);\n      this.selectvalue = e.target.value;\n    },\n    //----------------------------------编辑或新增提交按钮---------------------------------------------------\n    handleOk: function handleOk() {\n      var _this6 = this;\n\n      if (!this.typeModel) {\n        this.$message.error('请选择一个类型！');\n        return;\n      } else {\n        if (this.typeModel == '1' && this.selectedRole == '') {\n          this.$message.error('请选择一个角色！');\n          return;\n        }\n\n        if (this.typeModel == '2' && this.checkedDepartNameString == '') {\n          this.$message.error('请选择一个部门！');\n          return;\n        }\n\n        if (this.typeModel == '3' && this.userRealName == '') {\n          this.$message.error('请选择一个人员！');\n          return;\n        }\n      }\n\n      this.typeModel = null;\n      var that = this; //提交对象\n\n      var formData = {\n        'iid': this.model.iid,\n        'ibusModelId': this.model.ibusModelId,\n        'spermitType': this.spermitType,\n        'itypeId': this.model.itypeId,\n        'sdisplay': this.selectvalue\n      };\n      console.log(formData); // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n\n          if (_this6.isadd) {\n            httpurl += _this6.url.add;\n            method = 'post';\n            formData.iid = '';\n          } else {\n            httpurl += _this6.url.edit;\n            method = 'put';\n\n            if (_this6.spermitType == 2) {\n              formData.itypeId = formData.itypeId.substring(0, formData.itypeId.length - 1);\n            }\n          }\n\n          httpAction(httpurl, formData, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message); //告诉父级组件我已关闭  关闭后刷新父级列表\n\n              that.$emit('submit', true);\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false; //提交后清空记录\n\n            _this6.typeModel = '';\n            _this6.selectedRole = '';\n            _this6.userRealName = ''; // this.selectvalue = '';\n            //关闭中间角色 人员选框\n\n            _this6.spermitType = 0;\n            _this6.selectvalue = 1;\n            that.close();\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.typeModel = null;\n      this.selectedRole = '';\n      this.userRealName = '';\n      this.spermitType = 0;\n      this.selectvalue = 1;\n      this.close();\n    }\n  }\n};",{"version":3,"sources":["BusModelPermitModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n    \r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n       <!-- <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"业务模块id\">\r\n          <a-input  placeholder=\"\" v-decorator=\"['ibusModelId', {}]\" />\r\n        </a-form-item>-->\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"权限类型\">\r\n          <a-select v-model=\"typeModel\"\r\n                    @change=\"getTypeVal\"\r\n                    placeholder=\"权限类型\"\r\n                    :disabled=\"disableSubmit\"\r\n           >\r\n\r\n            <a-select-option   v-for=\"(item,index) in isno\" :value=\"item.value\">{{item.typename}}</a-select-option>\r\n\r\n          </a-select>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n\r\n          label=\"角色\" v-if=\"spermitType==1\">\r\n          <a-select  v-model=\"selectedRole\"  @change=\"getRole\">\r\n            <a-select-option  v-for=\"(role,roleindex) in roleList\" :key=\"roleindex\" :value=\"role.id\">\r\n              {{ role.roleName }}\r\n            </a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        <!--部门分配-->\r\n        <div v-else-if=\"spermitType==2\">\r\n            <a-form-item label=\"部门分配\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" v-show=\"!departDisabled && typeModel == 2\">\r\n              <a-input-search\r\n                placeholder=\"点击右侧按钮选择部门\"\r\n                v-model=\"checkedDepartNameString\"\r\n                disabled\r\n                @search=\"onSearch\">\r\n                <a-button slot=\"enterButton\" icon=\"search\">选择</a-button>\r\n              </a-input-search>\r\n            </a-form-item>\r\n            <a-input type=\"hidden\" placeholder=\"\" v-decorator=\"['selecteddeparts']\" />\r\n        </div>\r\n        <a-form-item\r\n          v-else-if=\"spermitType==3\"\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"人员\">\r\n          <j-select-user-by-dep v-decorator=\"[ 'itypeId', {}]\"  @senUserId=\"senUserId\" v-model=\"userRealName\" @getUD2=\"getUD2\" ></j-select-user-by-dep>\r\n        </a-form-item>\r\n        <a-form-item\r\n          v-else=\"spermitType==0\">\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"是否可见\">\r\n          <a-radio-group v-model=\"selectvalue\"  @change=\"getisnot\" >\r\n            <a-radio :value=\"1\">是</a-radio>\r\n            <a-radio :value=\"0\">否</a-radio>\r\n          </a-radio-group>\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-spin>\r\n    <depart-window ref=\"departWindow\" @sendPartsList=\"sendPartsList\" @ok=\"modalFormOk\" ></depart-window>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import { httpAction } from '@/api/manage'\r\n  import {getAction } from '@/api/manage'\r\n  import pick from 'lodash.pick'\r\n  // 引入搜索部门弹出框的组件\r\n  import departWindow from '../../system/modules/DepartWindow'\r\n  import {ACCESS_TOKEN} from \"@/store/mutation-types\"\r\n  import {addUser, editUser, queryUserRole, queryall} from '@/api/api'\r\n  import {disabledAuthFilter} from \"@/utils/authFilter\"\r\n  import {duplicateCheck} from '@/api/api'\r\n  import JSelectUserByDep from '@/components/jeecgbiz/JSelectUserByDep'\r\n\r\n  import Vue from 'vue'\r\n\r\n  export default {\r\n    name: \"BusModelPermitModal\",\r\n    components: {\r\n      departWindow,\r\n      JSelectUserByDep\r\n    },\r\n    data () {\r\n      return {\r\n\r\n        isno:[\r\n          {typename:'所有人',value:'0'},\r\n          {typename:'角色',value:'1'},\r\n          {typename:'部门',value:'2'},\r\n          {typename:'人员',value:'3'},\r\n        ],\r\n        ibusModelId:'', //提交时所需参数\r\n        itypeName:'',// 角色或人员或部门的名字\r\n        spermitType:'',  // 范围类型\r\n        selectvalue:1,  //是否选中\r\n        title:\"操作\",\r\n        visible: false,\r\n        model: {\r\n          iid:'',\r\n          ibusModelId:'',\r\n          itypeId:'',// 角色或人员或部门的id\r\n        },\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n        selectData: [],\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        validatorRules:{\r\n        iId:{rules: [{ required: true, message: '请输入主键id!' }]},\r\n        },\r\n        selectedModel: null,\r\n        selectedFunction: null,\r\n        typeModel:null,\r\n        roleList:[],\r\n        selectedRole: '',\r\n        userRealName:'',\r\n        selectedUser:[],\r\n        userList:[],\r\n        //部门控件\r\n        departDisabled: false, //是否是我的部门调用该页面\r\n        roleDisabled: false, //是否是角色维护调用该页面\r\n        modalWidth: 800,\r\n        drawerWidth: 700,\r\n        modaltoggleFlag: true,\r\n        confirmDirty: false,\r\n        selectedDepartKeys: [], //保存用户选择部门id\r\n        checkedDepartKeys: [],\r\n        checkedDepartNames: [], // 保存部门的名称 =>title\r\n        checkedDepartNameString: \"\", // 保存部门的名称 =>title\r\n        userId: \"\", //保存用户id\r\n        disableSubmit: false,\r\n        userDepartModel: {userId: '', departIdList: []}, // 保存SysUserDepart的用户部门中间表数据需要的对象\r\n        url: {\r\n          add: \"/oaBus/busModelPermit/add\",\r\n          edit: \"/oaBus/busModelPermit/edit\",\r\n        },\r\n        //用来判断弹框是用来新增或是编辑两种状态\r\n        isadd:false\r\n      }\r\n    },\r\n    created () {\r\n      this.initialRoleList();\r\n      this.initialUserList();\r\n      const token = Vue.ls.get(ACCESS_TOKEN);\r\n      this.headers = {\"X-Access-Token\": token}\r\n\r\n\r\n    },\r\n    watch:{\r\n      typeModel:'initialRoleList',\r\n      typeModel:'initialUserList'\r\n    },\r\n    methods: {\r\n      senUserId(ids) {\r\n        this.model.itypeId = ids.toString();\r\n      },\r\n      // 获取范围类型\r\n      getTypeVal(e){\r\n        this.spermitType = e;\r\n        if(e=='1'){\r\n          this.selectedRole = '';\r\n        }else if (e=='3'){\r\n          this.userRealName = '';\r\n        }\r\n      },\r\n      //修改角色或者人员 获取角色id\r\n      getRole(e){\r\n        this.model.itypeId = e;\r\n      },\r\n      add1(ibusModelId,sname,data) {\r\n        this.isadd = true;\r\n        this.model.ibusModelId = ibusModelId;\r\n        console.log(data)\r\n        //判断类型为非零时  不可选所有人\r\n        if(data.length != 0){\r\n          data.forEach((item)=>{\r\n            if(item.spermitType!=0){\r\n              this.isno= [\r\n                // {typename:'所有人',value:'0'},\r\n                {typename:'角色',value:'1'},\r\n                {typename:'部门',value:'2'},\r\n                {typename:'人员',value:'3'}\r\n              ]\r\n            }else{\r\n              this.isno= [\r\n                {typename:'所有人',value:'0'},\r\n                {typename:'角色',value:'1'},\r\n                {typename:'部门',value:'2'},\r\n                {typename:'人员',value:'3'}\r\n              ]\r\n            }\r\n          })\r\n        }else{\r\n          this.isno= [\r\n            {typename:'所有人',value:'0'},\r\n            {typename:'角色',value:'1'},\r\n            {typename:'部门',value:'2'},\r\n            {typename:'人员',value:'3'}\r\n          ]\r\n        }\r\n\r\n        this.visible = true\r\n        this.title=sname;\r\n        this.form.resetFields();\r\n        //this.model = Object.assign({}, record2);\r\n      },\r\n      //获取部门子组件树形弹窗返回的对象\r\n      sendPartsList(partsLists){\r\n        console.log(partsLists);\r\n        if(Array.isArray(partsLists)){\r\n\r\n          // this.checkedDepartNameString\r\n          let itypeIdLists = '';\r\n          let itypeNanesLists = '';\r\n          partsLists.map((part)=>{\r\n            itypeNanesLists+=part.title+'  ';\r\n            itypeIdLists+=part.value+',';\r\n          });\r\n          this.model.itypeId =itypeIdLists;\r\n          this.checkedDepartNameString = itypeNanesLists;\r\n        }else{\r\n          this.model.itypeId =partsLists.value;\r\n          this.checkedDepartNameString = partsLists.title;\r\n\r\n        }\r\n\r\n      },\r\n      //初始换数据渲染\r\n      update (record,isedit) {\r\n\r\n        if(isedit){\r\n          this.isno= [\r\n            {typename:'所有人',value:'0'},\r\n            {typename:'角色',value:'1'},\r\n            {typename:'部门',value:'2'},\r\n            {typename:'人员',value:'3'}\r\n          ]\r\n        }\r\n        this.isadd = false;\r\n\r\n        this.spermitType = record.spermitType;\r\n        this.title=record.sname;\r\n        this.form.resetFields();\r\n        this.model = Object.assign({}, record);\r\n        this.visible = true;\r\n        this.selectvalue = Number(this.model.sdisplay);\r\n        //范围类型\r\n        this.typeModel = this.model.spermitType;\r\n        if( this.typeModel=='1'){\r\n          setTimeout(()=>{\r\n            this.selectedRole = this.model.itypeName;\r\n            console.log(this.selectedRole)\r\n          },1000)\r\n        }else if(this.typeModel=='2'){\r\n          this.checkedDepartNameString = this.model.itypeName;\r\n        }\r\n        else if(this.typeModel=='3'){\r\n          this.userRealName = this.model.itypeName;\r\n        }\r\n      },\r\n      initialRoleList: function () {\r\n        let url = \"/oaBus/busFunctionPermit/findRoleByCode\";\r\n        getAction(url).then((res)=>{\r\n          this.roleList = res.result;\r\n        })\r\n      },\r\n      initialUserList: function () {\r\n        let  url = \"/oaBus/busFunctionPermit/userList\";\r\n        getAction(url).then((res)=>{\r\n          this.userList = res.result;\r\n        })\r\n      },\r\n      loadCheckDeparts(){\r\n        let that = this;\r\n        if(!that.userId){return}\r\n        getAction(that.url.userWithDepart,{userId:that.userId}).then((res)=>{\r\n          that.checkedDepartNames = [];\r\n          if(res.success){\r\n            for (let i = 0; i < res.result.length; i++) {\r\n              that.checkedDepartNames.push(res.result[i].title);\r\n              this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\r\n              that.checkedDepartKeys.push(res.result[i].key);\r\n            }\r\n            that.userDepartModel.departIdList = that.checkedDepartKeys\r\n          }else{\r\n            console.log(res.message);\r\n          }\r\n        })\r\n      },\r\n      // 搜索用户对应的部门API\r\n      onSearch() {\r\n        // this.$refs.departWindow.add(this.checkedDepartKeys, this.userId);\r\n        this.$refs.departWindow.add(this.model.itypeId, this.isadd);\r\n      },\r\n      // 获取用户对应部门弹出框提交给返回的数据\r\n      modalFormOk(formData) {\r\n        this.checkedDepartNames = [];\r\n        this.selectedDepartKeys = [];\r\n        this.checkedDepartNameString = '';\r\n        this.userId = formData.userId;\r\n        this.userDepartModel.userId = formData.userId;\r\n        for (let i = 0; i < formData.departIdList.length; i++) {\r\n          this.selectedDepartKeys.push(formData.departIdList[i].key);\r\n          this.checkedDepartNames.push(formData.departIdList[i].title);\r\n          this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\r\n        }\r\n        this.userDepartModel.departIdList = this.selectedDepartKeys;\r\n        this.checkedDepartKeys = this.selectedDepartKeys  //更新当前的选择keys\r\n        console.log(\"=====>\" + this.checkedDepartKeys);\r\n      },\r\n      refresh() {\r\n        this.selectedDepartKeys = [];\r\n        this.checkedDepartKeys = [];\r\n        this.checkedDepartNames = [];\r\n        this.checkedDepartNameString = \"\";\r\n        this.userId = \"\"\r\n      },\r\n      close() {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n        this.disableSubmit = false;\r\n        this.userDepartModel = {userId:'',departIdList:[]};\r\n        this.checkedDepartNames = [];\r\n        this.checkedDepartNameString='';\r\n        this.checkedDepartKeys = [];\r\n        this.selectedDepartKeys = [];\r\n      },\r\n      //获取人员下拉框 所选用户id\r\n      getPeople(e){\r\n        console.log(e);\r\n        this.model.itypeId = e;\r\n\r\n      },\r\n      //获取用户点击的是否单选\r\n      getisnot(e){\r\n        console.log(e);\r\n        this.selectvalue = e.target.value;\r\n\r\n      },\r\n      //----------------------------------编辑或新增提交按钮---------------------------------------------------\r\n      handleOk () {\r\n        if(!this.typeModel){\r\n          this.$message.error('请选择一个类型！');\r\n\r\n          return;\r\n        }else{\r\n          if(this.typeModel=='1'&&this.selectedRole==''){\r\n            this.$message.error('请选择一个角色！');\r\n            return;\r\n\r\n          } if(this.typeModel=='2'&&this.checkedDepartNameString==''){\r\n            this.$message.error('请选择一个部门！');\r\n            return;\r\n          } if(this.typeModel=='3'&&this.userRealName==''){\r\n            this.$message.error('请选择一个人员！');\r\n            return;\r\n          }\r\n        }\r\n\r\n        this.typeModel = null;\r\n        const that = this;\r\n\r\n        //提交对象\r\n        let formData = {\r\n          'iid':this.model.iid,\r\n          'ibusModelId':this.model.ibusModelId,\r\n          'spermitType':this.spermitType,\r\n          'itypeId':this.model.itypeId,\r\n          'sdisplay':this.selectvalue\r\n\r\n        }\r\n        console.log(formData);\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true;\r\n            let httpurl = '';\r\n            let method = '';\r\n            if(this.isadd){\r\n              httpurl+=this.url.add;\r\n              method = 'post';\r\n              formData.iid = '';\r\n            }else{\r\n              httpurl+=this.url.edit;\r\n               method = 'put';\r\n              if(this.spermitType==2){\r\n                formData.itypeId = formData.itypeId.substring(0,formData.itypeId.length-1);\r\n              }\r\n\r\n            }\r\n            httpAction(httpurl,formData,method).then((res)=>{\r\n              if(res.success){\r\n            that.$message.success(res.message);\r\n                //告诉父级组件我已关闭  关闭后刷新父级列表\r\n                that.$emit('submit',true);\r\n              }else{\r\n                 that.$message.warning(res.message);\r\n               }\r\n             }).finally(() => {\r\n               that.confirmLoading = false;\r\n              //提交后清空记录\r\n              this.typeModel = '';\r\n              this.selectedRole = '';\r\n              this.userRealName = '';\r\n              // this.selectvalue = '';\r\n              //关闭中间角色 人员选框\r\n              this.spermitType = 0;\r\n              this.selectvalue = 1;\r\n               that.close();\r\n            })\r\n          }\r\n        })\r\n      },\r\n      handleCancel () {\r\n        this.typeModel = null;\r\n        this.selectedRole = '';\r\n        this.userRealName = '';\r\n        this.spermitType = 0;\r\n        this.selectvalue = 1;\r\n\r\n        this.close()\r\n      },\r\n\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/oaBus/modules"}]}