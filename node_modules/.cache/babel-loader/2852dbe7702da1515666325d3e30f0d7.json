{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js!C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\workflow\\modules\\uploadProc.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\workflow\\modules\\uploadProc.vue","mtime":1579413597657},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1570779245522},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:\\\\xxm\\\\work\\\\jd\\\\fore\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpAction, getAction, postAction, uploadProc } from '@/api/manage';\nimport Vue from 'vue';\nimport { ACCESS_TOKEN } from '@/store/mutation-types';\nimport InputElement from \"ant-design-vue/es/auto-complete/InputElement\";\nimport ATextarea from \"ant-design-vue/es/input/TextArea\";\nexport default {\n  name: \"uploadProc\",\n  components: {\n    ATextarea: ATextarea,\n    InputElement: InputElement\n  },\n  data: function data() {\n    return {\n      haveClick: false,\n      form: this.$form.createForm(this),\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      headers: {\n        'X-Access-Token': Vue.ls.get(ACCESS_TOKEN),\n        'Content-Type': 'multipart/form-data'\n      },\n      fileList: [],\n      confirmLoading: false,\n      visible: false,\n      uploadUrl: '/wf/process/deploy',\n      scrHeight: window.innerHeight - 300 + 'px'\n    };\n  },\n  created: function created() {},\n  methods: {\n    show: function show() {\n      this.fileList = [];\n      this.visible = true;\n    },\n    handleChange: function handleChange(info) {\n      this.fileList = info.fileList;\n\n      if (info.file.status == 'done') {\n        this.$message.success(\"\".concat(info.file.name, \" \\u6587\\u4EF6\\u4E0A\\u4F20\\u6210\\u529F\"));\n        this.reload();\n      } else if (info.file.status == 'error') {\n        this.$message.error(\"\".concat(info.file.name, \" \\u6587\\u4EF6\\u4E0A\\u4F20\\u5931\\u8D25\"));\n        this.reload();\n      } // this.fileList=[]\n\n    },\n    beforeUpload: function beforeUpload(file, fileList) {\n      this.fileList = [].concat(_toConsumableArray(this.fileList), [file]);\n      return false;\n    },\n    upload: function upload() {\n      var _this = this;\n\n      if (this.haveClick) {\n        this.$message.error('请勿重复点击');\n        return;\n      }\n\n      this.haveClick = true;\n      var fileList = this.fileList;\n      var data = new FormData();\n\n      if (this.fileList.length <= 0) {\n        this.$message.error('请选择要上传的文件');\n        return;\n      }\n\n      for (var i in fileList) {\n        data.append('file', fileList[i].originFileObj);\n      }\n\n      var url = this.uploadUrl;\n      var method = 'post';\n      this.axios({\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        url: url,\n        method: method,\n        data: data,\n        processData: false\n      }).then(function (res) {\n        if (res.success) {\n          _this.$message.success(res.message);\n\n          _this.haveClick = false;\n\n          _this.$emit('reload');\n\n          _this.handleCancel();\n        } else {\n          _this.fileList = [];\n\n          _this.$message.error(res.message);\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.$emit('close');\n      this.visible = false;\n    }\n  }\n};",{"version":3,"sources":["uploadProc.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAAA,UAAA,EAAA,SAAA,EAAA,UAAA,EAAA,UAAA,QAAA,cAAA;AACA,OAAA,GAAA,MAAA,KAAA;AACA,SAAA,YAAA,QAAA,wBAAA;AACA,OAAA,YAAA,MAAA,8CAAA;AACA,OAAA,SAAA,MAAA,kCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,SAAA,EAAA,SAAA;AAAA,IAAA,YAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA,KAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAFA;AAGA,MAAA,QAAA,EAAA;AACA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SADA;AAEA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AAFA,OAHA;AAOA,MAAA,UAAA,EAAA;AACA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SADA;AAEA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AAFA,OAPA;AAWA,MAAA,OAAA,EAAA;AACA,0BAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,YAAA,CADA;AAEA,wBAAA;AAFA,OAXA;AAeA,MAAA,QAAA,EAAA,EAfA;AAgBA,MAAA,cAAA,EAAA,KAhBA;AAiBA,MAAA,OAAA,EAAA,KAjBA;AAkBA,MAAA,SAAA,EAAA,oBAlBA;AAmBA,MAAA,SAAA,EAAA,MAAA,CAAA,WAAA,GAAA,GAAA,GAAA;AAnBA,KAAA;AAqBA,GAzBA;AA0BA,EAAA,OA1BA,qBA0BA,CAGA,CA7BA;AA8BA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,WAAA,QAAA,GAAA,EAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,KAJA;AAKA,IAAA,YALA,wBAKA,IALA,EAKA;AACA,WAAA,QAAA,GAAA,IAAA,CAAA,QAAA;;AAGA,UAAA,IAAA,CAAA,IAAA,CAAA,MAAA,IAAA,MAAA,EAAA;AAEA,aAAA,QAAA,CAAA,OAAA,WAAA,IAAA,CAAA,IAAA,CAAA,IAAA;AAEA,aAAA,MAAA;AACA,OALA,MAKA,IAAA,IAAA,CAAA,IAAA,CAAA,MAAA,IAAA,OAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,WAAA,IAAA,CAAA,IAAA,CAAA,IAAA;AACA,aAAA,MAAA;AACA,OAZA,CAaA;;AAEA,KApBA;AAqBA,IAAA,YAAA,EAAA,sBAAA,IAAA,EAAA,QAAA,EAAA;AACA,WAAA,QAAA,gCAAA,KAAA,QAAA,IAAA,IAAA;AACA,aAAA,KAAA;AACA,KAxBA;AAyBA,IAAA,MAzBA,oBAyBA;AAAA;;AAEA,UAAA,KAAA,SAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,CAAA,QAAA;AACA;AACA;;AACA,WAAA,SAAA,GAAA,IAAA;AANA,UAOA,QAPA,GAOA,IAPA,CAOA,QAPA;AAQA,UAAA,IAAA,GAAA,IAAA,QAAA,EAAA;;AAEA,UAAA,KAAA,QAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,CAAA,WAAA;AACA;AACA;;AACA,WAAA,IAAA,CAAA,IAAA,QAAA,EAAA;AACA,QAAA,IAAA,CAAA,MAAA,CAAA,MAAA,EAAA,QAAA,CAAA,CAAA,CAAA,CAAA,aAAA;AACA;;AAGA,UAAA,GAAA,GAAA,KAAA,SAAA;AACA,UAAA,MAAA,GAAA,MAAA;AAEA,WAAA,KAAA,CAAA;AAAA,QAAA,OAAA,EAAA;AACA,0BAAA;AADA,SAAA;AAEA,QAAA,GAAA,EAAA,GAFA;AAEA,QAAA,MAAA,EAAA,MAFA;AAEA,QAAA,IAAA,EAAA,IAFA;AAEA,QAAA,WAAA,EAAA;AAFA,OAAA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA;;AACA,UAAA,KAAA,CAAA,SAAA,GAAA,KAAA;;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,QAAA;;AACA,UAAA,KAAA,CAAA,YAAA;AACA,SALA,MAKA;AACA,UAAA,KAAA,CAAA,QAAA,GAAA,EAAA;;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,OAAA;AACA;AACA,OAZA;AAgBA,KA/DA;AAiEA,IAAA,YAjEA,0BAiEA;AACA,WAAA,KAAA,CAAA,OAAA;AACA,WAAA,OAAA,GAAA,KAAA;AACA;AApEA;AA9BA,CAAA","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"500\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"upload\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"取消\"\r\n    okText=\"上传\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n        >\r\n\r\n            <a-upload name=\"file\" :multiple=\"true\" :action=\"uploadUrl\" :fileList=\"fileList\"\r\n                      :beforeUpload=\"beforeUpload\" @change=\"handleChange\">\r\n              <a-button type=\"primary\" icon=\"plus\">\r\n                <a-icon typeof=\"upload\"/>\r\n                选择文件\r\n              </a-button>\r\n            </a-upload>\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n\r\n  import {httpAction, getAction, postAction, uploadProc} from '@/api/manage'\r\n  import Vue from 'vue'\r\n  import {ACCESS_TOKEN} from '@/store/mutation-types'\r\n  import InputElement from \"ant-design-vue/es/auto-complete/InputElement\";\r\n  import ATextarea from \"ant-design-vue/es/input/TextArea\";\r\n\r\n  export default {\r\n    name: \"uploadProc\",\r\n    components: {ATextarea, InputElement},\r\n    data() {\r\n      return {\r\n        haveClick:false,\r\n        form: this.$form.createForm(this),\r\n        labelCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 5},\r\n        },\r\n        wrapperCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 16},\r\n        },\r\n        headers: {\r\n          'X-Access-Token': Vue.ls.get(ACCESS_TOKEN),\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        fileList: [],\r\n        confirmLoading: false,\r\n        visible: false,\r\n        uploadUrl: '/wf/process/deploy',\r\n        scrHeight: window.innerHeight - 300 + 'px'\r\n      }\r\n    },\r\n    created() {\r\n\r\n\r\n    },\r\n    methods: {\r\n      show() {\r\n        this.fileList = []\r\n        this.visible = true\r\n      },\r\n      handleChange(info) {\r\n        this.fileList = info.fileList\r\n\r\n\r\n        if (info.file.status == 'done') {\r\n\r\n          this.$message.success(`${info.file.name} 文件上传成功`)\r\n\r\n          this.reload()\r\n        } else if (info.file.status == 'error') {\r\n          this.$message.error(`${info.file.name} 文件上传失败`)\r\n          this.reload()\r\n        }\r\n        // this.fileList=[]\r\n\r\n      },\r\n      beforeUpload: function (file, fileList) {\r\n        this.fileList = [...this.fileList, file];\r\n        return false;\r\n      },\r\n      upload() {\r\n\r\n        if (this.haveClick) {\r\n          this.$message.error('请勿重复点击')\r\n          return\r\n        }\r\n        this.haveClick=true\r\n        const {fileList} = this;\r\n        const data = new FormData();\r\n\r\n        if(this.fileList.length<=0){\r\n          this.$message.error('请选择要上传的文件')\r\n          return\r\n        }\r\n        for(let i in fileList){\r\n          data.append('file', fileList[i].originFileObj);\r\n        }\r\n\r\n\r\n        let url=this.uploadUrl\r\n        let method='post'\r\n\r\n        this.axios({ headers:{\r\n            'Content-Type': 'multipart/form-data'\r\n          },url, method, data,processData: false}).then(res => {\r\n            if (res.success) {\r\n              this.$message.success(res.message)\r\n              this.haveClick=false\r\n              this.$emit('reload')\r\n              this.handleCancel()\r\n            } else {\r\n              this.fileList = []\r\n              this.$message.error(res.message)\r\n            }\r\n        })\r\n\r\n\r\n\r\n      },\r\n\r\n      handleCancel() {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/workflow/modules"}]}