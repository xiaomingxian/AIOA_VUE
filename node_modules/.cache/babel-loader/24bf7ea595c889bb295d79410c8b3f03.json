{"remainingRequest":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\modules\\message\\modules\\SysMessageTemplateModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\modules\\message\\modules\\SysMessageTemplateModal.vue","mtime":1568535255000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpAction } from '@/api/manage';\nimport pick from 'lodash.pick';\nimport { duplicateCheck } from '@/api/api';\nimport JEditor from '@/components/jeecg/JEditor';\nexport default {\n  name: \"SysMessageTemplateModal\",\n  components: {\n    JEditor: JEditor\n  },\n  data: function data() {\n    return {\n      title: \"操作\",\n      visible: false,\n      disable: true,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {\n        templateCode: {\n          rules: [{\n            required: true,\n            message: '请输入模板CODE!'\n          }, {\n            validator: this.validateTemplateCode\n          }]\n        },\n        templateName: {\n          rules: [{\n            required: true,\n            message: '请输入模板标题!'\n          }]\n        },\n        templateContent: {\n          rules: []\n        },\n        templateType: {\n          rules: [{\n            required: true,\n            message: '请输入模板类型!'\n          }]\n        }\n      },\n      url: {\n        add: \"/message/sysMessageTemplate/add\",\n        edit: \"/message/sysMessageTemplate/edit\"\n      },\n      useEditor: false,\n      templateEditorContent: \"\"\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add() {\n      this.disable = false;\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this = this;\n\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.useEditor = record.templateType == 2;\n\n      if (this.useEditor) {\n        this.templateEditorContent = record.templateContent;\n      } else {\n        this.templateEditorContent = '';\n      }\n\n      this.visible = true;\n      this.$nextTick(function () {\n        if (_this.useEditor) {\n          _this.form.setFieldsValue(pick(_this.model, 'templateCode', 'templateName', 'templateTestJson', 'templateType'));\n        } else {\n          _this.form.setFieldsValue(pick(_this.model, 'templateCode', 'templateContent', 'templateName', 'templateTestJson', 'templateType'));\n        }\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.disable = true;\n    },\n    handleOk: function handleOk() {\n      var _this2 = this;\n\n      this.model.templateType = this.templateType;\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n\n          if (!_this2.model.id) {\n            httpurl += _this2.url.add;\n            method = 'post';\n          } else {\n            httpurl += _this2.url.edit;\n            method = 'put';\n          }\n\n          var formData = Object.assign(_this2.model, values); //时间格式化\n\n          if (_this2.useEditor) {\n            formData.templateContent = _this2.templateEditorContent;\n          }\n\n          console.log(formData);\n          httpAction(httpurl, formData, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        }\n      });\n    },\n    validateTemplateCode: function validateTemplateCode(rule, value, callback) {\n      var params = {\n        tableName: \"sys_sms_template\",\n        fieldName: \"template_code\",\n        fieldVal: value,\n        dataId: this.model.id\n      };\n      duplicateCheck(params).then(function (res) {\n        if (res.success) {\n          callback();\n        } else {\n          callback(res.message);\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    handleChangeTemplateType: function handleChangeTemplateType(value) {\n      //如果是邮件类型那么则改变模板内容是富文本编辑器\n      this.useEditor = value == 2;\n    }\n  }\n};",{"version":3,"sources":["SysMessageTemplateModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"模板CODE\">\r\n          <a-input\r\n            :disabled=\"disable\"\r\n            placeholder=\"请输入模板编码\"\r\n            v-decorator=\"['templateCode', validatorRules.templateCode ]\"\r\n          />\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"模板标题\">\r\n          <a-input\r\n            placeholder=\"请输入模板标题\"\r\n            v-decorator=\"['templateName', validatorRules.templateName]\"\r\n          />\r\n        </a-form-item>\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"模板类型\">\r\n          <j-dict-select-tag @change=\"handleChangeTemplateType\" :triggerChange=\"true\" dictCode=\"msgType\" v-decorator=\"['templateType', validatorRules.templateType ]\" placeholder=\"请选择模板类型\">\r\n          </j-dict-select-tag>\r\n        </a-form-item>\r\n\r\n        <a-form-item\r\n          v-show=\"!useEditor\"\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"模板内容\">\r\n          <a-textarea placeholder=\"请输入模板内容\" v-decorator=\"['templateContent', validatorRules.templateContent ]\" :autosize=\"{ minRows: 8, maxRows: 8 }\" />\r\n        </a-form-item>\r\n\r\n        <a-form-item\r\n          v-show=\"useEditor\"\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"模板内容\">\r\n          <j-editor v-model=\"templateEditorContent\"></j-editor>\r\n        </a-form-item>\r\n\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import {httpAction} from '@/api/manage'\r\n  import pick from 'lodash.pick'\r\n  import { duplicateCheck } from '@/api/api'\r\n  import JEditor from '@/components/jeecg/JEditor'\r\n\r\n  export default {\r\n    name: \"SysMessageTemplateModal\",\r\n    components:{\r\n      JEditor\r\n    },\r\n    data() {\r\n      return {\r\n        title: \"操作\",\r\n        visible: false,\r\n        disable: true,\r\n        model: {},\r\n        labelCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 5},\r\n        },\r\n        wrapperCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 16},\r\n        },\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        validatorRules: {\r\n        templateCode: {rules: [{required: true, message: '请输入模板CODE!' },{validator: this.validateTemplateCode}]},\r\n        templateName: {rules: [{required: true, message: '请输入模板标题!'}]},\r\n        templateContent: {rules: []},\r\n        templateType: {rules: [{required: true, message: '请输入模板类型!'}]},\r\n        },\r\n        url: {\r\n          add: \"/message/sysMessageTemplate/add\",\r\n          edit: \"/message/sysMessageTemplate/edit\",\r\n        },\r\n        useEditor:false,\r\n        templateEditorContent:\"\"\r\n      }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n      add() {\r\n        this.disable = false;\r\n        this.edit({});\r\n      },\r\n      edit(record) {\r\n        this.form.resetFields();\r\n        this.model = Object.assign({}, record);\r\n        this.useEditor = (record.templateType==2)\r\n        if(this.useEditor){\r\n          this.templateEditorContent=record.templateContent\r\n        }else{\r\n          this.templateEditorContent=''\r\n        }\r\n        this.visible = true;\r\n        this.$nextTick(() => {\r\n          if(this.useEditor){\r\n            this.form.setFieldsValue(pick(this.model, 'templateCode', 'templateName', 'templateTestJson', 'templateType'))\r\n          }else{\r\n            this.form.setFieldsValue(pick(this.model, 'templateCode', 'templateContent', 'templateName', 'templateTestJson', 'templateType'))\r\n          }\r\n        });\r\n      },\r\n      close() {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n        this.disable = true;\r\n      },\r\n      handleOk() {\r\n        this.model.templateType = this.templateType;\r\n        const that = this;\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true;\r\n            let httpurl = '';\r\n            let method = '';\r\n            if (!this.model.id) {\r\n              httpurl += this.url.add;\r\n              method = 'post';\r\n            } else {\r\n              httpurl += this.url.edit;\r\n              method = 'put';\r\n            }\r\n            let formData = Object.assign(this.model, values);\r\n            //时间格式化\r\n\r\n            if(this.useEditor){\r\n              formData.templateContent=this.templateEditorContent\r\n            }\r\n            console.log(formData)\r\n            httpAction(httpurl, formData, method).then((res) => {\r\n              if (res.success) {\r\n                that.$message.success(res.message);\r\n                that.$emit('ok');\r\n              } else {\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n              that.close();\r\n            })\r\n\r\n\r\n          }\r\n        })\r\n      },\r\n      validateTemplateCode(rule, value, callback){\r\n        var params = {\r\n          tableName: \"sys_sms_template\",\r\n          fieldName: \"template_code\",\r\n          fieldVal: value,\r\n          dataId: this.model.id\r\n        }\r\n        duplicateCheck(params).then((res)=>{\r\n          if(res.success){\r\n            callback();\r\n          }else{\r\n            callback(res.message);\r\n          }\r\n        })\r\n\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n      handleChangeTemplateType(value){\r\n        //如果是邮件类型那么则改变模板内容是富文本编辑器\r\n        this.useEditor = value==2\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/modules/message/modules"}]}