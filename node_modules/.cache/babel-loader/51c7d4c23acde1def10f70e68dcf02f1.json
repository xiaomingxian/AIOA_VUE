{"remainingRequest":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\user\\Step1.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\user\\Step1.vue","mtime":1568535272000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport JGraphicCode from '@/components/jeecg/JGraphicCode';\nimport { getAction } from '@/api/manage';\nimport { checkOnlyUser } from '@/api/api';\nexport default {\n  name: \"Step1\",\n  components: {\n    JGraphicCode: JGraphicCode\n  },\n  data: function data() {\n    return {\n      form: this.$form.createForm(this),\n      inputCodeContent: \"\",\n      inputCodeNull: true,\n      verifiedCode: \"\",\n      validatorRules: {\n        username: {\n          rules: [{\n            required: false\n          }, {\n            validator: this.validateInputUsername\n          }]\n        },\n        inputCode: {\n          rules: [{\n            required: true,\n            message: '请输入验证码!'\n          }, {\n            validator: this.validateInputCode\n          }]\n        }\n      }\n    };\n  },\n  methods: {\n    nextStep: function nextStep() {\n      var that = this;\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          var params = {};\n          var reg = /^[1-9]\\d*$|^0$/;\n          var username = values.username;\n\n          if (reg.test(username) == true) {\n            params.phone = username;\n          } else {\n            params.username = username;\n          }\n\n          getAction(\"/sys/user/querySysUser\", params).then(function (res) {\n            if (res.success) {\n              var userList = {\n                username: res.result.username,\n                phone: res.result.phone\n              };\n              setTimeout(function () {\n                that.$emit('nextStep', userList);\n              });\n            }\n          });\n        }\n      });\n    },\n    validateInputCode: function validateInputCode(rule, value, callback) {\n      if (!value || this.verifiedCode == this.inputCodeContent) {\n        callback();\n      } else {\n        callback(new Error(\"您输入的验证码不正确!\"));\n      }\n    },\n    inputCodeChange: function inputCodeChange(e) {\n      this.inputCodeContent = e.target.value;\n      console.log(this.inputCodeContent);\n\n      if (!e.target.value || 0 == e.target.value) {\n        this.inputCodeNull = true;\n      } else {\n        this.inputCodeContent = this.inputCodeContent.toLowerCase();\n        this.inputCodeNull = false;\n      }\n    },\n    generateCode: function generateCode(value) {\n      this.verifiedCode = value.toLowerCase();\n      console.log(this.verifiedCode);\n    },\n    validateInputUsername: function validateInputUsername(rule, value, callback) {\n      console.log(value);\n      var reg = /^[0-9]+.?[0-9]*/;\n\n      if (!value) {\n        callback(\"请输入用户名和手机号！\");\n      } //判断用户输入账号还是手机号码\n\n\n      if (reg.test(value)) {\n        var params = {\n          phone: value\n        };\n        checkOnlyUser(params).then(function (res) {\n          if (res.success) {\n            callback(\"用户名不存在!\");\n          } else {\n            callback();\n          }\n        });\n      } else {\n        var params = {\n          username: value\n        };\n        checkOnlyUser(params).then(function (res) {\n          if (res.success) {\n            callback(\"用户名不存在!\");\n          } else {\n            callback();\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["Step1.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"main\">\r\n\r\n    <a-form  style=\"max-width: 500px; margin: 40px auto 0;\" :form=\"form\">\r\n      <a-form-item>\r\n        <a-input\r\n          v-decorator=\"['username',validatorRules.username]\"\r\n          size=\"large\"\r\n          type=\"text\"\r\n          autocomplete=\"false\"\r\n          placeholder=\"请输入用户名或手机号\">\r\n          <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n        </a-input>\r\n      </a-form-item>\r\n      <a-row :gutter=\"0\">\r\n        <a-col :span=\"14\">\r\n          <a-form-item>\r\n            <a-input\r\n              v-decorator=\"['inputCode',validatorRules.inputCode]\"\r\n              size=\"large\"\r\n              type=\"text\"\r\n              @change=\"inputCodeChange\"\r\n              placeholder=\"请输入验证码\">\r\n              <a-icon slot=\"prefix\" v-if=\" inputCodeContent==verifiedCode \" type=\"smile\"\r\n                      :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n              <a-icon slot=\"prefix\" v-else type=\"frown\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n            </a-input>\r\n          </a-form-item>\r\n        </a-col>\r\n        <a-col :span=\"10\">\r\n          <j-graphic-code @success=\"generateCode\" style=\"float: right\"></j-graphic-code>\r\n        </a-col>\r\n      </a-row>\r\n      <a-form-item :wrapperCol=\"{span: 19, offset: 5}\">\r\n        <a-button type=\"primary\" @click=\"nextStep\">下一步</a-button>\r\n      </a-form-item>\r\n    </a-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import JGraphicCode from '@/components/jeecg/JGraphicCode'\r\n  import { getAction } from  '@/api/manage'\r\n  import {checkOnlyUser } from '@/api/api'\r\n  export default {\r\n    name: \"Step1\",\r\n    components: {\r\n      JGraphicCode\r\n    },\r\n    data () {\r\n      return {\r\n        form: this.$form.createForm(this),\r\n        inputCodeContent: \"\",\r\n        inputCodeNull:true,\r\n        verifiedCode:\"\",\r\n        validatorRules: {\r\n          username:{rules: [{ required: false},{validator: this.validateInputUsername}]},\r\n          inputCode:{rules: [{ required: true, message: '请输入验证码!'},{validator: this.validateInputCode}]},\r\n        },\r\n\r\n      }\r\n    },\r\n    methods: {\r\n      nextStep () {\r\n        let that = this\r\n        this.form.validateFields((err, values) => {\r\n          if (!err){\r\n          var params={}\r\n          var reg=/^[1-9]\\d*$|^0$/;\r\n          var username=values.username;\r\n          if(reg.test(username)==true) {\r\n            params.phone=username;\r\n          }else{\r\n            params.username=username;\r\n          }\r\n            getAction(\"/sys/user/querySysUser\",params).then((res)=>{\r\n              if(res.success){\r\n            var userList={\r\n              username:res.result.username,\r\n              phone:res.result.phone\r\n            };\r\n             setTimeout(function () {\r\n              that.$emit('nextStep',userList)\r\n            })\r\n          }\r\n          });\r\n        }\r\n    })\r\n\r\n      },\r\n      validateInputCode(rule, value, callback){\r\n        if (!value || this.verifiedCode == this.inputCodeContent) {\r\n          callback();\r\n        } else {\r\n          callback(new Error(\"您输入的验证码不正确!\"));\r\n        }\r\n      },\r\n      inputCodeChange(e){\r\n        this.inputCodeContent = e.target.value;\r\n        console.log(this.inputCodeContent)\r\n        if(!e.target.value||0==e.target.value){\r\n          this.inputCodeNull=true\r\n        }else{\r\n          this.inputCodeContent = this.inputCodeContent.toLowerCase()\r\n          this.inputCodeNull=false\r\n        }\r\n      },\r\n      generateCode(value){\r\n        this.verifiedCode = value.toLowerCase();\r\n        console.log(this.verifiedCode);\r\n      },\r\n      validateInputUsername(rule, value, callback){\r\n        console.log(value);\r\n        var reg=/^[0-9]+.?[0-9]*/;\r\n        if(!value){\r\n          callback(\"请输入用户名和手机号！\");\r\n        }\r\n\r\n        //判断用户输入账号还是手机号码\r\n        if(reg.test(value)){\r\n          var params = {\r\n            phone : value,\r\n          };\r\n          checkOnlyUser(params).then((res) => {\r\n            if (res.success) {\r\n            callback(\"用户名不存在!\")\r\n          } else {\r\n            callback()\r\n          }\r\n        })\r\n        }else{\r\n          var params = {\r\n            username: value,\r\n          };\r\n          checkOnlyUser(params).then((res) => {\r\n            if (res.success) {\r\n              callback(\"用户名不存在!\")\r\n            } else {\r\n              callback()\r\n            }\r\n          })\r\n        }\r\n      },\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/user"}]}