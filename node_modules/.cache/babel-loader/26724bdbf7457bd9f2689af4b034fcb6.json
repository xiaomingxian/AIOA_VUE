{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js!C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\buttons\\ShowReadModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\buttons\\ShowReadModal.vue","mtime":1577184410178},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1570779245522},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAction, postAction } from '@/api/manage';\nimport moment from 'moment';\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin';\nexport default {\n  name: \"showreadmodal\",\n  data: function data() {\n    return {\n      tableName: '',\n      busFunctionId: 0,\n      busDataId: 0,\n      columnss: [{\n        title: '用户',\n        align: \"center\",\n        dataIndex: 'userName',\n        width: '50%'\n      }, {\n        title: '已读情况',\n        align: \"center\",\n        dataIndex: 'isRead',\n        width: '50%',\n        customRender: function customRender(readCase) {\n          if (readCase == '1') {\n            return \"已阅读\";\n          } else if (readCase == \"0\") {\n            return \"未查看\";\n          } else {\n            return text;\n          }\n        } // width:'20%'\n\n      }],\n      isShow: true,\n      tables: [],\n      dataSource: [],\n      dataSources: [],\n      deptName: [],\n      message: '',\n      index: [],\n      length: [],\n      title: \"已读情况查看\",\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {}\n    };\n  },\n  created: function created() {},\n  create: function create() {},\n  methods: {\n    moment: moment,\n    showHead: function showHead(tableName, busFunctionId, busDataId) {\n      this.visible = true;\n      this.tableName = tableName;\n      this.busFunctionId = busFunctionId;\n      this.busDataId = busDataId;\n      this.getReadUserList();\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      this.close();\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    handleTableChange: function handleTableChange(pagination) {\n      var currentClick = pagination.current;\n      this.getReadUserList(currentClick);\n    },\n    getReadUserList: function getReadUserList() {\n      var _this = this;\n\n      var currentClick = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      this.dataSource = [];\n      var url = \"/oaBus/oaBusdata/getReadCase\";\n      getAction(url, {\n        urlParam: 1,\n        sBusdataTable: this.tableName,\n        iBusFunctionId: this.busFunctionId,\n        iBusdataId: this.busDataId,\n        pageNo: currentClick\n      }).then(function (res) {\n        _this.dataSources = res.result.records;\n        var map = {};\n        var collation = res.result.records;\n\n        for (var _i in collation) {\n          var key = collation[_i].deptName;\n\n          if (map[key] == undefined) {\n            map[key] = [];\n            collation[_i][\"key\"] = _i;\n            map[key].push(collation[_i]);\n          } else {\n            collation[_i][\"key\"] = _i;\n            map[key].push(collation[_i]);\n          }\n        }\n\n        var opinionData = JSON.parse(JSON.stringify(map));\n\n        for (var i in opinionData) {\n          for (var j in opinionData[i]) {\n            _this.index.push(parseInt(opinionData[i][j].key));\n\n            _this.length.push(opinionData[i].length);\n          }\n        }\n\n        for (var _i2 = 0; _i2 < _this.dataSources.length; _i2 += _this.length[_i2]) {\n          _this.dataSource.push(opinionData[_this.dataSources[_i2].deptName]);\n\n          _this.deptName.push(_this.dataSources[_i2].deptName);\n        }\n\n        for (var _i3 = 0; _i3 < _this.dataSource.length; _i3++) {\n          _this.tables.push({\n            table: 'tables' + _i3,\n            down: 'downs' + _i3,\n            up: 'up' + _i3\n          });\n        }\n      });\n    },\n    Clicks: function Clicks(index) {\n      if (this.isShow == true) {\n        this.isShow = false;\n        this.$refs[this.tables[index].table][0].$el.style.display = 'none';\n        this.$refs[this.tables[index].down][0].style.display = 'block';\n        this.$refs[this.tables[index].up][0].style.display = 'none';\n      } else {\n        this.isShow = true;\n        this.$refs[this.tables[index].table][0].$el.style.display = 'block';\n        this.$refs[this.tables[index].down][0].style.display = 'none';\n        this.$refs[this.tables[index].up][0].style.display = 'block';\n      } // console.log(this.$refs[this.tables[index].down])\n\n    }\n  }\n};",{"version":3,"sources":["ShowReadModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"1000\"\r\n    :visible=\"visible\"\r\n    @ok=\"handleOk\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n    <div v-for=\"(item,index) in dataSource\" :key=\"index\">\r\n      <p class=\"title\" @click=\"Clicks(index)\"><span>{{deptName[index]}}</span><a-icon :ref=\"tables[index].down\"  type=\"down\" style=\"position: absolute;right: 5%;display: none;\" /><a-icon :ref=\"tables[index].up\"  type=\"up\" style=\"position: absolute;right: 5%;display: block;\" /></p>\r\n      <a-table :ref=\"tables[index].table\"\r\n               size=\"middle\"\r\n               bordered\r\n               :columns=\"columnss\"\r\n               :dataSource=\"dataSource[index]\"\r\n               :pagination=\"false\"\r\n      >\r\n      </a-table>\r\n    </div>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import {getAction,postAction} from '@/api/manage'\r\n  import moment from 'moment'\r\n  import { JeecgListMixin } from '@/mixins/JeecgListMixin'\r\n\r\n  export default {\r\n    name: \"showreadmodal\",\r\n    data() {\r\n\r\n      return {\r\n        tableName:'',\r\n        busFunctionId:0,\r\n        busDataId:0,\r\n        columnss:[\r\n          {\r\n            title: '用户',\r\n            align: \"center\",\r\n            dataIndex: 'userName',\r\n            width:'50%'\r\n          },\r\n\r\n          {\r\n            title: '已读情况',\r\n            align: \"center\",\r\n            dataIndex: 'isRead',\r\n            width:'50%',\r\n            customRender: function (readCase) {\r\n              if (readCase == '1') {\r\n                return \"已阅读\";\r\n              } else if (readCase == \"0\") {\r\n                return \"未查看\";\r\n              } else {\r\n                return text;\r\n              }\r\n            }\r\n            // width:'20%'\r\n          },\r\n\r\n        ],\r\n        isShow:true,\r\n        tables:[],\r\n        dataSource: [],\r\n        dataSources: [],\r\n        deptName:[],\r\n        message:'',\r\n        index:[],\r\n        length:[],\r\n        title: \"已读情况查看\",\r\n        visible: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 5},\r\n        },\r\n        wrapperCol: {\r\n          xs: {span: 24},\r\n          sm: {span: 16},\r\n        },\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        validatorRules: {\r\n\r\n        },\r\n      }\r\n    },\r\n    created() {\r\n\r\n    },\r\n\r\n    create(){\r\n    },\r\n\r\n    methods: {\r\n      moment,\r\n      showHead(tableName,busFunctionId,busDataId) {\r\n        this.visible = true;\r\n        this.tableName = tableName;\r\n        this.busFunctionId = busFunctionId;\r\n        this.busDataId = busDataId;\r\n        this.getReadUserList();\r\n      },\r\n      close() {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      },\r\n      handleOk(){\r\n        this.close()\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n\r\n      handleTableChange(pagination) {\r\n        let currentClick = pagination.current;\r\n        this.getReadUserList(currentClick);\r\n      },\r\n\r\n      getReadUserList(currentClick=1) {\r\n        this.dataSource= [];\r\n        let url = \"/oaBus/oaBusdata/getReadCase\";\r\n        getAction(url, {urlParam:1,sBusdataTable:this.tableName,iBusFunctionId:this.busFunctionId,iBusdataId:this.busDataId,pageNo:currentClick}).then((res) => {\r\n\r\n          this.dataSources = res.result.records;\r\n          var map = {}\r\n          let collation = res.result.records\r\n         for (let i in collation){\r\n           let  key = collation[i].deptName;\r\n           if (map[key] == undefined) {\r\n             map[key] = []\r\n             collation[i][\"key\"]=i\r\n             map[key].push(collation[i])\r\n           }else {\r\n             collation[i][\"key\"]=i\r\n             map[key].push(collation[i])\r\n\r\n           }\r\n         }\r\n\r\n\r\n         let opinionData = JSON.parse(JSON.stringify(map));\r\n\r\n              for (var i in  opinionData){\r\n                for (let j in opinionData[i]){\r\n                  this.index.push(parseInt(opinionData[i][j].key));\r\n              this.length.push(opinionData[i].length);\r\n\r\n            }\r\n          }\r\n\r\n          for (let i = 0; i < this.dataSources.length;i += this.length[i]) {\r\n\r\n            this.dataSource.push(opinionData[this.dataSources[i].deptName]);\r\n            this.deptName.push(this.dataSources[i].deptName);\r\n          }\r\n\r\n          for(let i = 0; i < this.dataSource.length;i++){\r\n            this.tables.push({\r\n              table:'tables'+i,\r\n              down:'downs'+i,\r\n              up:'up'+i\r\n            })\r\n          }\r\n\r\n        });\r\n\r\n\r\n\r\n      },\r\n\r\n      Clicks(index){\r\n        if(this.isShow == true){\r\n          this.isShow = false;\r\n          this.$refs[this.tables[index].table][0].$el.style.display = 'none';\r\n          this.$refs[this.tables[index].down][0].style.display = 'block';\r\n          this.$refs[this.tables[index].up][0].style.display = 'none';\r\n        }else {\r\n          this.isShow = true;\r\n          this.$refs[this.tables[index].table][0].$el.style.display = 'block';\r\n          this.$refs[this.tables[index].down][0].style.display = 'none';\r\n          this.$refs[this.tables[index].up][0].style.display = 'block';\r\n        }\r\n        // console.log(this.$refs[this.tables[index].down])\r\n      },\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n\r\n  .title {\r\n    width: 100%;\r\n    height: 40px;\r\n    background: #2eabff;\r\n    color: #ffffff;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    /*letter-spacing: 20px;*/\r\n    margin-top: 10px;\r\n\r\n    span {\r\n      margin-left: 20px;\r\n    }\r\n  }\r\n\r\n</style>"],"sourceRoot":"src/views/buttons"}]}