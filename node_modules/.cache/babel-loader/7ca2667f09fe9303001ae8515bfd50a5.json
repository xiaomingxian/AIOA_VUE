{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js!C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\modules\\monitor\\HttpTrace.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\modules\\monitor\\HttpTrace.vue","mtime":1577687869304},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1570779245522},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nimport { getAction } from '@/api/manage';\nmoment.locale('zh-cn');\nexport default {\n  data: function data() {\n    return {\n      advanced: false,\n      dataSource: [],\n      pagination: {\n        defaultPageSize: 10,\n        defaultCurrent: 1,\n        pageSizeOptions: ['10', '20', '30', '40', '100'],\n        showQuickJumper: true,\n        showSizeChanger: true,\n        showTotal: function showTotal(total, range) {\n          return \"\\u663E\\u793A \".concat(range[0], \" ~ \").concat(range[1], \" \\u6761\\u8BB0\\u5F55\\uFF0C\\u5171 \").concat(total, \" \\u6761\\u8BB0\\u5F55\");\n        }\n      },\n      loading: true,\n      tableLoading: true\n    };\n  },\n  computed: {\n    columns: function columns() {\n      return [{\n        title: '请求时间',\n        dataIndex: 'timestamp',\n        align: \"center\",\n        customRender: function customRender(text) {\n          return moment(text).format('YYYY-MM-DD HH:mm:ss');\n        }\n      }, {\n        title: '请求方法',\n        dataIndex: 'request.method',\n        align: \"center\",\n        scopedSlots: {\n          customRender: 'requestMethod'\n        },\n        filters: [{\n          text: 'GET',\n          value: 'GET'\n        }, {\n          text: 'POST',\n          value: 'POST'\n        }, {\n          text: 'PUT',\n          value: 'PUT'\n        }, {\n          text: 'DELETE',\n          value: 'DELETE'\n        }],\n        filterMultiple: true,\n        onFilter: function onFilter(value, record) {\n          return record.request.method.includes(value);\n        }\n      }, {\n        title: '请求URL',\n        dataIndex: 'request.uri',\n        align: \"center\",\n        customRender: function customRender(text) {\n          return text.split('?')[0];\n        }\n      }, {\n        title: '响应状态',\n        dataIndex: 'response.status',\n        align: \"center\",\n        scopedSlots: {\n          customRender: 'responseStatus'\n        }\n      }, {\n        title: '请求耗时',\n        dataIndex: 'timeTaken',\n        align: \"center\",\n        scopedSlots: {\n          customRender: 'timeTaken'\n        }\n      }];\n    }\n  },\n  mounted: function mounted() {\n    this.fetch();\n  },\n  methods: {\n    handleClickUpdate: function handleClickUpdate() {\n      this.fetch();\n    },\n    handleTableChange: function handleTableChange() {\n      this.fetch();\n    },\n    fetch: function fetch() {\n      var _this = this;\n\n      this.tableLoading = true;\n      getAction('actuator/httptrace').then(function (data) {\n        var filterData = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = data.traces[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var d = _step.value;\n\n            if (d.request.method !== 'OPTIONS' && d.request.uri.indexOf('httptrace') === -1) {\n              filterData.push(d);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        _this.dataSource = filterData;\n      }).catch(function (e) {\n        console.error(e);\n\n        _this.$message.error('获取HTTP信息失败');\n      }).finally(function () {\n        _this.loading = false;\n        _this.tableLoading = false;\n      });\n    }\n  }\n};",{"version":3,"sources":["HttpTrace.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-skeleton active :loading=\"loading\" :paragraph=\"{rows: 17}\">\r\n    <a-card :bordered=\"false\" class=\"card-area\">\r\n\r\n      <a-alert type=\"info\" :showIcon=\"true\">\r\n        <div slot=\"message\">\r\n          共追踪到 {{ dataSource.length }} 条近期HTTP请求记录\r\n          <a-divider type=\"vertical\"/>\r\n          <a @click=\"handleClickUpdate\">立即刷新</a>\r\n        </div>\r\n      </a-alert>\r\n\r\n      <!-- 表格区域 -->\r\n      <a-table\r\n        :columns=\"columns\"\r\n        :dataSource=\"dataSource\"\r\n        :pagination=\"pagination\"\r\n        :loading=\"tableLoading\"\r\n        :scroll=\"{ x: 900 }\"\r\n        style=\"margin-top: 20px;\"\r\n        @change=\"handleTableChange\"\r\n        :rowClassName=\"(record,index) => {\r\n              let className  = 'light-row';\r\n              if (index % 2 === 1) className = 'dark-row';\r\n              return className;\r\n          }\"\r\n      >\r\n\r\n        <template slot=\"timeTaken\" slot-scope=\"text\">\r\n          <a-tag v-if=\"text < 500\" color=\"green\">{{ text }} ms</a-tag>\r\n          <a-tag v-else-if=\"text < 1000\" color=\"cyan\">{{ text }} ms</a-tag>\r\n          <a-tag v-else-if=\"text < 1500\" color=\"orange\">{{ text }} ms</a-tag>\r\n          <a-tag v-else color=\"red\">{{ text }} ms</a-tag>\r\n        </template>\r\n\r\n        <template slot=\"responseStatus\" slot-scope=\"text\">\r\n          <a-tag v-if=\"text < 200\" color=\"pink\">{{ text }} </a-tag>\r\n          <a-tag v-else-if=\"text < 201\" color=\"green\">{{ text }} </a-tag>\r\n          <a-tag v-else-if=\"text < 399\" color=\"cyan\">{{ text }} </a-tag>\r\n          <a-tag v-else-if=\"text < 403\" color=\"orange\">{{ text }} </a-tag>\r\n          <a-tag v-else-if=\"text < 501\" color=\"red\">{{ text }} </a-tag>\r\n          <span v-else>{{ text }}</span>\r\n        </template>\r\n\r\n        <template slot=\"requestMethod\" slot-scope=\"text\">\r\n          <a-tag v-if=\"text === 'GET'\" color=\"#87d068\">{{ text }}</a-tag>\r\n          <a-tag v-else-if=\"text === 'POST'\" color=\"#2db7f5\">{{ text }}</a-tag>\r\n          <a-tag v-else-if=\"text === 'PUT'\" color=\"#ffba5a\">{{ text }}</a-tag>\r\n          <a-tag v-else-if=\"text === 'DELETE'\" color=\"#f50\">{{ text }}</a-tag>\r\n          <span v-else>{{ text }} ms</span>\r\n        </template>\r\n\r\n      </a-table>\r\n\r\n    </a-card>\r\n  </a-skeleton>\r\n</template>\r\n\r\n<script>\r\n  import moment from 'moment'\r\n  import { getAction } from '@/api/manage'\r\n\r\n  moment.locale('zh-cn')\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        advanced: false,\r\n        dataSource: [],\r\n        pagination: {\r\n          defaultPageSize: 10,\r\n          defaultCurrent: 1,\r\n          pageSizeOptions: ['10', '20', '30', '40', '100'],\r\n          showQuickJumper: true,\r\n          showSizeChanger: true,\r\n          showTotal: (total, range) => `显示 ${range[0]} ~ ${range[1]} 条记录，共 ${total} 条记录`\r\n        },\r\n        loading: true,\r\n        tableLoading: true\r\n      }\r\n    },\r\n    computed: {\r\n      columns() {\r\n        return [{\r\n          title: '请求时间',\r\n          dataIndex: 'timestamp',\r\n          align:\"center\",\r\n          customRender(text) {\r\n            return moment(text).format('YYYY-MM-DD HH:mm:ss')\r\n          }\r\n        }, {\r\n          title: '请求方法',\r\n          dataIndex: 'request.method',\r\n          align:\"center\",\r\n          scopedSlots: { customRender: 'requestMethod' },\r\n          filters: [\r\n            { text: 'GET', value: 'GET' },\r\n            { text: 'POST', value: 'POST' },\r\n            { text: 'PUT', value: 'PUT' },\r\n            { text: 'DELETE', value: 'DELETE' }\r\n          ],\r\n          filterMultiple: true,\r\n          onFilter: (value, record) => record.request.method.includes(value)\r\n        }, {\r\n          title: '请求URL',\r\n          dataIndex: 'request.uri',\r\n          align:\"center\",\r\n          customRender(text) {\r\n            return text.split('?')[0]\r\n          }\r\n        }, {\r\n          title: '响应状态',\r\n          dataIndex: 'response.status',\r\n          align:\"center\",\r\n          scopedSlots: { customRender: 'responseStatus' }\r\n        }, {\r\n          title: '请求耗时',\r\n          dataIndex: 'timeTaken',\r\n          align:\"center\",\r\n          scopedSlots: { customRender: 'timeTaken' }\r\n        }]\r\n      }\r\n    },\r\n    mounted() {\r\n      this.fetch()\r\n    },\r\n    methods: {\r\n\r\n      handleClickUpdate() {\r\n        this.fetch()\r\n      },\r\n\r\n      handleTableChange() {\r\n        this.fetch()\r\n      },\r\n\r\n      fetch() {\r\n        this.tableLoading = true\r\n        getAction('actuator/httptrace').then((data) => {\r\n          let filterData = []\r\n          for (let d of data.traces) {\r\n            if (d.request.method !== 'OPTIONS' && d.request.uri.indexOf('httptrace') === -1) {\r\n              filterData.push(d)\r\n            }\r\n          }\r\n          this.dataSource = filterData\r\n        }).catch((e) => {\r\n          console.error(e)\r\n          this.$message.error('获取HTTP信息失败')\r\n        }).finally(() => {\r\n          this.loading = false\r\n          this.tableLoading = false\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n<style></style>\r\n"],"sourceRoot":"src/views/modules/monitor"}]}