{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js!C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\App.vue","mtime":1576760150153},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1570779245522},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\nimport zhCN from 'ant-design-vue/lib/locale-provider/zh_CN';\nimport enquireScreen from '@/utils/device';\nexport default {\n  data: function data() {\n    return {\n      locale: zhCN,\n      isRouterActive: true\n    };\n  },\n  provide: function provide() {\n    return {\n      reload: this.reload\n    };\n  },\n  created: function created() {\n    var that = this;\n    enquireScreen(function (deviceType) {\n      // tablet\n      if (deviceType === 0) {\n        that.$store.commit('TOGGLE_DEVICE', 'mobile');\n        that.$store.dispatch('setSidebar', false);\n      } // mobile\n      else if (deviceType === 1) {\n          that.$store.commit('TOGGLE_DEVICE', 'mobile');\n          that.$store.dispatch('setSidebar', false);\n        } else {\n          that.$store.commit('TOGGLE_DEVICE', 'desktop');\n          that.$store.dispatch('setSidebar', true);\n        }\n    });\n  },\n  methods: {\n    reload: function reload() {\n      var _this = this;\n\n      this.isRouterActive = false;\n      this.$nextTick(function () {\n        _this.isRouterActive = true;\n      });\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;AAQA,OAAA,IAAA,MAAA,0CAAA;AACA,OAAA,aAAA,MAAA,gBAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,IADA;AAEA,MAAA,cAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,OAPA,qBAOA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KAAA;AADA,KAAA;AAGA,GAXA;AAYA,EAAA,OAZA,qBAYA;AACA,QAAA,IAAA,GAAA,IAAA;AACA,IAAA,aAAA,CAAA,UAAA,UAAA,EAAA;AACA;AACA,UAAA,UAAA,KAAA,CAAA,EAAA;AACA,QAAA,IAAA,CAAA,MAAA,CAAA,MAAA,CAAA,eAAA,EAAA,QAAA;AACA,QAAA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA,KAAA;AACA,OAHA,CAIA;AAJA,WAKA,IAAA,UAAA,KAAA,CAAA,EAAA;AACA,UAAA,IAAA,CAAA,MAAA,CAAA,MAAA,CAAA,eAAA,EAAA,QAAA;AACA,UAAA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA,KAAA;AACA,SAHA,MAIA;AACA,UAAA,IAAA,CAAA,MAAA,CAAA,MAAA,CAAA,eAAA,EAAA,SAAA;AACA,UAAA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA,IAAA;AACA;AAEA,KAhBA,CAAA;AAiBA,GA/BA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AACA,WAAA,cAAA,GAAA,KAAA;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,cAAA,GAAA,IAAA;AACA,OAFA;AAGA;AANA;AAhCA,CAAA","sourcesContent":["<template>\r\n  <a-locale-provider :locale=\"locale\">\r\n    <div id=\"app\">\r\n      <router-view v-if=\"isRouterActive\" />\r\n    </div>\r\n  </a-locale-provider>\r\n</template>\r\n<script>\r\n  import zhCN from 'ant-design-vue/lib/locale-provider/zh_CN'\r\n  import enquireScreen from '@/utils/device'\r\n\r\n  export default {\r\n    data () {\r\n      return {\r\n        locale: zhCN,\r\n        isRouterActive:true\r\n      }\r\n    },\r\n    provide(){\r\n      return {\r\n        reload:this.reload\r\n      }\r\n    },\r\n    created () {\r\n      let that = this\r\n      enquireScreen(deviceType => {\r\n        // tablet\r\n        if (deviceType === 0) {\r\n          that.$store.commit('TOGGLE_DEVICE', 'mobile')\r\n          that.$store.dispatch('setSidebar', false)\r\n        }\r\n        // mobile\r\n        else if (deviceType === 1) {\r\n          that.$store.commit('TOGGLE_DEVICE', 'mobile')\r\n          that.$store.dispatch('setSidebar', false)\r\n        }\r\n        else {\r\n          that.$store.commit('TOGGLE_DEVICE', 'desktop')\r\n          that.$store.dispatch('setSidebar', true)\r\n        }\r\n\r\n      })\r\n    },\r\n    methods:{\r\n      reload(){\r\n        this.isRouterActive = false;\r\n        this.$nextTick(()=>{\r\n          this.isRouterActive = true\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n  #app {\r\n    height: 100%;\r\n  }\r\n</style>"],"sourceRoot":"src"}]}