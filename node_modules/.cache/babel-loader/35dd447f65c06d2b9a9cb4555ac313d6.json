{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js!C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\components\\menu\\Contextmenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\components\\menu\\Contextmenu.vue","mtime":1577616665310},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1570779245522},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Contextmenu',\n  props: {\n    visible: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    itemList: {\n      type: Array,\n      required: true,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      left: 0,\n      top: 0,\n      target: null,\n      selectedKeys: []\n    };\n  },\n  computed: {\n    style: function style() {\n      return {\n        left: this.left + 'px',\n        top: this.top + 'px'\n      };\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    window.addEventListener('mousedown', function (e) {\n      return _this.closeMenu(e);\n    });\n    window.addEventListener('contextmenu', function (e) {\n      return _this.setPosition(e);\n    });\n  },\n  methods: {\n    closeMenu: function closeMenu(e) {\n      if (['menuitemicon', 'menuitem'].indexOf(e.target.getAttribute('role')) < 0) {\n        this.$emit('update:visible', false);\n      }\n    },\n    setPosition: function setPosition(e) {\n      this.left = e.clientX;\n      this.top = e.clientY;\n      this.target = e.target;\n    },\n    handleClick: function handleClick(_ref) {\n      var key = _ref.key;\n      this.$emit('select', key, this.target);\n      this.$emit('update:visible', false);\n    }\n  }\n};",{"version":3,"sources":["Contextmenu.vue"],"names":[],"mappings":";;;;;;;;AASA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KADA;AAMA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA,IAFA;AAGA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAHA;AANA,GAFA;AAcA,EAAA,IAdA,kBAcA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,CADA;AAEA,MAAA,GAAA,EAAA,CAFA;AAGA,MAAA,MAAA,EAAA,IAHA;AAIA,MAAA,YAAA,EAAA;AAJA,KAAA;AAMA,GArBA;AAsBA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA;AACA,QAAA,IAAA,EAAA,KAAA,IAAA,GAAA,IADA;AAEA,QAAA,GAAA,EAAA,KAAA,GAAA,GAAA;AAFA,OAAA;AAIA;AANA,GAtBA;AA8BA,EAAA,OA9BA,qBA8BA;AAAA;;AACA,IAAA,MAAA,CAAA,gBAAA,CAAA,WAAA,EAAA,UAAA,CAAA;AAAA,aAAA,KAAA,CAAA,SAAA,CAAA,CAAA,CAAA;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,gBAAA,CAAA,aAAA,EAAA,UAAA,CAAA;AAAA,aAAA,KAAA,CAAA,WAAA,CAAA,CAAA,CAAA;AAAA,KAAA;AACA,GAjCA;AAkCA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,CADA,EACA;AACA,UAAA,CAAA,cAAA,EAAA,UAAA,EAAA,OAAA,CAAA,CAAA,CAAA,MAAA,CAAA,YAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA;AACA,aAAA,KAAA,CAAA,gBAAA,EAAA,KAAA;AACA;AACA,KALA;AAMA,IAAA,WANA,uBAMA,CANA,EAMA;AACA,WAAA,IAAA,GAAA,CAAA,CAAA,OAAA;AACA,WAAA,GAAA,GAAA,CAAA,CAAA,OAAA;AACA,WAAA,MAAA,GAAA,CAAA,CAAA,MAAA;AACA,KAVA;AAWA,IAAA,WAXA,6BAWA;AAAA,UAAA,GAAA,QAAA,GAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,GAAA,EAAA,KAAA,MAAA;AACA,WAAA,KAAA,CAAA,gBAAA,EAAA,KAAA;AACA;AAdA;AAlCA,CAAA","sourcesContent":["<template>\r\n  <a-menu :style=\"style\" class=\"contextmenu\" v-show=\"visible\" @click=\"handleClick\" :selectedKeys=\"selectedKeys\">\r\n    <a-menu-item :key=\"item.key\" v-for=\"item in itemList\">\r\n      <a-icon role=\"menuitemicon\" v-if=\"item.icon\" :type=\"item.icon\" />{{ item.text }}\r\n    </a-menu-item>\r\n  </a-menu>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Contextmenu',\r\n  props: {\r\n    visible: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n    itemList: {\r\n      type: Array,\r\n      required: true,\r\n      default: () => []\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      left: 0,\r\n      top: 0,\r\n      target: null,\r\n      selectedKeys: []\r\n    }\r\n  },\r\n  computed: {\r\n    style () {\r\n      return {\r\n        left: this.left + 'px',\r\n        top: this.top + 'px'\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    window.addEventListener('mousedown', e => this.closeMenu(e))\r\n    window.addEventListener('contextmenu', e => this.setPosition(e))\r\n  },\r\n  methods: {\r\n    closeMenu (e) {\r\n      if (['menuitemicon', 'menuitem'].indexOf(e.target.getAttribute('role')) < 0) {\r\n        this.$emit('update:visible', false)\r\n      }\r\n    },\r\n    setPosition (e) {\r\n      this.left = e.clientX\r\n      this.top = e.clientY\r\n      this.target = e.target\r\n    },\r\n    handleClick ({key}) {\r\n      this.$emit('select', key, this.target)\r\n      this.$emit('update:visible', false)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .contextmenu{\r\n    position: fixed;\r\n    z-index: 1;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n    box-shadow: 2px 2px 10px #aaaaaa !important;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components/menu"}]}