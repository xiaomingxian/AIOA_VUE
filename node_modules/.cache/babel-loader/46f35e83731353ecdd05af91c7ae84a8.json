{"remainingRequest":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\thread-loader\\dist\\cjs.js!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecg\\JCheckbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecg\\JCheckbox.vue","mtime":1568535200000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1568345893000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\nexport default {\n  name: 'JCheckbox',\n  props: {\n    value: {\n      type: String,\n      required: false\n    },\n\n    /*label value*/\n    options: {\n      type: Array,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      checkboxArray: !this.value ? [] : this.value.split(\",\")\n    };\n  },\n  watch: {\n    value: function value(val) {\n      if (!val) {\n        this.checkboxArray = [];\n      } else {\n        this.checkboxArray = this.value.split(\",\");\n      }\n    }\n  },\n  methods: {\n    onChange: function onChange(checkedValues) {\n      this.$emit('change', checkedValues.join(\",\"));\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n};",null]}