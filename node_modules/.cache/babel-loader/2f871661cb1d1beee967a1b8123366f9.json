{"remainingRequest":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\PasswordModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\PasswordModal.vue","mtime":1568535265000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1568345858000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568345883000},{"path":"D:\\project\\workspaceideaIU\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1568345696000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { changPassword } from '@/api/api';\nexport default {\n  name: \"PasswordModal\",\n  data: function data() {\n    return {\n      visible: false,\n      confirmLoading: false,\n      confirmDirty: false,\n      validatorRules: {\n        password: {\n          rules: [{\n            required: true,\n            pattern: /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/,\n            message: '密码由8位数字、大小写字母和特殊符号组成!'\n          }, {\n            validator: this.validateToNextPassword\n          }]\n        },\n        confirmpassword: {\n          rules: [{\n            required: true,\n            message: '请重新输入登陆密码!'\n          }, {\n            validator: this.compareToFirstPassword\n          }]\n        }\n      },\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      form: this.$form.createForm(this)\n    };\n  },\n  created: function created() {\n    console.log(\"created\");\n  },\n  methods: {\n    show: function show(username) {\n      var _this = this;\n\n      this.form.resetFields();\n      this.visible = true;\n      this.model.username = username;\n      this.$nextTick(function () {\n        _this.form.setFieldsValue({\n          username: username\n        });\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false;\n      this.selectedRole = [];\n    },\n    handleSubmit: function handleSubmit() {\n      var _this2 = this;\n\n      // 触发表单验证\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          _this2.confirmLoading = true;\n          var formData = Object.assign(_this2.model, values);\n          changPassword(formData).then(function (res) {\n            if (res.success) {\n              _this2.$message.success(res.message);\n\n              _this2.$emit('ok');\n            } else {\n              _this2.$message.warning(res.message);\n            }\n          }).finally(function () {\n            _this2.confirmLoading = false;\n\n            _this2.close();\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    validateToNextPassword: function validateToNextPassword(rule, value, callback) {\n      var form = this.form;\n      var confirmpassword = form.getFieldValue('confirmpassword');\n      console.log(\"confirmpassword==>\", confirmpassword);\n\n      if (value && confirmpassword && value !== confirmpassword) {\n        callback('两次输入的密码不一样！');\n      }\n\n      if (value && this.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    },\n    compareToFirstPassword: function compareToFirstPassword(rule, value, callback) {\n      var form = this.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入的密码不一样！');\n      } else {\n        callback();\n      }\n    },\n    handleConfirmBlur: function handleConfirmBlur(e) {\n      var value = e.target.value;\n      this.confirmDirty = this.confirmDirty || !!value;\n    }\n  }\n};",{"version":3,"sources":["PasswordModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,SAAA,aAAA,QAAA,WAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,cAAA,EAAA,KAFA;AAGA,MAAA,YAAA,EAAA,KAHA;AAIA,MAAA,cAAA,EAAA;AACA,QAAA,QAAA,EAAA;AACA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,QAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA,oEAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WAAA,EAIA;AACA,YAAA,SAAA,EAAA,KAAA;AADA,WAJA;AADA,SADA;AAUA,QAAA,eAAA,EAAA;AACA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,QAAA,EAAA,IADA;AACA,YAAA,OAAA,EAAA;AADA,WAAA,EAEA;AACA,YAAA,SAAA,EAAA,KAAA;AADA,WAFA;AADA;AAVA,OAJA;AAuBA,MAAA,KAAA,EAAA,EAvBA;AAyBA,MAAA,QAAA,EAAA;AACA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SADA;AAEA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AAFA,OAzBA;AA6BA,MAAA,UAAA,EAAA;AACA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SADA;AAEA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AAFA,OA7BA;AAiCA,MAAA,IAAA,EAAA,KAAA,KAAA,CAAA,UAAA,CAAA,IAAA;AAjCA,KAAA;AAmCA,GAtCA;AAuCA,EAAA,OAvCA,qBAuCA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,SAAA;AACA,GAzCA;AA2CA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,gBACA,QADA,EACA;AAAA;;AACA,WAAA,IAAA,CAAA,WAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,QAAA,GAAA,QAAA;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,cAAA,CAAA;AAAA,UAAA,QAAA,EAAA;AAAA,SAAA;AACA,OAFA;AAGA,KARA;AASA,IAAA,KATA,mBASA;AACA,WAAA,KAAA,CAAA,OAAA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,WAAA,aAAA,GAAA,KAAA;AACA,WAAA,YAAA,GAAA,EAAA;AACA,KAdA;AAeA,IAAA,YAfA,0BAeA;AAAA;;AACA;AACA,WAAA,IAAA,CAAA,cAAA,CAAA,UAAA,GAAA,EAAA,MAAA,EAAA;AACA,YAAA,CAAA,GAAA,EAAA;AACA,UAAA,MAAA,CAAA,cAAA,GAAA,IAAA;AACA,cAAA,QAAA,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAAA;AACA,UAAA,aAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,GAAA,CAAA,OAAA,EAAA;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA;;AACA,cAAA,MAAA,CAAA,KAAA,CAAA,IAAA;AACA,aAHA,MAGA;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AACA;AACA,WAPA,EAOA,OAPA,CAOA,YAAA;AACA,YAAA,MAAA,CAAA,cAAA,GAAA,KAAA;;AACA,YAAA,MAAA,CAAA,KAAA;AACA,WAVA;AAWA;AACA,OAhBA;AAiBA,KAlCA;AAmCA,IAAA,YAnCA,0BAmCA;AACA,WAAA,KAAA;AACA,KArCA;AAsCA,IAAA,sBAtCA,kCAsCA,IAtCA,EAsCA,KAtCA,EAsCA,QAtCA,EAsCA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA;AACA,UAAA,eAAA,GAAA,IAAA,CAAA,aAAA,CAAA,iBAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,oBAAA,EAAA,eAAA;;AACA,UAAA,KAAA,IAAA,eAAA,IAAA,KAAA,KAAA,eAAA,EAAA;AACA,QAAA,QAAA,CAAA,aAAA,CAAA;AACA;;AACA,UAAA,KAAA,IAAA,KAAA,YAAA,EAAA;AACA,QAAA,IAAA,CAAA,cAAA,CAAA,CAAA,SAAA,CAAA,EAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AACA;;AACA,MAAA,QAAA;AACA,KAjDA;AAkDA,IAAA,sBAlDA,kCAkDA,IAlDA,EAkDA,KAlDA,EAkDA,QAlDA,EAkDA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA;;AACA,UAAA,KAAA,IAAA,KAAA,KAAA,IAAA,CAAA,aAAA,CAAA,UAAA,CAAA,EAAA;AACA,QAAA,QAAA,CAAA,aAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA;AACA;AACA,KAzDA;AA0DA,IAAA,iBA1DA,6BA0DA,CA1DA,EA0DA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA;AACA,WAAA,YAAA,GAAA,KAAA,YAAA,IAAA,CAAA,CAAA,KAAA;AACA;AA7DA;AA3CA,CAAA","sourcesContent":["<template>\r\n  <a-modal\r\n    title=\"重新设定密码\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleSubmit\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\"\r\n    style=\"top:20px;\"\r\n  >\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <a-form-item label=\"用户账号\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input placeholder=\"请输入用户账号\" v-decorator=\"[ 'username', {}]\" :readOnly=\"true\"/>\r\n        </a-form-item>\r\n\r\n        <a-form-item label=\"登陆密码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" hasFeedback >\r\n          <a-input type=\"password\" placeholder=\"请输入登陆密码\" v-decorator=\"[ 'password', validatorRules.password]\" />\r\n        </a-form-item>\r\n\r\n        <a-form-item label=\"确认密码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" hasFeedback >\r\n          <a-input type=\"password\" @blur=\"handleConfirmBlur\" placeholder=\"请重新输入登陆密码\" v-decorator=\"[ 'confirmpassword', validatorRules.confirmpassword]\"/>\r\n        </a-form-item>\r\n\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import {changPassword} from '@/api/api'\r\n\r\n  export default {\r\n    name: \"PasswordModal\",\r\n    data () {\r\n      return {\r\n        visible: false,\r\n        confirmLoading: false,\r\n        confirmDirty: false,\r\n        validatorRules:{\r\n          password:{\r\n            rules: [{\r\n              required: true,\r\n              pattern:/^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/,\r\n              message: '密码由8位数字、大小写字母和特殊符号组成!'\r\n            }, {\r\n              validator: this.validateToNextPassword,\r\n            }],\r\n          },\r\n          confirmpassword:{\r\n            rules: [{\r\n              required: true, message: '请重新输入登陆密码!',\r\n            }, {\r\n              validator: this.compareToFirstPassword,\r\n            }],\r\n          },\r\n        },\r\n\r\n        model: {},\r\n\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n        form:this.$form.createForm(this)\r\n      }\r\n    },\r\n    created () {\r\n      console.log(\"created\");\r\n    },\r\n\r\n    methods: {\r\n      show (username) {\r\n        this.form.resetFields();\r\n        this.visible = true;\r\n        this.model.username = username;\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue({username:username});\r\n        });\r\n      },\r\n      close () {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n        this.disableSubmit = false;\r\n        this.selectedRole = [];\r\n      },\r\n      handleSubmit () {\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            this.confirmLoading = true;\r\n            let formData = Object.assign(this.model, values);\r\n            changPassword(formData).then((res)=>{\r\n              if(res.success){\r\n                this.$message.success(res.message);\r\n                this.$emit('ok');\r\n              }else{\r\n                this.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              this.confirmLoading = false;\r\n              this.close();\r\n            });\r\n          }\r\n        })\r\n      },\r\n      handleCancel () {\r\n        this.close()\r\n      },\r\n      validateToNextPassword  (rule, value, callback) {\r\n        const form = this.form;\r\n        const confirmpassword=form.getFieldValue('confirmpassword');\r\n        console.log(\"confirmpassword==>\",confirmpassword);\r\n        if (value && confirmpassword && value !== confirmpassword) {\r\n          callback('两次输入的密码不一样！');\r\n        }\r\n        if (value && this.confirmDirty) {\r\n          form.validateFields(['confirm'], { force: true })\r\n        }\r\n        callback();\r\n      },\r\n      compareToFirstPassword  (rule, value, callback) {\r\n        const form = this.form;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n          callback('两次输入的密码不一样！');\r\n        } else {\r\n          callback()\r\n        }\r\n      },\r\n      handleConfirmBlur  (e) {\r\n        const value = e.target.value\r\n        this.confirmDirty = this.confirmDirty || !!value\r\n      }\r\n    }\r\n  }\r\n</script>"],"sourceRoot":"src/views/system/modules"}]}