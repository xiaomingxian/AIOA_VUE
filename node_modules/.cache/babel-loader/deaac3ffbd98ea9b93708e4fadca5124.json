{"remainingRequest":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js!C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xxm\\work\\jd\\fore\\src\\views\\mytask\\modules\\doTaskModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xxm\\work\\jd\\fore\\src\\views\\mytask\\modules\\doTaskModal.vue","mtime":1574327035159},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1570779245522},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1570779194464},{"path":"C:\\xxm\\work\\jd\\fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1570779225726}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAction, postAction } from \"../../../api/manage\";\nimport Vue from 'vue';\nimport axios from 'axios';\nimport { ACCESS_TOKEN } from \"../../../store/mutation-types\";\nimport { JeecgListMixin } from \"../../../mixins/JeecgListMixin2\";\nexport default {\n  name: \"doTaskModal\",\n  mixins: [JeecgListMixin],\n  components: {},\n  data: function data() {\n    return {\n      dataSource: [],\n      columns: [{\n        title: '用户姓名',\n        align: \"center\",\n        dataIndex: 'username'\n      }, {\n        title: '所在部门',\n        align: \"center\",\n        dataIndex: 'departs'\n      }],\n      columns2: [{\n        title: '节点名称',\n        align: \"center\",\n        dataIndex: 'name'\n      }, {\n        title: '操作',\n        dataIndex: 'action',\n        align: \"center\",\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      jumpType: '',\n      dest: '',\n      //目标节点\n      destTaskForm: '',\n      //目标节点的表单属性\n      task: '',\n      //task属性\n      selectedRowKeys: [],\n      //选中的办理人\n      nextTasks: [],\n      //左侧列表\n      nextUsers: [],\n      //候选人列表\n      options: [\"同意\", \"不同意\"],\n      comment: '',\n      //意见\n      //是否是单选\n      isRadio: false,\n      //页面可见控制\n      isNextTask: false,\n      isCommentDo: false,\n      isGongWen: false,\n      isDownloadAll: false,\n      isBack: false,\n      isDrafter: false,\n      isBackTask: false,\n      confirmLoading: false,\n      taskId: '',\n      title: \"操作\",\n      visible: false,\n      url: {\n        nextFormUrl: window._CONFIG['domianURL'] + '/wf/task/nextForm',\n        doTaskUsers: window._CONFIG['domianURL'] + '/sys/user/getMsgByRoleName',\n        backUrl: window._CONFIG['domianURL'] + '/wf/task/backDone',\n        endProUrl: window._CONFIG['domianURL'] + '/wf/task/endProcess',\n        showBackAct: window._CONFIG['domianURL'] + '/wf/task/showBackAct',\n        getActForm: window._CONFIG['domianURL'] + '/wf/task/getActForm',\n        backDone: window._CONFIG['domianURL'] + '/wf/task/jump'\n      }\n    };\n  },\n  created: function created() {},\n  methods: {\n    //页面初始化内容查询\n    showTask: function showTask(record) {\n      //数据置空\n      this.dataInit();\n      this.task = record;\n      var that = this;\n      this.taskId = record.id;\n      axios.get(this.url.nextFormUrl, {\n        params: {\n          taskId: this.taskId\n        },\n        headers: {\n          'X-Access-Token': Vue.ls.get(ACCESS_TOKEN)\n        }\n      }).then(function (response) {\n        if (response.data.success) {\n          that.nextTasks = response.data.result;\n        } else {\n          that.$message.error(response.data.message);\n        }\n      });\n      this.visible = true;\n    },\n    //下一环节-候选人\n    doTaskUsers: function doTaskUsers(v) {\n      this.selectedRowKeys = [];\n\n      if (v.isMultAssignee) {\n        this.isRadio = false;\n      } else {\n        this.isRadio = true;\n      }\n\n      var roleName = '';\n\n      if (v.candidates.indexOf(\"'\") >= 0) {\n        roleName = v.candidates.substring(1, v.candidates.length - 1);\n      }\n\n      var that = this;\n      axios.get(this.url.doTaskUsers, {\n        params: {\n          roleName: roleName\n        },\n        headers: {\n          'X-Access-Token': Vue.ls.get(ACCESS_TOKEN)\n        }\n      }).then(function (response) {\n        if (response.data.success) {\n          that.nextUsers = response.data.result;\n          that.dataSource = response.data.result;\n        } else {\n          that.$message.error(response.data.message);\n        }\n      });\n      this.showAndClose('isNextTask');\n    },\n    //意见\n    commentDo: function commentDo() {\n      //去后台查 快捷意见\n      this.showAndClose('isCommentDo');\n    },\n    //公文\n    gongWen: function gongWen() {},\n    save: function save() {\n      this.close();\n    },\n    //展示可退回节点\n    showBack: function showBack(type) {\n      var that = this;\n      this.jumpType = type == 'all' ? '跳转' : '回退';\n      axios.get(this.url.showBackAct, {\n        params: {\n          processDefinitionId: this.task.processDefinitionId,\n          type: type,\n          processInstanceId: this.task.processInstanceId,\n          taskDefinitionKey: this.task.taskDefinitionKey\n        },\n        headers: {\n          'X-Access-Token': Vue.ls.get(ACCESS_TOKEN)\n        }\n      }).then(function (response) {\n        if (response.data.success) {\n          that.dataSource = response.data.result; // that.$message.success(response.data.message)\n        } else {\n          that.$message.error(response.data.message);\n        }\n      });\n      this.showAndClose('isBack');\n    },\n    //确定回退\n    backConfirm: function backConfirm(record) {\n      var that = this;\n      this.dest = record;\n\n      if (this.isDrafter) {\n        //直接退回\n        postAction(this.url.backDone, {\n          processDefinitionId: this.task.processDefinitionId,\n          taskId: this.task.id,\n          executionId: this.task.executionId,\n          processInstanceId: this.task.processInstanceId,\n          currActDefKey: this.task.taskDefinitionKey,\n          destActDefKey: record.id,\n          vars: {\n            drafter: [this.task.drafterId]\n          }\n        }).then(function (response) {\n          if (response.success) {\n            that.dataSource = response.result;\n            that.$message.success(response.message);\n            that.handleCancel();\n          } else {\n            that.$message.error(response.message);\n          }\n        });\n      } else {\n        //去查办理人\n        this.doTaskUsers(this.destTaskForm);\n        this.showAndClose('isNextTask');\n        this.isBackTask = true;\n      }\n    },\n    //非拟稿人回退\n    backTask: function backTask() {\n      var that = this;\n\n      if (this.selectedRowKeys.length == 0) {\n        this.$message.error('请选择办理人');\n        return;\n      } //解析办理人属性\n\n\n      var ass = JSON.stringify(this.destTaskForm.assignee);\n      var vars = {};\n      var assignee = ass.split('{')[1].split('}')[0];\n      vars[assignee] = this.selectedRowKeys;\n      console.log(\"----------------<<<<<<<<<<<<<\" + JSON.stringify(vars));\n      postAction(this.url.backDone, {\n        processDefinitionId: this.task.processDefinitionId,\n        taskId: this.task.id,\n        executionId: this.task.executionId,\n        processInstanceId: this.task.processInstanceId,\n        currActDefKey: this.task.taskDefinitionKey,\n        destActDefKey: this.dest.id,\n        vars: vars\n      }).then(function (res) {\n        if (res.success) {\n          that.$message.success(res.message);\n          that.handleCancel();\n        } else {\n          that.$message.error(res.message);\n        }\n      });\n    },\n    //展示节点表单属性\n    showForm: function showForm(record) {\n      var that = this;\n      getAction(this.url.getActForm, {\n        processDefinitionId: this.task.processDefinitionId,\n        taskdefid: record.id\n      }).then(function (res) {\n        that.destTaskForm = res.result;\n\n        if (res.result.assignee.indexOf(\"drafter\") >= 0) {\n          //说明是退回到拟稿人--获取此任务的拟稿人-重新写入isDrafter\n          that.isDrafter = true;\n        }\n      });\n    },\n    downloadAll: function downloadAll() {},\n    handleCancel: function handleCancel() {\n      this.dataInit();\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false; //刷新父页面\n\n      this.$emit('reload_todo');\n    },\n    //选择快捷意见\n    optionSelect: function optionSelect(option) {\n      this.comment += option;\n      console.log(option);\n    },\n    //清空意见\n    clearOptions: function clearOptions() {\n      this.comment = '';\n    },\n    //强制办结\n    fineshedByHand: function fineshedByHand(e) {\n      var that = this;\n      getAction(this.url.endProUrl, {\n        processId: this.task.processInstanceId\n      }).then(function (res) {\n        if (res.success) {\n          that.$message.success(res.data.message);\n        } else {\n          that.$message.error(res.data.message);\n        }\n      });\n    },\n    cancel: function cancel(e) {},\n    //打开和关闭窗口\n    showAndClose: function showAndClose(name) {\n      var list = ['isNextTask', 'isCommentDo', 'isGongWen', 'isDownloadAll', 'isBack', 'isBackTask'];\n\n      for (var i = 0; i < list.length; i++) {\n        var v = list[i];\n\n        if (v == name) {\n          this[name] = true;\n        } else {\n          this[v] = false;\n        }\n      }\n    },\n    //所有值置空\n    dataInit: function dataInit() {\n      this.selectedRowKeys = [];\n      this.dest = '';\n      this.destTaskForm = '';\n      this.nextTasks = [];\n      this.nextUsers = [];\n      this.comment = '';\n      this.taskId = '';\n    }\n  }\n};",{"version":3,"sources":["doTaskModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"save\"\r\n    @cancel=\"handleCancel\"\r\n    destroyOnClose\r\n    okText=\"保存\"\r\n    cancelText=\"取消\">\r\n\r\n\r\n    <a-layout id=\"components-layout-demo-top-side-2\">\r\n      <a-layout>\r\n        <a-layout-sider width=\"200\" style=\"background: #fff\">\r\n          <a-menu\r\n            mode=\"inline\"\r\n            :defaultSelectedKeys=\"['1']\"\r\n            :defaultOpenKeys=\"['sub1']\"\r\n            :style=\"{ height: '100%', borderRight: 80 }\">\r\n\r\n            <!--...................................................................................................-->\r\n            <a-sub-menu key=\"sub1\">\r\n\r\n              <span slot=\"title\"><a-icon type=\"user\"/>下一任务</span>\r\n\r\n              <a-menu-item :key=\"v.taskdefname\" v-for=\"v in nextTasks\" @click=\"doTaskUsers(v)\">{{v.taskdefname}}\r\n              </a-menu-item>\r\n\r\n            </a-sub-menu>\r\n            <!--...................................................................................................-->\r\n\r\n            <a-menu-item key=\"commentDo\" @click=\"commentDo\">\r\n              <a-icon type=\"laptop\"/>\r\n              填写意见\r\n            </a-menu-item>\r\n            <!--...................................................................................................-->\r\n\r\n            <a-menu-item @click=\"gongWen\" key=\"gongWen\">\r\n              <a-icon type=\"notification\"/>\r\n              引入公文附件\r\n            </a-menu-item>\r\n            <!--...................................................................................................-->\r\n\r\n            <a-menu-item @click=\"downloadAll\" key=\"downloadAll\">\r\n              <a-icon type=\"notification\"/>\r\n              下载所有附件\r\n            </a-menu-item>\r\n\r\n            <!--...................................................................................................-->\r\n\r\n            <a-menu-item key=\"fineshedByHand\">\r\n              <a-icon type=\"notification\"/>\r\n              强制办结\r\n\r\n              <a-popconfirm\r\n                title=\"是否强制办结?\"\r\n                @confirm=\"fineshedByHand\"\r\n                @cancel=\"cancel\"\r\n                okText=\"确定\"\r\n                cancelText=\"取消\">\r\n                <a href=\"#\">强制办结</a>\r\n              </a-popconfirm>\r\n\r\n            </a-menu-item>\r\n            <a-menu-item @click=\"showBack('back')\" key=\"back\">\r\n              <a-icon type=\"notification\"/>\r\n              退回\r\n            </a-menu-item>\r\n\r\n            <a-menu-item @click=\"showBack('all')\" key=\"backAll\">\r\n              <a-icon type=\"notification\"/>\r\n              节点跳转\r\n            </a-menu-item>\r\n\r\n\r\n          </a-menu>\r\n        </a-layout-sider>\r\n        <!--.........................//////////////////////////////////////////..........................................................................-->\r\n\r\n        <a-layout style=\"padding: 2px 2px 2px\">\r\n          <a-layout-content\r\n            :style=\"{ background: '#fff', padding: '10px', margin: 0, minHeight: '280px' }\">\r\n\r\n            <!--下一办理人-->\r\n            <div v-if=\"isNextTask\">\r\n              <div v-if=\"isRadio\">\r\n                <a-table\r\n                  ref=\"table\"\r\n                  size=\"middle\"\r\n                  bordered\r\n                  rowKey=\"id\"\r\n                  :columns=\"columns\"\r\n                  :dataSource=\"dataSource\"\r\n                  :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange,type:'radio'}\"\r\n                >\r\n                </a-table>\r\n                <a-button v-if=\"isBackTask\" @click=\"backTask\">{{jumpType}}</a-button>\r\n              </div>\r\n              <div v-if=\"!isRadio\">\r\n                <a-table\r\n                  ref=\"table\"\r\n                  size=\"middle\"\r\n                  bordered\r\n                  rowKey=\"id\"\r\n                  :columns=\"columns\"\r\n                  :dataSource=\"dataSource\"\r\n                  :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange,type:'checkbox'}\"\r\n                >\r\n                </a-table>\r\n                <a-button v-if=\"isBackTask\" @click=\"backTask\">{{jumpType}}</a-button>\r\n              </div>\r\n            </div>\r\n\r\n            <div v-if=\"isCommentDo\">\r\n\r\n              <a-select style=\"width: 400px\" @change=\"optionSelect\" placeholder=\"请选择你的意见\">\r\n                <a-select-option v-for=\"item in options\" :value=\"item\">{{item}}</a-select-option>\r\n              </a-select>\r\n              &nbsp;\r\n              <a-button type=\"primary\" @click=\"clearOptions\">清空意见框</a-button>\r\n\r\n              <textarea autofocus=\"autofocus\" contenteditable=\"true\" rows=\"20\" cols=\"82\" v-model=\"comment\"></textarea>\r\n            </div>\r\n\r\n            <div v-if=\"isBack\">\r\n              <a-table\r\n                ref=\"table\"\r\n                size=\"middle\"\r\n                bordered\r\n                rowKey=\"id\"\r\n                :columns=\"columns2\"\r\n                :dataSource=\"dataSource\">\r\n\r\n                <span slot=\"action\" slot-scope=\"text, record\">\r\n                  <a-popconfirm\r\n                    :title=\"'是否'+jumpType+'?'\"\r\n                    @confirm=\"backConfirm(record)\"\r\n                    @cancel=\"cancel\"\r\n                    okText=\"确定\"\r\n                    cancelText=\"取消\">\r\n                    <a @click=\"showForm(record)\">{{jumpType}}</a>\r\n                  </a-popconfirm>\r\n                </span>\r\n              </a-table>\r\n            </div>\r\n          </a-layout-content>\r\n        </a-layout>\r\n      </a-layout>\r\n    </a-layout>\r\n\r\n  </a-modal>\r\n</template>\r\n\r\n\r\n<script>\r\n  import {getAction, postAction} from \"../../../api/manage\";\r\n  import Vue from 'vue'\r\n  import axios from 'axios'\r\n  import {ACCESS_TOKEN} from \"../../../store/mutation-types\";\r\n  import {JeecgListMixin} from \"../../../mixins/JeecgListMixin2\";\r\n\r\n\r\n  export default {\r\n    name: \"doTaskModal\",\r\n    mixins: [JeecgListMixin],\r\n    components: {},\r\n    data() {\r\n      return {\r\n        dataSource: [],\r\n        columns: [\r\n          {\r\n            title: '用户姓名',\r\n            align: \"center\",\r\n            dataIndex: 'username'\r\n          }, {\r\n            title: '所在部门',\r\n            align: \"center\",\r\n            dataIndex: 'departs'\r\n          }\r\n        ],\r\n        columns2: [\r\n          {\r\n            title: '节点名称',\r\n            align: \"center\",\r\n            dataIndex: 'name'\r\n          }, {\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            align: \"center\",\r\n            scopedSlots: {customRender: 'action'},\r\n          }\r\n        ]\r\n        ,\r\n        jumpType: '',\r\n        dest: '',//目标节点\r\n        destTaskForm: '',//目标节点的表单属性\r\n        task: '',//task属性\r\n        selectedRowKeys: [],//选中的办理人\r\n        nextTasks: [],//左侧列表\r\n        nextUsers: [],//候选人列表\r\n        options: [\"同意\", \"不同意\"],\r\n        comment: '',//意见\r\n        //是否是单选\r\n        isRadio: false,\r\n        //页面可见控制\r\n        isNextTask: false,\r\n        isCommentDo: false,\r\n        isGongWen: false,\r\n        isDownloadAll: false,\r\n        isBack: false,\r\n        isDrafter: false,\r\n        isBackTask: false,\r\n        confirmLoading: false,\r\n        taskId: '',\r\n        title: \"操作\",\r\n        visible: false,\r\n        url: {\r\n          nextFormUrl: window._CONFIG['domianURL'] + '/wf/task/nextForm',\r\n          doTaskUsers: window._CONFIG['domianURL'] + '/sys/user/getMsgByRoleName',\r\n          backUrl: window._CONFIG['domianURL'] + '/wf/task/backDone',\r\n          endProUrl: window._CONFIG['domianURL'] + '/wf/task/endProcess',\r\n          showBackAct: window._CONFIG['domianURL'] + '/wf/task/showBackAct',\r\n          getActForm: window._CONFIG['domianURL'] + '/wf/task/getActForm',\r\n          backDone: window._CONFIG['domianURL'] + '/wf/task/jump',\r\n        },\r\n      }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n      //页面初始化内容查询\r\n      showTask(record) {\r\n        //数据置空\r\n        this.dataInit()\r\n        this.task = record\r\n\r\n        let that = this\r\n\r\n        this.taskId = record.id\r\n        axios.get(this.url.nextFormUrl, {\r\n          params: {\r\n            taskId: this.taskId\r\n          },\r\n          headers: {\r\n            'X-Access-Token': Vue.ls.get(ACCESS_TOKEN)\r\n          }\r\n        }).then(function (response) {\r\n          if (response.data.success) {\r\n            that.nextTasks = response.data.result\r\n          } else {\r\n            that.$message.error(response.data.message)\r\n          }\r\n        })\r\n        this.visible = true\r\n      },\r\n      //下一环节-候选人\r\n      doTaskUsers(v) {\r\n\r\n        this.selectedRowKeys = []\r\n\r\n        if (v.isMultAssignee) {\r\n          this.isRadio = false\r\n        } else {\r\n          this.isRadio = true\r\n        }\r\n\r\n        var roleName = ''\r\n        if ((v.candidates).indexOf(\"'\") >= 0) {\r\n          roleName = (v.candidates).substring(1, (v.candidates).length - 1)\r\n        }\r\n\r\n        let that = this\r\n        axios.get(this.url.doTaskUsers, {\r\n          params: {\r\n            roleName: roleName\r\n          },\r\n          headers: {\r\n            'X-Access-Token': Vue.ls.get(ACCESS_TOKEN)\r\n          }\r\n        }).then(function (response) {\r\n          if (response.data.success) {\r\n            that.nextUsers = response.data.result\r\n            that.dataSource = response.data.result\r\n          } else {\r\n            that.$message.error(response.data.message)\r\n          }\r\n        })\r\n\r\n        this.showAndClose('isNextTask')\r\n      },\r\n      //意见\r\n      commentDo() {\r\n        //去后台查 快捷意见\r\n\r\n        this.showAndClose('isCommentDo')\r\n      },\r\n      //公文\r\n      gongWen() {\r\n      },\r\n      save() {\r\n        this.close()\r\n      },\r\n      //展示可退回节点\r\n      showBack(type) {\r\n        let that = this\r\n        this.jumpType = type == 'all' ? '跳转' : '回退'\r\n\r\n        axios.get(this.url.showBackAct, {\r\n          params: {\r\n            processDefinitionId: this.task.processDefinitionId,\r\n            type: type,\r\n            processInstanceId: this.task.processInstanceId,\r\n            taskDefinitionKey: this.task.taskDefinitionKey\r\n          },\r\n          headers: {\r\n            'X-Access-Token': Vue.ls.get(ACCESS_TOKEN)\r\n          }\r\n        }).then(function (response) {\r\n          if (response.data.success) {\r\n            that.dataSource = response.data.result\r\n            // that.$message.success(response.data.message)\r\n          } else {\r\n            that.$message.error(response.data.message)\r\n          }\r\n        })\r\n\r\n        this.showAndClose('isBack')\r\n      },\r\n      //确定回退\r\n      backConfirm(record) {\r\n        var that = this\r\n        this.dest = record\r\n        if (this.isDrafter) {\r\n          //直接退回\r\n          postAction(this.url.backDone, {\r\n            processDefinitionId: this.task.processDefinitionId,\r\n            taskId: this.task.id,\r\n            executionId: this.task.executionId,\r\n            processInstanceId: this.task.processInstanceId,\r\n            currActDefKey: this.task.taskDefinitionKey,\r\n            destActDefKey: record.id,\r\n            vars: {\r\n              drafter: [this.task.drafterId]\r\n            }\r\n          }).then(response => {\r\n            if (response.success) {\r\n              that.dataSource = response.result\r\n              that.$message.success(response.message)\r\n              that.handleCancel()\r\n            } else {\r\n              that.$message.error(response.message)\r\n            }\r\n          })\r\n        } else {\r\n          //去查办理人\r\n          this.doTaskUsers(this.destTaskForm)\r\n          this.showAndClose('isNextTask')\r\n          this.isBackTask = true\r\n        }\r\n      },\r\n      //非拟稿人回退\r\n      backTask() {\r\n        let that = this\r\n\r\n        if (this.selectedRowKeys.length == 0) {\r\n          this.$message.error('请选择办理人')\r\n          return\r\n        }\r\n        //解析办理人属性\r\n\r\n        var ass = JSON.stringify(this.destTaskForm.assignee)\r\n\r\n        var vars = {}\r\n        var assignee = ass.split('{')[1].split('}')[0]\r\n        vars[assignee] = this.selectedRowKeys\r\n        console.log(\"----------------<<<<<<<<<<<<<\"+JSON.stringify(vars))\r\n\r\n        postAction(this.url.backDone, {\r\n          processDefinitionId: this.task.processDefinitionId,\r\n          taskId: this.task.id,\r\n          executionId: this.task.executionId,\r\n          processInstanceId: this.task.processInstanceId,\r\n          currActDefKey: this.task.taskDefinitionKey,\r\n          destActDefKey: this.dest.id,\r\n          vars: vars\r\n        }).then(res => {\r\n          if (res.success) {\r\n            that.$message.success(res.message)\r\n            that.handleCancel()\r\n          } else {\r\n            that.$message.error(res.message)\r\n          }\r\n        })\r\n\r\n\r\n      },\r\n      //展示节点表单属性\r\n      showForm(record) {\r\n        let that = this\r\n        getAction(this.url.getActForm, {\r\n          processDefinitionId: this.task.processDefinitionId,\r\n          taskdefid: record.id\r\n        }).then(res => {\r\n          that.destTaskForm = res.result\r\n          if (res.result.assignee.indexOf(\"drafter\") >= 0) {\r\n            //说明是退回到拟稿人--获取此任务的拟稿人-重新写入isDrafter\r\n            that.isDrafter = true\r\n          }\r\n        })\r\n\r\n      },\r\n      downloadAll() {\r\n      },\r\n      handleCancel() {\r\n        this.dataInit()\r\n        this.$emit('close');\r\n        this.visible = false;\r\n        this.disableSubmit = false;\r\n        //刷新父页面\r\n        this.$emit('reload_todo')\r\n      },\r\n      //选择快捷意见\r\n      optionSelect(option) {\r\n        this.comment += option\r\n        console.log(option)\r\n      },\r\n      //清空意见\r\n      clearOptions() {\r\n        this.comment = ''\r\n      },\r\n      //强制办结\r\n      fineshedByHand(e) {\r\n        let that = this\r\n        getAction(this.url.endProUrl, {processId: this.task.processInstanceId}).then(res => {\r\n          if (res.success) {\r\n            that.$message.success(res.data.message)\r\n          } else {\r\n            that.$message.error(res.data.message)\r\n          }\r\n        })\r\n      },\r\n      cancel(e) {\r\n      },\r\n      //打开和关闭窗口\r\n      showAndClose(name) {\r\n        var list = ['isNextTask', 'isCommentDo', 'isGongWen', 'isDownloadAll', 'isBack', 'isBackTask']\r\n        for (var i = 0; i < list.length; i++) {\r\n          var v = list[i]\r\n          if (v == name) {\r\n            this[name] = true\r\n          } else {\r\n            this[v] = false\r\n          }\r\n        }\r\n      },\r\n      //所有值置空\r\n      dataInit() {\r\n        this.selectedRowKeys = []\r\n        this.dest = ''\r\n        this.destTaskForm = ''\r\n        this.nextTasks = []\r\n        this.nextUsers = []\r\n        this.comment = ''\r\n        this.taskId = ''\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .ant-menu:not(.ant-menu-horizontal) .ant-menu-item-selected {\r\n    /*background-color: white;*/\r\n  }\r\n\r\n</style>"],"sourceRoot":"src/views/mytask/modules"}]}